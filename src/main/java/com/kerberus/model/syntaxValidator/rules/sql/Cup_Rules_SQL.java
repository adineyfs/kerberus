
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20150326 (SVN rev 63)
//----------------------------------------------------

package com.kerberus.model.syntaxValidator.rules.sql;

import java_cup.runtime.*;
import java.util.LinkedList;
import java.util.HashSet;
import java.io.*;
import com.kerberus.model.syntaxValidator.rules.util.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20150326 (SVN rev 63) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class Cup_Rules_SQL extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public Cup_Rules_SQL() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public Cup_Rules_SQL(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Cup_Rules_SQL(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    "\000\234\000\002\002\004\000\002\011\004\000\002\011" +
    "\003\000\002\012\003\000\002\012\003\000\002\012\003" +
    "\000\002\013\003\000\002\014\005\000\002\014\006\000" +
    "\002\014\006\000\002\014\007\000\002\041\004\000\002" +
    "\041\003\000\002\042\005\000\002\042\004\000\002\042" +
    "\005\000\002\042\005\000\002\046\004\000\002\046\004" +
    "\000\002\046\004\000\002\046\005\000\002\046\005\000" +
    "\002\046\005\000\002\044\004\000\002\045\005\000\002" +
    "\045\003\000\002\043\005\000\002\015\004\000\002\015" +
    "\005\000\002\015\004\000\002\002\003\000\002\030\005" +
    "\000\002\030\003\000\002\017\004\000\002\017\003\000" +
    "\002\055\003\000\002\055\003\000\002\056\003\000\002" +
    "\056\004\000\002\057\005\000\002\057\003\000\002\057" +
    "\003\000\002\060\005\000\002\020\003\000\002\020\003" +
    "\000\002\020\003\000\002\020\003\000\002\021\006\000" +
    "\002\021\006\000\002\022\006\000\002\023\006\000\002" +
    "\024\006\000\002\025\004\000\002\025\004\000\002\025" +
    "\003\000\002\025\003\000\002\031\003\000\002\031\003" +
    "\000\002\032\003\000\002\032\003\000\002\032\003\000" +
    "\002\033\003\000\002\033\003\000\002\033\003\000\002" +
    "\061\005\000\002\061\006\000\002\061\006\000\002\061" +
    "\007\000\002\062\004\000\002\062\003\000\002\063\004" +
    "\000\002\065\004\000\002\065\004\000\002\066\004\000" +
    "\002\064\004\000\002\067\007\000\002\067\007\000\002" +
    "\067\006\000\002\067\004\000\002\067\004\000\002\071" +
    "\003\000\002\072\004\000\002\072\003\000\002\070\003" +
    "\000\002\074\005\000\002\074\003\000\002\074\003\000" +
    "\002\075\005\000\002\075\005\000\002\076\003\000\002" +
    "\076\003\000\002\076\003\000\002\073\003\000\002\073" +
    "\003\000\002\073\003\000\002\073\003\000\002\077\005" +
    "\000\002\100\005\000\002\101\003\000\002\101\003\000" +
    "\002\101\003\000\002\101\003\000\002\102\003\000\002" +
    "\102\003\000\002\102\003\000\002\102\003\000\002\102" +
    "\003\000\002\102\003\000\002\102\003\000\002\102\003" +
    "\000\002\102\003\000\002\103\007\000\002\103\004\000" +
    "\002\026\004\000\002\006\005\000\002\006\003\000\002" +
    "\003\003\000\002\005\003\000\002\005\003\000\002\007" +
    "\003\000\002\010\004\000\002\010\004\000\002\027\004" +
    "\000\002\004\003\000\002\047\005\000\002\047\003\000" +
    "\002\050\005\000\002\050\005\000\002\054\003\000\002" +
    "\035\005\000\002\036\003\000\002\036\003\000\002\040" +
    "\004\000\002\040\005\000\002\040\005\000\002\040\006" +
    "\000\002\016\004\000\002\037\005\000\002\037\003\000" +
    "\002\034\003\000\002\034\003\000\002\053\003\000\002" +
    "\053\003\000\002\053\003\000\002\053\003\000\002\053" +
    "\003\000\002\053\003\000\002\052\003\000\002\052\003" +
    "\000\002\052\003\000\002\052\003\000\002\052\003\000" +
    "\002\052\003\000\002\052\003\000\002\051\003\000\002" +
    "\051\003" });
=======
    "\000\232\000\002\002\004\000\002\011\004\000\002\011" +
=======
    "\000\227\000\002\002\004\000\002\011\004\000\002\011" +
>>>>>>> release-0.3_card_49
    "\003\000\002\012\003\000\002\012\003\000\002\012\003" +
    "\000\002\013\003\000\002\014\005\000\002\014\006\000" +
    "\002\014\006\000\002\014\007\000\002\036\004\000\002" +
    "\036\003\000\002\037\005\000\002\037\004\000\002\037" +
<<<<<<< HEAD
    "\005\000\002\037\005\000\002\037\005\000\002\045\006" +
    "\000\002\044\005\000\002\044\003\000\002\043\004\000" +
    "\002\043\004\000\002\043\004\000\002\043\005\000\002" +
    "\043\005\000\002\043\005\000\002\041\004\000\002\042" +
    "\005\000\002\042\003\000\002\040\005\000\002\015\004" +
    "\000\002\015\005\000\002\015\004\000\002\002\003\000" +
    "\002\025\005\000\002\025\003\000\002\017\004\000\002" +
    "\017\003\000\002\054\003\000\002\054\003\000\002\055" +
    "\003\000\002\055\004\000\002\056\005\000\002\056\003" +
    "\000\002\056\003\000\002\057\005\000\002\020\003\000" +
    "\002\021\006\000\002\021\006\000\002\022\004\000\002" +
    "\022\004\000\002\022\003\000\002\022\003\000\002\026" +
    "\003\000\002\026\003\000\002\027\003\000\002\027\003" +
    "\000\002\027\003\000\002\030\003\000\002\030\003\000" +
    "\002\030\003\000\002\060\005\000\002\060\006\000\002" +
    "\060\006\000\002\060\007\000\002\061\004\000\002\061" +
    "\003\000\002\062\004\000\002\064\004\000\002\064\004" +
    "\000\002\065\004\000\002\063\004\000\002\066\007\000" +
    "\002\066\007\000\002\066\006\000\002\066\004\000\002" +
    "\066\004\000\002\070\003\000\002\071\004\000\002\071" +
    "\003\000\002\067\003\000\002\073\005\000\002\073\003" +
    "\000\002\073\003\000\002\074\005\000\002\074\005\000" +
    "\002\075\003\000\002\075\003\000\002\075\003\000\002" +
    "\072\003\000\002\072\003\000\002\072\003\000\002\072" +
    "\003\000\002\076\005\000\002\077\005\000\002\100\003" +
    "\000\002\100\003\000\002\100\003\000\002\100\003\000" +
    "\002\101\003\000\002\101\003\000\002\101\003\000\002" +
    "\101\003\000\002\101\003\000\002\101\003\000\002\101" +
    "\003\000\002\101\003\000\002\101\003\000\002\102\007" +
    "\000\002\102\004\000\002\023\004\000\002\006\005\000" +
    "\002\006\003\000\002\003\003\000\002\005\003\000\002" +
    "\005\003\000\002\007\003\000\002\010\004\000\002\010" +
    "\004\000\002\024\004\000\002\004\003\000\002\046\005" +
    "\000\002\046\003\000\002\047\005\000\002\047\005\000" +
    "\002\053\003\000\002\032\005\000\002\033\003\000\002" +
    "\033\003\000\002\035\004\000\002\035\005\000\002\035" +
    "\005\000\002\035\006\000\002\016\004\000\002\034\005" +
    "\000\002\034\003\000\002\031\003\000\002\031\003\000" +
    "\002\052\003\000\002\052\003\000\002\052\003\000\002" +
    "\052\003\000\002\052\003\000\002\052\003\000\002\051" +
    "\003\000\002\051\003\000\002\051\003\000\002\051\003" +
    "\000\002\051\003\000\002\051\003\000\002\051\003\000" +
    "\002\050\003\000\002\050\003" });
>>>>>>> release-0.3_card_47
=======
    "\005\000\002\037\005\000\002\043\004\000\002\043\004" +
    "\000\002\043\004\000\002\043\005\000\002\043\005\000" +
    "\002\043\005\000\002\041\004\000\002\042\005\000\002" +
    "\042\003\000\002\040\005\000\002\015\004\000\002\015" +
    "\005\000\002\015\004\000\002\002\003\000\002\025\005" +
    "\000\002\025\003\000\002\017\004\000\002\017\003\000" +
    "\002\052\003\000\002\052\003\000\002\053\003\000\002" +
    "\053\004\000\002\054\005\000\002\054\003\000\002\054" +
    "\003\000\002\055\005\000\002\020\003\000\002\021\006" +
    "\000\002\021\006\000\002\022\004\000\002\022\004\000" +
    "\002\022\003\000\002\022\003\000\002\026\003\000\002" +
    "\026\003\000\002\027\003\000\002\027\003\000\002\027" +
    "\003\000\002\030\003\000\002\030\003\000\002\030\003" +
    "\000\002\056\005\000\002\056\006\000\002\056\006\000" +
    "\002\056\007\000\002\057\004\000\002\057\003\000\002" +
    "\060\004\000\002\062\004\000\002\062\004\000\002\063" +
    "\004\000\002\061\004\000\002\064\007\000\002\064\006" +
    "\000\002\064\007\000\002\064\004\000\002\064\004\000" +
    "\002\066\003\000\002\067\004\000\002\067\003\000\002" +
    "\065\003\000\002\071\005\000\002\071\003\000\002\071" +
    "\003\000\002\072\005\000\002\072\005\000\002\073\003" +
    "\000\002\073\003\000\002\073\003\000\002\070\003\000" +
    "\002\070\003\000\002\070\003\000\002\070\003\000\002" +
    "\074\005\000\002\075\005\000\002\076\003\000\002\076" +
    "\003\000\002\076\003\000\002\076\003\000\002\077\003" +
    "\000\002\077\003\000\002\077\003\000\002\077\003\000" +
    "\002\077\003\000\002\077\003\000\002\077\003\000\002" +
    "\077\003\000\002\077\003\000\002\100\007\000\002\100" +
    "\007\000\002\100\004\000\002\023\004\000\002\006\005" +
    "\000\002\006\003\000\002\003\003\000\002\005\003\000" +
    "\002\005\003\000\002\007\003\000\002\010\004\000\002" +
    "\010\004\000\002\024\004\000\002\004\003\000\002\044" +
    "\005\000\002\044\003\000\002\045\005\000\002\045\005" +
    "\000\002\051\003\000\002\032\005\000\002\033\003\000" +
    "\002\033\003\000\002\035\004\000\002\035\005\000\002" +
    "\035\005\000\002\035\006\000\002\016\004\000\002\034" +
    "\005\000\002\034\003\000\002\031\003\000\002\031\003" +
    "\000\002\050\003\000\002\050\003\000\002\050\003\000" +
    "\002\050\003\000\002\050\003\000\002\050\003\000\002" +
    "\047\003\000\002\047\003\000\002\047\003\000\002\047" +
    "\003\000\002\047\003\000\002\047\003\000\002\047\003" +
    "\000\002\046\003\000\002\046\003" });
>>>>>>> release-0.3_card_49
=======
    "\000\235\000\002\002\004\000\002\011\004\000\002\011" +
    "\003\000\002\012\003\000\002\012\003\000\002\012\003" +
    "\000\002\013\003\000\002\014\005\000\002\014\006\000" +
    "\002\014\006\000\002\014\007\000\002\042\004\000\002" +
    "\042\003\000\002\043\005\000\002\043\004\000\002\043" +
    "\005\000\002\043\005\000\002\047\004\000\002\047\004" +
    "\000\002\047\004\000\002\047\005\000\002\047\005\000" +
    "\002\047\005\000\002\045\004\000\002\046\005\000\002" +
    "\046\003\000\002\044\005\000\002\015\004\000\002\015" +
    "\005\000\002\015\004\000\002\002\003\000\002\031\005" +
    "\000\002\031\003\000\002\017\003\000\002\017\004\000" +
    "\002\056\003\000\002\056\003\000\002\056\003\000\002" +
    "\057\005\000\002\060\005\000\002\060\003\000\002\060" +
    "\003\000\002\061\005\000\002\020\003\000\002\021\003" +
    "\000\002\021\003\000\002\021\003\000\002\022\006\000" +
    "\002\022\006\000\002\023\006\000\002\024\006\000\002" +
    "\025\010\000\002\025\012\000\002\026\004\000\002\026" +
    "\004\000\002\026\003\000\002\026\003\000\002\032\003" +
    "\000\002\032\003\000\002\033\003\000\002\033\003\000" +
    "\002\033\003\000\002\034\003\000\002\034\003\000\002" +
    "\034\003\000\002\062\005\000\002\062\006\000\002\062" +
    "\006\000\002\062\007\000\002\063\004\000\002\063\003" +
    "\000\002\064\004\000\002\066\004\000\002\066\004\000" +
    "\002\067\004\000\002\065\004\000\002\070\007\000\002" +
    "\070\007\000\002\070\006\000\002\070\004\000\002\070" +
    "\004\000\002\072\003\000\002\073\004\000\002\073\003" +
    "\000\002\071\003\000\002\075\005\000\002\075\003\000" +
    "\002\075\003\000\002\076\005\000\002\076\005\000\002" +
    "\077\003\000\002\077\003\000\002\077\003\000\002\074" +
    "\003\000\002\074\003\000\002\074\003\000\002\074\003" +
    "\000\002\100\005\000\002\101\005\000\002\102\003\000" +
    "\002\102\003\000\002\102\003\000\002\102\003\000\002" +
    "\103\003\000\002\103\003\000\002\103\003\000\002\103" +
    "\003\000\002\103\003\000\002\103\003\000\002\103\003" +
    "\000\002\103\003\000\002\103\003\000\002\104\007\000" +
    "\002\104\004\000\002\027\004\000\002\006\005\000\002" +
    "\006\003\000\002\003\003\000\002\005\003\000\002\005" +
    "\003\000\002\007\003\000\002\010\004\000\002\010\004" +
    "\000\002\030\004\000\002\004\003\000\002\050\005\000" +
    "\002\050\003\000\002\051\005\000\002\051\005\000\002" +
    "\055\003\000\002\036\005\000\002\037\003\000\002\037" +
    "\003\000\002\041\004\000\002\041\005\000\002\041\005" +
    "\000\002\041\006\000\002\016\004\000\002\040\005\000" +
    "\002\040\003\000\002\035\003\000\002\035\003\000\002" +
    "\054\003\000\002\054\003\000\002\054\003\000\002\054" +
    "\003\000\002\054\003\000\002\054\003\000\002\053\003" +
    "\000\002\053\003\000\002\053\003\000\002\053\003\000" +
    "\002\053\003\000\002\053\003\000\002\053\003\000\002" +
    "\052\003\000\002\052\003" });
>>>>>>> release-0.3_card_69

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    "\000\364\000\012\003\013\004\014\005\006\007\011\001" +
    "\002\000\036\024\322\025\026\026\331\027\314\030\330" +
    "\031\324\032\053\037\033\040\055\041\061\042\027\044" +
    "\025\072\060\075\326\001\002\000\004\010\170\001\002" +
    "\000\006\003\uffae\037\uffae\001\002\000\014\002\ufffc\003" +
    "\ufffc\004\ufffc\005\ufffc\007\ufffc\001\002\000\014\002\301" +
    "\003\013\004\014\005\006\007\011\001\002\000\006\003" +
    "\274\010\275\001\002\000\014\002\uffff\003\uffff\004\uffff" +
    "\005\uffff\007\uffff\001\002\000\006\003\uffaf\006\uffaf\001" +
    "\002\000\036\024\uffe3\025\uffe3\026\uffe3\027\uffe3\030\uffe3" +
    "\031\uffe3\032\uffe3\037\uffe3\040\uffe3\041\uffe3\042\uffe3\044" +
    "\uffe3\072\uffe3\075\uffe3\001\002\000\014\002\ufffe\003\ufffe" +
    "\004\ufffe\005\ufffe\007\ufffe\001\002\000\006\003\273\037" +
    "\211\001\002\000\014\002\ufffd\003\ufffd\004\ufffd\005\ufffd" +
    "\007\ufffd\001\002\000\006\003\022\006\023\001\002\000" +
    "\014\003\030\025\026\037\033\042\027\044\025\001\002" +
    "\000\014\002\uffb3\003\uffb3\004\uffb3\005\uffb3\007\uffb3\001" +
    "\002\000\014\003\uffb1\025\uffb1\037\uffb1\042\uffb1\044\uffb1" +
    "\001\002\000\024\046\260\062\266\063\263\064\264\065" +
    "\257\066\256\067\262\070\267\071\261\001\002\000\110" +
    "\003\uffc6\010\uffc6\011\uffc6\021\uffc6\033\uffc6\034\uffc6\035" +
    "\uffc6\036\uffc6\037\uffc6\043\uffc6\045\uffc6\046\uffc6\047\uffc6" +
    "\050\uffc6\051\uffc6\052\uffc6\053\uffc6\054\uffc6\055\uffc6\056" +
    "\uffc6\057\uffc6\060\uffc6\061\uffc6\062\uffc6\063\uffc6\064\uffc6" +
    "\065\uffc6\066\uffc6\067\uffc6\070\uffc6\071\uffc6\073\uffc6\074" +
    "\uffc6\075\uffc6\076\uffc6\001\002\000\110\003\uffc8\010\uffc8" +
    "\011\uffc8\021\uffc8\033\uffc8\034\uffc8\035\uffc8\036\uffc8\037" +
    "\uffc8\043\uffc8\045\uffc8\046\uffc8\047\uffc8\050\uffc8\051\uffc8" +
    "\052\uffc8\053\uffc8\054\uffc8\055\uffc8\056\uffc8\057\uffc8\060" +
    "\uffc8\061\uffc8\062\uffc8\063\uffc8\064\uffc8\065\uffc8\066\uffc8" +
    "\067\uffc8\070\uffc8\071\uffc8\073\uffc8\074\uffc8\075\uffc8\076" +
    "\uffc8\001\002\000\110\003\uffc5\010\uffc5\011\uffc5\021\uffc5" +
    "\033\uffc5\034\uffc5\035\uffc5\036\uffc5\037\uffc5\043\uffc5\045" +
    "\uffc5\046\uffc5\047\uffc5\050\uffc5\051\uffc5\052\uffc5\053\uffc5" +
    "\054\uffc5\055\uffc5\056\uffc5\057\uffc5\060\uffc5\061\uffc5\062" +
    "\uffc5\063\uffc5\064\uffc5\065\uffc5\066\uffc5\067\uffc5\070\uffc5" +
    "\071\uffc5\073\uffc5\074\uffc5\075\uffc5\076\uffc5\001\002\000" +
    "\006\003\uffab\011\uffab\001\002\000\006\003\037\011\040" +
    "\001\002\000\010\003\uffac\011\uffac\074\035\001\002\000" +
    "\110\003\uffc7\010\uffc7\011\uffc7\021\uffc7\033\uffc7\034\uffc7" +
    "\035\uffc7\036\uffc7\037\uffc7\043\uffc7\045\uffc7\046\uffc7\047" +
    "\uffc7\050\uffc7\051\uffc7\052\uffc7\053\uffc7\054\uffc7\055\uffc7" +
    "\056\uffc7\057\uffc7\060\uffc7\061\uffc7\062\uffc7\063\uffc7\064" +
    "\uffc7\065\uffc7\066\uffc7\067\uffc7\070\uffc7\071\uffc7\073\uffc7" +
    "\074\uffc7\075\uffc7\076\uffc7\001\002\000\110\003\uffc9\010" +
    "\uffc9\011\uffc9\021\uffc9\033\uffc9\034\uffc9\035\uffc9\036\uffc9" +
    "\037\uffc9\043\uffc9\045\uffc9\046\uffc9\047\uffc9\050\uffc9\051" +
    "\uffc9\052\uffc9\053\uffc9\054\uffc9\055\uffc9\056\uffc9\057\uffc9" +
    "\060\uffc9\061\uffc9\062\uffc9\063\uffc9\064\uffc9\065\uffc9\066" +
    "\uffc9\067\uffc9\070\uffc9\071\uffc9\073\uffc9\074\uffc9\075\uffc9" +
    "\076\uffc9\001\002\000\014\003\030\025\026\037\033\042" +
    "\027\044\025\001\002\000\006\003\uffad\011\uffad\001\002" +
    "\000\014\002\uffb4\003\uffb4\004\uffb4\005\uffb4\007\uffb4\001" +
    "\002\000\022\025\uff86\032\uff86\037\uff86\040\uff86\041\uff86" +
    "\042\uff86\044\uff86\072\uff86\001\002\000\006\003\254\076" +
    "\253\001\002\000\022\025\026\032\053\037\047\040\055" +
    "\041\061\042\027\044\050\072\060\001\002\000\070\003" +
    "\uffa2\010\uffa2\011\uffa2\021\uffa2\033\uffa2\034\uffa2\035\uffa2" +
    "\036\uffa2\037\uffa2\043\uffa2\045\uffa2\046\uffa2\047\uffa2\050" +
    "\uffa2\051\uffa2\052\uffa2\053\uffa2\054\uffa2\055\uffa2\056\uffa2" +
    "\057\uffa2\060\uffa2\061\uffa2\073\uffa2\074\uffa2\075\uffa2\076" +
    "\uffa2\001\002\000\004\023\151\001\002\000\020\046\147" +
    "\047\146\050\145\051\142\052\141\053\140\054\144\001" +
    "\002\000\070\003\uffa5\010\uffa5\011\uffa5\021\uffa5\033\uffa5" +
    "\034\uffa5\035\uffa5\036\uffa5\037\uffa5\043\uffa5\045\uffa5\046" +
    "\uffa5\047\uffa5\050\uffa5\051\uffa5\052\uffa5\053\uffa5\054\uffa5" +
    "\055\uffa5\056\uffa5\057\uffa5\060\uffa5\061\uffa5\073\uffa5\074" +
    "\uffa5\075\uffa5\076\uffa5\001\002\000\032\023\uff76\046\uffc7" +
    "\047\uffc7\050\uffc7\051\uffc7\052\uffc7\053\uffc7\054\uffc7\055" +
    "\uffc7\056\uffc7\057\uffc7\075\uffc7\001\002\000\032\023\uff75" +
    "\046\uffc6\047\uffc6\050\uffc6\051\uffc6\052\uffc6\053\uffc6\054" +
    "\uffc6\055\uffc6\056\uffc6\057\uffc6\075\uffc6\001\002\000\016" +
    "\003\uff84\034\uff84\060\136\061\135\073\uff84\076\uff84\001" +
    "\002\000\060\003\uffd8\010\uffd8\021\uffd8\034\uffd8\037\uffd8" +
    "\043\uffd8\045\uffd8\046\uffd8\047\uffd8\050\uffd8\051\uffd8\052" +
    "\uffd8\053\uffd8\054\uffd8\055\uffd8\056\uffd8\057\uffd8\060\uffd8" +
    "\061\uffd8\073\uffd8\074\uffd8\075\uffd8\076\uffd8\001\002\000" +
    "\014\025\026\033\075\037\033\042\027\044\025\001\002" +
    "\000\060\003\uffd9\010\uffd9\021\uffd9\034\uffd9\037\uffd9\043" +
    "\uffd9\045\uffd9\046\uffd9\047\uffd9\050\uffd9\051\uffd9\052\uffd9" +
    "\053\uffd9\054\uffd9\055\uffd9\056\uffd9\057\uffd9\060\uffd9\061" +
    "\uffd9\073\uffd9\074\uffd9\075\uffd9\076\uffd9\001\002\000\070" +
    "\003\uffa4\010\uffa4\011\uffa4\021\uffa4\033\uffa4\034\uffa4\035" +
    "\uffa4\036\uffa4\037\uffa4\043\uffa4\045\uffa4\046\uffa4\047\uffa4" +
    "\050\uffa4\051\uffa4\052\uffa4\053\uffa4\054\uffa4\055\uffa4\056" +
    "\uffa4\057\uffa4\060\uffa4\061\uffa4\073\uffa4\074\uffa4\075\uffa4" +
    "\076\uffa4\001\002\000\044\003\uff81\034\uff81\046\uff81\047" +
    "\uff81\050\uff81\051\uff81\052\uff81\053\uff81\054\uff81\055\064" +
    "\056\063\057\065\060\uff81\061\uff81\073\uff81\075\070\076" +
    "\uff81\001\002\000\010\003\uff87\073\uff87\076\uff87\001\002" +
    "\000\022\025\026\032\053\037\033\040\055\041\061\042" +
    "\027\044\025\072\060\001\002\000\070\003\uffa3\010\uffa3" +
    "\011\uffa3\021\uffa3\033\uffa3\034\uffa3\035\uffa3\036\uffa3\037" +
    "\uffa3\043\uffa3\045\uffa3\046\uffa3\047\uffa3\050\uffa3\051\uffa3" +
    "\052\uffa3\053\uffa3\054\uffa3\055\uffa3\056\uffa3\057\uffa3\060" +
    "\uffa3\061\uffa3\073\uffa3\074\uffa3\075\uffa3\076\uffa3\001\002" +
    "\000\014\055\064\056\063\057\065\073\067\075\070\001" +
    "\002\000\022\025\uff9e\032\uff9e\037\uff9e\040\uff9e\041\uff9e" +
    "\042\uff9e\044\uff9e\072\uff9e\001\002\000\022\025\uff9f\032" +
    "\uff9f\037\uff9f\040\uff9f\041\uff9f\042\uff9f\044\uff9f\072\uff9f" +
    "\001\002\000\022\025\uff9c\032\uff9c\037\uff9c\040\uff9c\041" +
    "\uff9c\042\uff9c\044\uff9c\072\uff9c\001\002\000\022\025\026" +
    "\032\053\037\033\040\055\041\061\042\027\044\025\072" +
    "\060\001\002\000\060\003\uffda\010\uffda\021\uffda\034\uffda" +
    "\037\uffda\043\uffda\045\uffda\046\uffda\047\uffda\050\uffda\051" +
    "\uffda\052\uffda\053\uffda\054\uffda\055\uffda\056\uffda\057\uffda" +
    "\060\uffda\061\uffda\073\uffda\074\uffda\075\uffda\076\uffda\001" +
    "\002\000\022\025\uff9d\032\uff9d\037\uff9d\040\uff9d\041\uff9d" +
    "\042\uff9d\044\uff9d\072\uff9d\001\002\000\060\003\uffd7\010" +
    "\uffd7\021\uffd7\034\uffd7\037\uffd7\043\uffd7\045\uffd7\046\uffd7" +
    "\047\uffd7\050\uffd7\051\uffd7\052\uffd7\053\uffd7\054\uffd7\055" +
    "\064\056\063\057\065\060\uffd7\061\uffd7\073\uffd7\074\uffd7" +
    "\075\070\076\uffd7\001\002\000\010\033\075\035\uffbc\036" +
    "\uffbc\001\002\000\004\033\075\001\002\000\004\034\124" +
=======
    "\000\371\000\012\003\013\004\014\005\006\007\011\001" +
    "\002\000\036\024\323\025\026\026\330\027\332\030\324" +
    "\031\320\032\053\037\033\040\055\041\061\042\027\044" +
    "\025\072\060\075\326\001\002\000\004\010\170\001\002" +
    "\000\006\003\uffad\037\uffad\001\002\000\014\002\ufffc\003" +
    "\ufffc\004\ufffc\005\ufffc\007\ufffc\001\002\000\014\002\301" +
    "\003\013\004\014\005\006\007\011\001\002\000\006\003" +
    "\274\010\275\001\002\000\014\002\uffff\003\uffff\004\uffff" +
    "\005\uffff\007\uffff\001\002\000\006\003\uffae\006\uffae\001" +
    "\002\000\036\024\uffe3\025\uffe3\026\uffe3\027\uffe3\030\uffe3" +
    "\031\uffe3\032\uffe3\037\uffe3\040\uffe3\041\uffe3\042\uffe3\044" +
    "\uffe3\072\uffe3\075\uffe3\001\002\000\014\002\ufffe\003\ufffe" +
    "\004\ufffe\005\ufffe\007\ufffe\001\002\000\014\002\ufffd\003" +
    "\ufffd\004\ufffd\005\ufffd\007\ufffd\001\002\000\006\003\273" +
    "\037\211\001\002\000\006\003\022\006\023\001\002\000" +
    "\014\003\030\025\026\037\033\042\027\044\025\001\002" +
    "\000\014\002\uffb2\003\uffb2\004\uffb2\005\uffb2\007\uffb2\001" +
    "\002\000\014\003\uffb0\025\uffb0\037\uffb0\042\uffb0\044\uffb0" +
    "\001\002\000\024\046\260\062\266\063\263\064\264\065" +
    "\257\066\256\067\262\070\267\071\261\001\002\000\106" +
    "\003\uffc5\010\uffc5\011\uffc5\033\uffc5\034\uffc5\035\uffc5\036" +
    "\uffc5\037\uffc5\043\uffc5\045\uffc5\046\uffc5\047\uffc5\050\uffc5" +
    "\051\uffc5\052\uffc5\053\uffc5\054\uffc5\055\uffc5\056\uffc5\057" +
    "\uffc5\060\uffc5\061\uffc5\062\uffc5\063\uffc5\064\uffc5\065\uffc5" +
    "\066\uffc5\067\uffc5\070\uffc5\071\uffc5\073\uffc5\074\uffc5\075" +
    "\uffc5\076\uffc5\001\002\000\106\003\uffc7\010\uffc7\011\uffc7" +
    "\033\uffc7\034\uffc7\035\uffc7\036\uffc7\037\uffc7\043\uffc7\045" +
    "\uffc7\046\uffc7\047\uffc7\050\uffc7\051\uffc7\052\uffc7\053\uffc7" +
    "\054\uffc7\055\uffc7\056\uffc7\057\uffc7\060\uffc7\061\uffc7\062" +
    "\uffc7\063\uffc7\064\uffc7\065\uffc7\066\uffc7\067\uffc7\070\uffc7" +
    "\071\uffc7\073\uffc7\074\uffc7\075\uffc7\076\uffc7\001\002\000" +
    "\106\003\uffc4\010\uffc4\011\uffc4\033\uffc4\034\uffc4\035\uffc4" +
    "\036\uffc4\037\uffc4\043\uffc4\045\uffc4\046\uffc4\047\uffc4\050" +
    "\uffc4\051\uffc4\052\uffc4\053\uffc4\054\uffc4\055\uffc4\056\uffc4" +
    "\057\uffc4\060\uffc4\061\uffc4\062\uffc4\063\uffc4\064\uffc4\065" +
    "\uffc4\066\uffc4\067\uffc4\070\uffc4\071\uffc4\073\uffc4\074\uffc4" +
    "\075\uffc4\076\uffc4\001\002\000\006\003\uffaa\011\uffaa\001" +
    "\002\000\006\003\040\011\037\001\002\000\010\003\uffab" +
    "\011\uffab\074\035\001\002\000\106\003\uffc6\010\uffc6\011" +
    "\uffc6\033\uffc6\034\uffc6\035\uffc6\036\uffc6\037\uffc6\043\uffc6" +
    "\045\uffc6\046\uffc6\047\uffc6\050\uffc6\051\uffc6\052\uffc6\053" +
    "\uffc6\054\uffc6\055\uffc6\056\uffc6\057\uffc6\060\uffc6\061\uffc6" +
    "\062\uffc6\063\uffc6\064\uffc6\065\uffc6\066\uffc6\067\uffc6\070" +
    "\uffc6\071\uffc6\073\uffc6\074\uffc6\075\uffc6\076\uffc6\001\002" +
    "\000\106\003\uffc8\010\uffc8\011\uffc8\033\uffc8\034\uffc8\035" +
    "\uffc8\036\uffc8\037\uffc8\043\uffc8\045\uffc8\046\uffc8\047\uffc8" +
    "\050\uffc8\051\uffc8\052\uffc8\053\uffc8\054\uffc8\055\uffc8\056" +
    "\uffc8\057\uffc8\060\uffc8\061\uffc8\062\uffc8\063\uffc8\064\uffc8" +
    "\065\uffc8\066\uffc8\067\uffc8\070\uffc8\071\uffc8\073\uffc8\074" +
    "\uffc8\075\uffc8\076\uffc8\001\002\000\014\003\030\025\026" +
    "\037\033\042\027\044\025\001\002\000\006\003\uffac\011" +
    "\uffac\001\002\000\022\025\uff85\032\uff85\037\uff85\040\uff85" +
    "\041\uff85\042\uff85\044\uff85\072\uff85\001\002\000\014\002" +
    "\uffb3\003\uffb3\004\uffb3\005\uffb3\007\uffb3\001\002\000\006" +
    "\003\254\076\253\001\002\000\022\025\026\032\053\037" +
    "\047\040\055\041\061\042\027\044\050\072\060\001\002" +
    "\000\066\003\uffa1\010\uffa1\011\uffa1\033\uffa1\034\uffa1\035" +
    "\uffa1\036\uffa1\037\uffa1\043\uffa1\045\uffa1\046\uffa1\047\uffa1" +
    "\050\uffa1\051\uffa1\052\uffa1\053\uffa1\054\uffa1\055\uffa1\056" +
    "\uffa1\057\uffa1\060\uffa1\061\uffa1\073\uffa1\074\uffa1\075\uffa1" +
    "\076\uffa1\001\002\000\004\023\151\001\002\000\020\046" +
    "\147\047\146\050\145\051\143\052\141\053\140\054\144" +
    "\001\002\000\066\003\uffa4\010\uffa4\011\uffa4\033\uffa4\034" +
    "\uffa4\035\uffa4\036\uffa4\037\uffa4\043\uffa4\045\uffa4\046\uffa4" +
    "\047\uffa4\050\uffa4\051\uffa4\052\uffa4\053\uffa4\054\uffa4\055" +
    "\uffa4\056\uffa4\057\uffa4\060\uffa4\061\uffa4\073\uffa4\074\uffa4" +
    "\075\uffa4\076\uffa4\001\002\000\032\023\uff75\046\uffc6\047" +
    "\uffc6\050\uffc6\051\uffc6\052\uffc6\053\uffc6\054\uffc6\055\uffc6" +
    "\056\uffc6\057\uffc6\075\uffc6\001\002\000\032\023\uff74\046" +
    "\uffc5\047\uffc5\050\uffc5\051\uffc5\052\uffc5\053\uffc5\054\uffc5" +
    "\055\uffc5\056\uffc5\057\uffc5\075\uffc5\001\002\000\016\003" +
    "\uff83\034\uff83\060\136\061\135\073\uff83\076\uff83\001\002" +
    "\000\056\003\uffd8\010\uffd8\034\uffd8\037\uffd8\043\uffd8\045" +
    "\uffd8\046\uffd8\047\uffd8\050\uffd8\051\uffd8\052\uffd8\053\uffd8" +
    "\054\uffd8\055\uffd8\056\uffd8\057\uffd8\060\uffd8\061\uffd8\073" +
    "\uffd8\074\uffd8\075\uffd8\076\uffd8\001\002\000\014\025\026" +
    "\033\075\037\033\042\027\044\025\001\002\000\056\003" +
    "\uffd9\010\uffd9\034\uffd9\037\uffd9\043\uffd9\045\uffd9\046\uffd9" +
    "\047\uffd9\050\uffd9\051\uffd9\052\uffd9\053\uffd9\054\uffd9\055" +
    "\uffd9\056\uffd9\057\uffd9\060\uffd9\061\uffd9\073\uffd9\074\uffd9" +
    "\075\uffd9\076\uffd9\001\002\000\066\003\uffa3\010\uffa3\011" +
    "\uffa3\033\uffa3\034\uffa3\035\uffa3\036\uffa3\037\uffa3\043\uffa3" +
    "\045\uffa3\046\uffa3\047\uffa3\050\uffa3\051\uffa3\052\uffa3\053" +
    "\uffa3\054\uffa3\055\uffa3\056\uffa3\057\uffa3\060\uffa3\061\uffa3" +
    "\073\uffa3\074\uffa3\075\uffa3\076\uffa3\001\002\000\044\003" +
    "\uff80\034\uff80\046\uff80\047\uff80\050\uff80\051\uff80\052\uff80" +
    "\053\uff80\054\uff80\055\064\056\063\057\065\060\uff80\061" +
    "\uff80\073\uff80\075\070\076\uff80\001\002\000\010\003\uff86" +
    "\073\uff86\076\uff86\001\002\000\022\025\026\032\053\037" +
    "\033\040\055\041\061\042\027\044\025\072\060\001\002" +
    "\000\066\003\uffa2\010\uffa2\011\uffa2\033\uffa2\034\uffa2\035" +
    "\uffa2\036\uffa2\037\uffa2\043\uffa2\045\uffa2\046\uffa2\047\uffa2" +
    "\050\uffa2\051\uffa2\052\uffa2\053\uffa2\054\uffa2\055\uffa2\056" +
    "\uffa2\057\uffa2\060\uffa2\061\uffa2\073\uffa2\074\uffa2\075\uffa2" +
    "\076\uffa2\001\002\000\014\055\064\056\063\057\065\073" +
    "\067\075\070\001\002\000\022\025\uff9d\032\uff9d\037\uff9d" +
    "\040\uff9d\041\uff9d\042\uff9d\044\uff9d\072\uff9d\001\002\000" +
    "\022\025\uff9e\032\uff9e\037\uff9e\040\uff9e\041\uff9e\042\uff9e" +
    "\044\uff9e\072\uff9e\001\002\000\022\025\uff9b\032\uff9b\037" +
    "\uff9b\040\uff9b\041\uff9b\042\uff9b\044\uff9b\072\uff9b\001\002" +
    "\000\022\025\026\032\053\037\033\040\055\041\061\042" +
    "\027\044\025\072\060\001\002\000\056\003\uffda\010\uffda" +
    "\034\uffda\037\uffda\043\uffda\045\uffda\046\uffda\047\uffda\050" +
    "\uffda\051\uffda\052\uffda\053\uffda\054\uffda\055\uffda\056\uffda" +
    "\057\uffda\060\uffda\061\uffda\073\uffda\074\uffda\075\uffda\076" +
    "\uffda\001\002\000\022\025\uff9c\032\uff9c\037\uff9c\040\uff9c" +
    "\041\uff9c\042\uff9c\044\uff9c\072\uff9c\001\002\000\056\003" +
    "\uffd7\010\uffd7\034\uffd7\037\uffd7\043\uffd7\045\uffd7\046\uffd7" +
    "\047\uffd7\050\uffd7\051\uffd7\052\uffd7\053\uffd7\054\uffd7\055" +
    "\064\056\063\057\065\060\uffd7\061\uffd7\073\uffd7\074\uffd7" +
    "\075\070\076\uffd7\001\002\000\010\033\075\035\uffbb\036" +
    "\uffbb\001\002\000\004\033\075\001\002\000\004\034\124" +
>>>>>>> release-0.3_card_69
    "\001\002\000\022\025\123\032\053\037\115\040\117\041" +
    "\121\042\122\044\116\072\060\001\002\000\006\035\077" +
    "\036\101\001\002\000\022\025\026\032\053\037\033\040" +
    "\055\041\061\042\027\044\025\072\103\001\002\000\004" +
<<<<<<< HEAD
    "\036\102\001\002\000\070\003\uffc1\010\uffc1\011\uffc1\021" +
    "\uffc1\033\uffc1\034\uffc1\035\uffc1\036\uffc1\037\uffc1\043\uffc1" +
    "\045\uffc1\046\uffc1\047\uffc1\050\uffc1\051\uffc1\052\uffc1\053" +
    "\uffc1\054\uffc1\055\uffc1\056\uffc1\057\uffc1\060\uffc1\061\uffc1" +
    "\073\uffc1\074\uffc1\075\uffc1\076\uffc1\001\002\000\070\003" +
    "\uffc0\010\uffc0\011\uffc0\021\uffc0\033\uffc0\034\uffc0\035\uffc0" +
    "\036\uffc0\037\uffc0\043\uffc0\045\uffc0\046\uffc0\047\uffc0\050" +
    "\uffc0\051\uffc0\052\uffc0\053\uffc0\054\uffc0\055\uffc0\056\uffc0" +
    "\057\uffc0\060\uffc0\061\uffc0\073\uffc0\074\uffc0\075\uffc0\076" +
    "\uffc0\001\002\000\022\025\026\032\053\037\033\040\055" +
    "\041\061\042\027\044\025\072\103\001\002\000\030\003" +
    "\uffa8\011\uffa8\033\uffa8\035\uffa8\036\uffa8\055\uffa8\056\uffa8" +
    "\057\uffa8\073\uffa8\074\uffa8\075\uffa8\001\002\000\030\003" +
    "\uffa7\011\uffa7\033\uffa7\035\uffa7\036\uffa7\055\uffa7\056\uffa7" +
    "\057\uffa7\073\uffa7\074\uffa7\075\uffa7\001\002\000\030\003" +
    "\uffa6\011\uffa6\033\uffa6\035\uffa6\036\uffa6\055\uffa6\056\uffa6" +
    "\057\uffa6\073\uffa6\074\uffa6\075\uffa6\001\002\000\014\036" +
    "\uffb7\055\064\056\063\057\065\075\070\001\002\000\022" +
    "\025\026\032\053\037\033\040\055\041\061\042\027\044" +
    "\025\072\103\001\002\000\030\003\uffa0\011\uffa0\033\uffa0" +
    "\035\uffa0\036\uffa0\055\064\056\063\057\065\073\uffa0\074" +
    "\uffa0\075\070\001\002\000\014\055\064\056\063\057\065" +
    "\073\113\075\070\001\002\000\030\003\uffa1\011\uffa1\033" +
    "\uffa1\035\uffa1\036\uffa1\055\uffa1\056\uffa1\057\uffa1\073\uffa1" +
    "\074\uffa1\075\uffa1\001\002\000\004\034\uffb9\001\002\000" +
    "\034\023\uff76\034\uff74\046\uffc7\047\uffc7\050\uffc7\051\uffc7" +
    "\052\uffc7\053\uffc7\054\uffc7\055\uffc7\056\uffc7\057\uffc7\075" +
    "\uffc7\001\002\000\034\023\uff75\034\uff70\046\uffc6\047\uffc6" +
    "\050\uffc6\051\uffc6\052\uffc6\053\uffc6\054\uffc6\055\uffc6\056" +
    "\uffc6\057\uffc6\075\uffc6\001\002\000\032\034\uff73\046\uffa4" +
    "\047\uffa4\050\uffa4\051\uffa4\052\uffa4\053\uffa4\054\uffa4\055" +
    "\uffa4\056\uffa4\057\uffa4\075\uffa4\001\002\000\004\034\uffba" +
    "\001\002\000\032\034\uff72\046\uffa3\047\uffa3\050\uffa3\051" +
    "\uffa3\052\uffa3\053\uffa3\054\uffa3\055\uffa3\056\uffa3\057\uffa3" +
    "\075\uffa3\001\002\000\032\034\uff71\046\uffc5\047\uffc5\050" +
    "\uffc5\051\uffc5\052\uffc5\053\uffc5\054\uffc5\055\uffc5\056\uffc5" +
    "\057\uffc5\075\uffc5\001\002\000\032\034\uff6f\046\uffc8\047" +
    "\uffc8\050\uffc8\051\uffc8\052\uffc8\053\uffc8\054\uffc8\055\uffc8" +
    "\056\uffc8\057\uffc8\075\uffc8\001\002\000\022\025\026\032" +
    "\053\037\033\040\055\041\061\042\027\044\025\072\103" +
    "\001\002\000\010\033\uffbb\035\uffbb\036\uffbb\001\002\000" +
    "\020\033\uffb8\035\uffb8\036\uffb8\055\064\056\063\057\065" +
    "\075\070\001\002\000\006\035\077\036\131\001\002\000" +
    "\004\036\132\001\002\000\070\003\uffbf\010\uffbf\011\uffbf" +
    "\021\uffbf\033\uffbf\034\uffbf\035\uffbf\036\uffbf\037\uffbf\043" +
    "\uffbf\045\uffbf\046\uffbf\047\uffbf\050\uffbf\051\uffbf\052\uffbf" +
    "\053\uffbf\054\uffbf\055\uffbf\056\uffbf\057\uffbf\060\uffbf\061" +
    "\uffbf\073\uffbf\074\uffbf\075\uffbf\076\uffbf\001\002\000\070" +
    "\003\uffbe\010\uffbe\011\uffbe\021\uffbe\033\uffbe\034\uffbe\035" +
    "\uffbe\036\uffbe\037\uffbe\043\uffbe\045\uffbe\046\uffbe\047\uffbe" +
    "\050\uffbe\051\uffbe\052\uffbe\053\uffbe\054\uffbe\055\uffbe\056" +
    "\uffbe\057\uffbe\060\uffbe\061\uffbe\073\uffbe\074\uffbe\075\uffbe" +
    "\076\uffbe\001\002\000\006\035\uffbd\036\uffbd\001\002\000" +
    "\022\025\026\032\053\037\047\040\055\041\061\042\027" +
    "\044\050\072\060\001\002\000\022\025\uff66\032\uff66\037" +
    "\uff66\040\uff66\041\uff66\042\uff66\044\uff66\072\uff66\001\002" +
    "\000\022\025\uff67\032\uff67\037\uff67\040\uff67\041\uff67\042" +
    "\uff67\044\uff67\072\uff67\001\002\000\012\003\uff85\034\uff85" +
    "\073\uff85\076\uff85\001\002\000\022\025\uff69\032\uff69\037" +
    "\uff69\040\uff69\041\uff69\042\uff69\044\uff69\072\uff69\001\002" +
    "\000\022\025\uff6a\032\uff6a\037\uff6a\040\uff6a\041\uff6a\042" +
    "\uff6a\044\uff6a\072\uff6a\001\002\000\022\025\uff6b\032\uff6b" +
    "\037\uff6b\040\uff6b\041\uff6b\042\uff6b\044\uff6b\072\uff6b\001" +
    "\002\000\022\025\026\032\053\037\033\040\055\041\061" +
    "\042\027\044\025\072\060\001\002\000\022\025\uff68\032" +
    "\uff68\037\uff68\040\uff68\041\uff68\042\uff68\044\uff68\072\uff68" +
    "\001\002\000\022\025\uff6c\032\uff6c\037\uff6c\040\uff6c\041" +
    "\uff6c\042\uff6c\044\uff6c\072\uff6c\001\002\000\022\025\uff6d" +
    "\032\uff6d\037\uff6d\040\uff6d\041\uff6d\042\uff6d\044\uff6d\072" +
    "\uff6d\001\002\000\022\025\uff6e\032\uff6e\037\uff6e\040\uff6e" +
    "\041\uff6e\042\uff6e\044\uff6e\072\uff6e\001\002\000\016\003" +
    "\uff83\034\uff83\060\uff83\061\uff83\073\uff83\076\uff83\001\002" +
    "\000\004\072\152\001\002\000\020\004\014\025\160\037" +
    "\167\040\154\041\166\042\164\044\157\001\002\000\016" +
    "\003\uff82\034\uff82\060\uff82\061\uff82\073\uff82\076\uff82\001" +
    "\002\000\034\011\uff73\012\uff73\013\uff73\014\uff73\015\uff73" +
    "\017\uff73\020\uff73\046\uff73\060\uff73\061\uff73\073\uff73\074" +
    "\uff73\076\uff73\001\002\000\004\073\252\001\002\000\012" +
    "\025\026\037\033\042\027\044\025\001\002\000\034\011" +
    "\uff70\012\uff70\013\uff70\014\uff70\015\uff70\017\uff70\020\uff70" +
    "\046\uff70\060\uff70\061\uff70\073\uff70\074\uff70\076\uff70\001" +
    "\002\000\034\011\uff6f\012\uff6f\013\uff6f\014\uff6f\015\uff6f" +
    "\017\uff6f\020\uff6f\046\uff6f\060\uff6f\061\uff6f\073\uff6f\074" +
    "\uff6f\076\uff6f\001\002\000\004\073\uff7f\001\002\000\006" +
    "\073\uff77\074\247\001\002\000\004\073\uff7e\001\002\000" +
    "\034\011\uff71\012\uff71\013\uff71\014\uff71\015\uff71\017\uff71" +
    "\020\uff71\046\uff71\060\uff71\061\uff71\073\uff71\074\uff71\076" +
    "\uff71\001\002\000\004\010\170\001\002\000\034\011\uff72" +
    "\012\uff72\013\uff72\014\uff72\015\uff72\017\uff72\020\uff72\046" +
    "\uff72\060\uff72\061\uff72\073\uff72\074\uff72\076\uff72\001\002" +
    "\000\034\011\uff74\012\uff74\013\uff74\014\uff74\015\uff74\017" +
    "\uff74\020\uff74\046\uff74\060\uff74\061\uff74\073\uff74\074\uff74" +
    "\076\uff74\001\002\000\004\037\uff8d\001\002\000\004\037" +
    "\211\001\002\000\022\011\040\012\204\013\175\014\200" +
    "\015\176\017\202\020\173\073\uff7d\001\002\000\004\037" +
    "\211\001\002\000\004\037\211\001\002\000\006\016\225" +
    "\020\224\001\002\000\004\016\222\001\002\000\024\011" +
    "\ufff5\012\204\013\175\014\200\015\176\017\202\020\173" +
    "\073\ufff5\076\ufff5\001\002\000\006\016\217\020\216\001" +
    "\002\000\004\073\uff7c\001\002\000\004\020\215\001\002" +
    "\000\006\011\040\073\uff7b\001\002\000\004\020\205\001" +
    "\002\000\004\037\211\001\002\000\024\011\ufff4\012\ufff4" +
    "\013\ufff4\014\ufff4\015\ufff4\017\ufff4\020\ufff4\073\ufff4\076" +
    "\ufff4\001\002\000\034\003\uff8c\006\uff8c\011\uff8c\012\uff8c" +
    "\013\uff8c\014\uff8c\015\uff8c\017\uff8c\020\uff8c\022\uff8c\073" +
    "\uff8c\074\uff8c\076\uff8c\001\002\000\034\003\uff8b\006\uff8b" +
    "\011\uff8b\012\uff8b\013\uff8b\014\uff8b\015\uff8b\017\uff8b\020" +
    "\uff8b\022\uff8b\073\uff8b\074\uff8b\076\uff8b\001\002\000\040" +
    "\003\uff8a\006\uff8a\011\uff8a\012\uff8a\013\uff8a\014\uff8a\015" +
    "\uff8a\017\uff8a\020\uff8a\022\uff8a\037\213\043\212\073\uff8a" +
    "\074\uff8a\076\uff8a\001\002\000\034\003\uff88\006\uff88\011" +
    "\uff88\012\uff88\013\uff88\014\uff88\015\uff88\017\uff88\020\uff88" +
    "\022\uff88\073\uff88\074\uff88\076\uff88\001\002\000\034\003" +
    "\uff89\006\uff89\011\uff89\012\uff89\013\uff89\014\uff89\015\uff89" +
    "\017\uff89\020\uff89\022\uff89\073\uff89\074\uff89\076\uff89\001" +
    "\002\000\004\073\uff7a\001\002\000\004\037\ufff0\001\002" +
    "\000\004\037\uffee\001\002\000\004\020\220\001\002\000" +
    "\004\037\uffec\001\002\000\010\011\ufff6\073\ufff6\076\ufff6" +
    "\001\002\000\004\020\223\001\002\000\004\037\uffeb\001" +
    "\002\000\004\037\uffef\001\002\000\004\020\226\001\002" +
    "\000\004\037\uffed\001\002\000\004\022\231\001\002\000" +
    "\024\011\ufff1\012\ufff1\013\ufff1\014\ufff1\015\ufff1\017\ufff1" +
    "\020\ufff1\073\ufff1\076\ufff1\001\002\000\016\025\160\037" +
    "\167\040\154\041\166\042\164\044\157\001\002\000\024" +
    "\011\uffea\012\uffea\013\uffea\014\uffea\015\uffea\017\uffea\020" +
    "\uffea\073\uffea\076\uffea\001\002\000\030\011\uffe8\012\uffe8" +
    "\013\uffe8\014\uffe8\015\uffe8\017\uffe8\020\uffe8\060\136\061" +
    "\135\073\uffe8\076\uffe8\001\002\000\004\046\235\001\002" +
    "\000\016\025\160\037\167\040\154\041\166\042\164\044" +
    "\157\001\002\000\030\011\uffe7\012\uffe7\013\uffe7\014\uffe7" +
    "\015\uffe7\017\uffe7\020\uffe7\060\uffe7\061\uffe7\073\uffe7\076" +
    "\uffe7\001\002\000\016\025\160\037\167\040\154\041\166" +
    "\042\164\044\157\001\002\000\024\011\uffe9\012\uffe9\013" +
    "\uffe9\014\uffe9\015\uffe9\017\uffe9\020\uffe9\073\uffe9\076\uffe9" +
    "\001\002\000\026\011\ufff3\012\ufff3\013\ufff3\014\ufff3\015" +
    "\ufff3\017\ufff3\020\ufff3\022\231\073\ufff3\076\ufff3\001\002" +
    "\000\024\011\ufff2\012\ufff2\013\ufff2\014\ufff2\015\ufff2\017" +
    "\ufff2\020\ufff2\073\ufff2\076\ufff2\001\002\000\026\011\uff8e" +
    "\012\uff8e\013\uff8e\014\uff8e\015\uff8e\017\uff8e\020\uff8e\073" +
    "\uff8e\074\245\076\uff8e\001\002\000\024\011\uff90\012\uff90" +
    "\013\uff90\014\uff90\015\uff90\017\uff90\020\uff90\073\uff90\076" +
    "\uff90\001\002\000\004\037\211\001\002\000\024\011\uff8f" +
    "\012\uff8f\013\uff8f\014\uff8f\015\uff8f\017\uff8f\020\uff8f\073" +
    "\uff8f\076\uff8f\001\002\000\016\025\160\037\167\040\154" +
    "\041\166\042\164\044\157\001\002\000\004\073\uff78\001" +
    "\002\000\004\010\uff79\001\002\000\016\003\uff80\034\uff80" +
    "\060\uff80\061\uff80\073\uff80\076\uff80\001\002\000\014\002" +
    "\ufffb\003\ufffb\004\ufffb\005\ufffb\007\ufffb\001\002\000\014" +
    "\002\uffb5\003\uffb5\004\uffb5\005\uffb5\007\uffb5\001\002\000" +
    "\014\002\uffb6\003\uffb6\004\uffb6\005\uffb6\007\uffb6\001\002" +
    "\000\022\025\uff96\032\uff96\037\uff96\040\uff96\041\uff96\042" +
    "\uff96\044\uff96\072\uff96\001\002\000\022\025\uff97\032\uff97" +
    "\037\uff97\040\uff97\041\uff97\042\uff97\044\uff97\072\uff97\001" +
    "\002\000\022\025\uff9b\032\uff9b\037\uff9b\040\uff9b\041\uff9b" +
    "\042\uff9b\044\uff9b\072\uff9b\001\002\000\022\025\uff93\032" +
    "\uff93\037\uff93\040\uff93\041\uff93\042\uff93\044\uff93\072\uff93" +
    "\001\002\000\022\025\uff95\032\uff95\037\uff95\040\uff95\041" +
    "\uff95\042\uff95\044\uff95\072\uff95\001\002\000\022\025\uff99" +
    "\032\uff99\037\uff99\040\uff99\041\uff99\042\uff99\044\uff99\072" +
    "\uff99\001\002\000\022\025\uff98\032\uff98\037\uff98\040\uff98" +
    "\041\uff98\042\uff98\044\uff98\072\uff98\001\002\000\022\025" +
    "\026\032\053\037\033\040\055\041\061\042\027\044\025" +
    "\072\103\001\002\000\022\025\uff9a\032\uff9a\037\uff9a\040" +
    "\uff9a\041\uff9a\042\uff9a\044\uff9a\072\uff9a\001\002\000\022" +
    "\025\uff94\032\uff94\037\uff94\040\uff94\041\uff94\042\uff94\044" +
    "\uff94\072\uff94\001\002\000\020\003\uffaa\011\uffaa\055\064" +
    "\056\063\057\065\074\uffaa\075\070\001\002\000\010\003" +
    "\uffa9\011\uffa9\074\uffa9\001\002\000\006\003\uffb0\006\uffb0" +
    "\001\002\000\014\002\uffb2\003\uffb2\004\uffb2\005\uffb2\007" +
    "\uffb2\001\002\000\014\002\uff91\003\uff91\004\uff91\005\uff91" +
    "\007\uff91\001\002\000\004\037\211\001\002\000\004\011" +
    "\040\001\002\000\004\076\253\001\002\000\014\002\uff92" +
    "\003\uff92\004\uff92\005\uff92\007\uff92\001\002\000\004\002" +
    "\001\001\002\000\014\002\000\003\000\004\000\005\000" +
    "\007\000\001\002\000\022\011\040\012\204\013\175\014" +
    "\200\015\176\017\202\020\173\076\253\001\002\000\014" +
    "\002\ufffa\003\ufffa\004\ufffa\005\ufffa\007\ufffa\001\002\000" +
    "\004\076\253\001\002\000\006\011\040\076\253\001\002" +
    "\000\004\076\253\001\002\000\014\002\ufff8\003\ufff8\004" +
    "\ufff8\005\ufff8\007\ufff8\001\002\000\014\002\ufff7\003\ufff7" +
    "\004\ufff7\005\ufff7\007\ufff7\001\002\000\014\002\ufff9\003" +
    "\ufff9\004\ufff9\005\ufff9\007\ufff9\001\002\000\016\010\uffd5" +
    "\021\uffd5\037\uffd5\043\uffd5\045\uffd5\074\uffd5\001\002\000" +
    "\004\072\364\001\002\000\016\010\uffdd\021\uffdd\037\uffdd" +
    "\043\uffdd\045\uffdd\074\uffdd\001\002\000\006\010\uffe1\074" +
    "\362\001\002\000\016\010\uffd6\021\uffd6\037\uffd6\043\uffd6" +
    "\045\uffd6\074\uffd6\001\002\000\016\010\uffdf\021\354\037" +
    "\357\043\353\045\356\074\uffdf\001\002\000\004\010\uffe4" +
    "\001\002\000\032\025\026\026\331\027\314\030\330\031" +
    "\324\032\053\037\033\040\055\041\061\042\027\044\025" +
    "\072\060\001\002\000\016\010\uffd3\021\uffd3\037\uffd3\043" +
    "\uffd3\045\uffd3\074\uffd3\001\002\000\004\072\347\001\002" +
    "\000\016\010\uffd4\021\uffd4\037\uffd4\043\uffd4\045\uffd4\074" +
    "\uffd4\001\002\000\004\010\uffe6\001\002\000\026\010\uffde" +
    "\021\uffde\037\uffde\043\uffde\045\uffde\055\064\056\063\057" +
    "\065\074\uffde\075\070\001\002\000\004\072\344\001\002" +
    "\000\004\072\332\001\002\000\016\024\333\025\336\037" +
    "\033\042\027\044\025\075\337\001\002\000\012\025\343" +
    "\037\033\042\027\044\025\001\002\000\004\073\uffca\001" +
    "\002\000\004\073\341\001\002\000\004\073\uffcb\001\002" +
    "\000\004\073\340\001\002\000\016\010\uffd1\021\uffd1\037" +
    "\uffd1\043\uffd1\045\uffd1\074\uffd1\001\002\000\016\010\uffd2" +
    "\021\uffd2\037\uffd2\043\uffd2\045\uffd2\074\uffd2\001\002\000" +
    "\004\073\uffcd\001\002\000\004\073\uffcc\001\002\000\014" +
    "\024\333\025\336\037\033\042\027\044\025\001\002\000" +
    "\004\073\346\001\002\000\016\010\uffcf\021\uffcf\037\uffcf" +
    "\043\uffcf\045\uffcf\074\uffcf\001\002\000\014\024\333\025" +
    "\336\037\033\042\027\044\025\001\002\000\004\073\351" +
    "\001\002\000\016\010\uffce\021\uffce\037\uffce\043\uffce\045" +
    "\uffce\074\uffce\001\002\000\004\010\uffe5\001\002\000\006" +
    "\010\uffc4\074\uffc4\001\002\000\010\037\357\043\353\045" +
    "\356\001\002\000\006\010\uffdc\074\uffdc\001\002\000\006" +
    "\010\uffc2\074\uffc2\001\002\000\006\010\uffc3\074\uffc3\001" +
    "\002\000\006\010\uffe0\074\uffe0\001\002\000\006\010\uffdb" +
    "\074\uffdb\001\002\000\032\025\026\026\331\027\314\030" +
    "\330\031\324\032\053\037\033\040\055\041\061\042\027" +
    "\044\025\072\060\001\002\000\004\010\uffe2\001\002\000" +
    "\014\024\333\025\336\037\033\042\027\044\025\001\002" +
    "\000\004\073\366\001\002\000\016\010\uffd0\021\uffd0\037" +
    "\uffd0\043\uffd0\045\uffd0\074\uffd0\001\002" });
=======
    "\000\355\000\012\003\013\004\014\005\006\007\011\001" +
    "\002\000\030\025\330\026\026\027\333\030\053\035\033" +
    "\036\055\037\061\040\027\042\025\070\060\073\331\001" +
    "\002\000\004\010\170\001\002\000\006\003\uffb0\035\uffb0" +
    "\001\002\000\014\002\ufffc\003\ufffc\004\ufffc\005\ufffc\007" +
    "\ufffc\001\002\000\014\002\311\003\013\004\014\005\006" +
    "\007\011\001\002\000\006\003\304\010\305\001\002\000" +
=======
    "\000\350\000\012\003\013\004\014\005\006\007\011\001" +
    "\002\000\030\024\323\025\026\026\326\027\055\034\033" +
    "\035\057\036\063\037\027\041\025\067\062\072\324\001" +
    "\002\000\004\010\172\001\002\000\006\003\uffb4\034\uffb4" +
    "\001\002\000\014\002\ufffc\003\ufffc\004\ufffc\005\ufffc\007" +
    "\ufffc\001\002\000\014\002\304\003\013\004\014\005\006" +
    "\007\011\001\002\000\006\003\275\010\276\001\002\000" +
>>>>>>> release-0.3_card_49
    "\014\002\uffff\003\uffff\004\uffff\005\uffff\007\uffff\001\002" +
    "\000\006\003\uffb1\006\uffb1\001\002\000\030\025\uffdf\026" +
    "\uffdf\027\uffdf\030\uffdf\035\uffdf\036\uffdf\037\uffdf\040\uffdf" +
    "\042\uffdf\070\uffdf\073\uffdf\001\002\000\014\002\ufffe\003" +
    "\ufffe\004\ufffe\005\ufffe\007\ufffe\001\002\000\014\002\ufffd" +
    "\003\ufffd\004\ufffd\005\ufffd\007\ufffd\001\002\000\006\003" +
<<<<<<< HEAD
    "\303\035\211\001\002\000\006\003\022\006\023\001\002" +
    "\000\014\003\030\026\026\035\033\040\027\042\025\001" +
    "\002\000\014\002\uffb5\003\uffb5\004\uffb5\005\uffb5\007\uffb5" +
    "\001\002\000\014\003\uffb3\026\uffb3\035\uffb3\040\uffb3\042" +
    "\uffb3\001\002\000\024\044\270\060\276\061\273\062\274" +
    "\063\267\064\266\065\272\066\277\067\271\001\002\000" +
    "\110\003\uffc8\010\uffc8\011\uffc8\022\uffc8\031\uffc8\032\uffc8" +
    "\033\uffc8\034\uffc8\035\uffc8\041\uffc8\043\uffc8\044\uffc8\045" +
    "\uffc8\046\uffc8\047\uffc8\050\uffc8\051\uffc8\052\uffc8\053\uffc8" +
    "\054\uffc8\055\uffc8\056\uffc8\057\uffc8\060\uffc8\061\uffc8\062" +
    "\uffc8\063\uffc8\064\uffc8\065\uffc8\066\uffc8\067\uffc8\071\uffc8" +
    "\072\uffc8\073\uffc8\074\uffc8\001\002\000\110\003\uffca\010" +
    "\uffca\011\uffca\022\uffca\031\uffca\032\uffca\033\uffca\034\uffca" +
    "\035\uffca\041\uffca\043\uffca\044\uffca\045\uffca\046\uffca\047" +
    "\uffca\050\uffca\051\uffca\052\uffca\053\uffca\054\uffca\055\uffca" +
    "\056\uffca\057\uffca\060\uffca\061\uffca\062\uffca\063\uffca\064" +
    "\uffca\065\uffca\066\uffca\067\uffca\071\uffca\072\uffca\073\uffca" +
    "\074\uffca\001\002\000\110\003\uffc7\010\uffc7\011\uffc7\022" +
    "\uffc7\031\uffc7\032\uffc7\033\uffc7\034\uffc7\035\uffc7\041\uffc7" +
    "\043\uffc7\044\uffc7\045\uffc7\046\uffc7\047\uffc7\050\uffc7\051" +
    "\uffc7\052\uffc7\053\uffc7\054\uffc7\055\uffc7\056\uffc7\057\uffc7" +
    "\060\uffc7\061\uffc7\062\uffc7\063\uffc7\064\uffc7\065\uffc7\066" +
    "\uffc7\067\uffc7\071\uffc7\072\uffc7\073\uffc7\074\uffc7\001\002" +
    "\000\006\003\uffad\011\uffad\001\002\000\006\003\040\011" +
    "\037\001\002\000\010\003\uffae\011\uffae\072\035\001\002" +
    "\000\110\003\uffc9\010\uffc9\011\uffc9\022\uffc9\031\uffc9\032" +
    "\uffc9\033\uffc9\034\uffc9\035\uffc9\041\uffc9\043\uffc9\044\uffc9" +
    "\045\uffc9\046\uffc9\047\uffc9\050\uffc9\051\uffc9\052\uffc9\053" +
    "\uffc9\054\uffc9\055\uffc9\056\uffc9\057\uffc9\060\uffc9\061\uffc9" +
    "\062\uffc9\063\uffc9\064\uffc9\065\uffc9\066\uffc9\067\uffc9\071" +
    "\uffc9\072\uffc9\073\uffc9\074\uffc9\001\002\000\110\003\uffcb" +
    "\010\uffcb\011\uffcb\022\uffcb\031\uffcb\032\uffcb\033\uffcb\034" +
    "\uffcb\035\uffcb\041\uffcb\043\uffcb\044\uffcb\045\uffcb\046\uffcb" +
    "\047\uffcb\050\uffcb\051\uffcb\052\uffcb\053\uffcb\054\uffcb\055" +
    "\uffcb\056\uffcb\057\uffcb\060\uffcb\061\uffcb\062\uffcb\063\uffcb" +
    "\064\uffcb\065\uffcb\066\uffcb\067\uffcb\071\uffcb\072\uffcb\073" +
    "\uffcb\074\uffcb\001\002\000\014\003\030\026\026\035\033" +
    "\040\027\042\025\001\002\000\006\003\uffaf\011\uffaf\001" +
    "\002\000\022\026\uff88\030\uff88\035\uff88\036\uff88\037\uff88" +
    "\040\uff88\042\uff88\070\uff88\001\002\000\014\002\uffb6\003" +
    "\uffb6\004\uffb6\005\uffb6\007\uffb6\001\002\000\006\003\264" +
    "\074\263\001\002\000\022\026\026\030\053\035\047\036" +
    "\055\037\061\040\027\042\050\070\060\001\002\000\070" +
    "\003\uffa4\010\uffa4\011\uffa4\022\uffa4\031\uffa4\032\uffa4\033" +
    "\uffa4\034\uffa4\035\uffa4\041\uffa4\043\uffa4\044\uffa4\045\uffa4" +
    "\046\uffa4\047\uffa4\050\uffa4\051\uffa4\052\uffa4\053\uffa4\054" +
    "\uffa4\055\uffa4\056\uffa4\057\uffa4\071\uffa4\072\uffa4\073\uffa4" +
    "\074\uffa4\001\002\000\004\024\151\001\002\000\020\044" +
    "\147\045\146\046\145\047\143\050\141\051\140\052\144" +
    "\001\002\000\070\003\uffa7\010\uffa7\011\uffa7\022\uffa7\031" +
    "\uffa7\032\uffa7\033\uffa7\034\uffa7\035\uffa7\041\uffa7\043\uffa7" +
    "\044\uffa7\045\uffa7\046\uffa7\047\uffa7\050\uffa7\051\uffa7\052" +
    "\uffa7\053\uffa7\054\uffa7\055\uffa7\056\uffa7\057\uffa7\071\uffa7" +
    "\072\uffa7\073\uffa7\074\uffa7\001\002\000\032\024\uff78\044" +
    "\uffc9\045\uffc9\046\uffc9\047\uffc9\050\uffc9\051\uffc9\052\uffc9" +
    "\053\uffc9\054\uffc9\055\uffc9\073\uffc9\001\002\000\032\024" +
    "\uff77\044\uffc8\045\uffc8\046\uffc8\047\uffc8\050\uffc8\051\uffc8" +
    "\052\uffc8\053\uffc8\054\uffc8\055\uffc8\073\uffc8\001\002\000" +
    "\016\003\uff86\032\uff86\056\136\057\135\071\uff86\074\uff86" +
    "\001\002\000\060\003\uffd4\010\uffd4\022\uffd4\032\uffd4\035" +
    "\uffd4\041\uffd4\043\uffd4\044\uffd4\045\uffd4\046\uffd4\047\uffd4" +
    "\050\uffd4\051\uffd4\052\uffd4\053\uffd4\054\uffd4\055\uffd4\056" +
    "\uffd4\057\uffd4\071\uffd4\072\uffd4\073\uffd4\074\uffd4\001\002" +
    "\000\014\026\026\031\075\035\033\040\027\042\025\001" +
    "\002\000\060\003\uffd5\010\uffd5\022\uffd5\032\uffd5\035\uffd5" +
    "\041\uffd5\043\uffd5\044\uffd5\045\uffd5\046\uffd5\047\uffd5\050" +
    "\uffd5\051\uffd5\052\uffd5\053\uffd5\054\uffd5\055\uffd5\056\uffd5" +
    "\057\uffd5\071\uffd5\072\uffd5\073\uffd5\074\uffd5\001\002\000" +
    "\070\003\uffa6\010\uffa6\011\uffa6\022\uffa6\031\uffa6\032\uffa6" +
    "\033\uffa6\034\uffa6\035\uffa6\041\uffa6\043\uffa6\044\uffa6\045" +
    "\uffa6\046\uffa6\047\uffa6\050\uffa6\051\uffa6\052\uffa6\053\uffa6" +
    "\054\uffa6\055\uffa6\056\uffa6\057\uffa6\071\uffa6\072\uffa6\073" +
    "\uffa6\074\uffa6\001\002\000\044\003\uff83\032\uff83\044\uff83" +
    "\045\uff83\046\uff83\047\uff83\050\uff83\051\uff83\052\uff83\053" +
    "\065\054\063\055\064\056\uff83\057\uff83\071\uff83\073\070" +
    "\074\uff83\001\002\000\010\003\uff89\071\uff89\074\uff89\001" +
    "\002\000\022\026\026\030\053\035\033\036\055\037\061" +
    "\040\027\042\025\070\060\001\002\000\070\003\uffa5\010" +
    "\uffa5\011\uffa5\022\uffa5\031\uffa5\032\uffa5\033\uffa5\034\uffa5" +
    "\035\uffa5\041\uffa5\043\uffa5\044\uffa5\045\uffa5\046\uffa5\047" +
    "\uffa5\050\uffa5\051\uffa5\052\uffa5\053\uffa5\054\uffa5\055\uffa5" +
    "\056\uffa5\057\uffa5\071\uffa5\072\uffa5\073\uffa5\074\uffa5\001" +
    "\002\000\014\053\065\054\063\055\064\071\067\073\070" +
    "\001\002\000\022\026\uffa0\030\uffa0\035\uffa0\036\uffa0\037" +
    "\uffa0\040\uffa0\042\uffa0\070\uffa0\001\002\000\022\026\uff9e" +
    "\030\uff9e\035\uff9e\036\uff9e\037\uff9e\040\uff9e\042\uff9e\070" +
    "\uff9e\001\002\000\022\026\uffa1\030\uffa1\035\uffa1\036\uffa1" +
    "\037\uffa1\040\uffa1\042\uffa1\070\uffa1\001\002\000\022\026" +
    "\026\030\053\035\033\036\055\037\061\040\027\042\025" +
    "\070\060\001\002\000\060\003\uffd6\010\uffd6\022\uffd6\032" +
    "\uffd6\035\uffd6\041\uffd6\043\uffd6\044\uffd6\045\uffd6\046\uffd6" +
    "\047\uffd6\050\uffd6\051\uffd6\052\uffd6\053\uffd6\054\uffd6\055" +
    "\uffd6\056\uffd6\057\uffd6\071\uffd6\072\uffd6\073\uffd6\074\uffd6" +
    "\001\002\000\022\026\uff9f\030\uff9f\035\uff9f\036\uff9f\037" +
    "\uff9f\040\uff9f\042\uff9f\070\uff9f\001\002\000\060\003\uffd3" +
    "\010\uffd3\022\uffd3\032\uffd3\035\uffd3\041\uffd3\043\uffd3\044" +
    "\uffd3\045\uffd3\046\uffd3\047\uffd3\050\uffd3\051\uffd3\052\uffd3" +
    "\053\065\054\063\055\064\056\uffd3\057\uffd3\071\uffd3\072" +
    "\uffd3\073\070\074\uffd3\001\002\000\010\031\075\033\uffbe" +
    "\034\uffbe\001\002\000\004\031\075\001\002\000\004\032" +
    "\124\001\002\000\022\026\123\030\053\035\115\036\117" +
    "\037\121\040\122\042\116\070\060\001\002\000\006\033" +
    "\077\034\101\001\002\000\022\026\026\030\053\035\033" +
    "\036\055\037\061\040\027\042\025\070\103\001\002\000" +
    "\004\034\102\001\002\000\070\003\uffc3\010\uffc3\011\uffc3" +
    "\022\uffc3\031\uffc3\032\uffc3\033\uffc3\034\uffc3\035\uffc3\041" +
    "\uffc3\043\uffc3\044\uffc3\045\uffc3\046\uffc3\047\uffc3\050\uffc3" +
    "\051\uffc3\052\uffc3\053\uffc3\054\uffc3\055\uffc3\056\uffc3\057" +
    "\uffc3\071\uffc3\072\uffc3\073\uffc3\074\uffc3\001\002\000\070" +
    "\003\uffc2\010\uffc2\011\uffc2\022\uffc2\031\uffc2\032\uffc2\033" +
    "\uffc2\034\uffc2\035\uffc2\041\uffc2\043\uffc2\044\uffc2\045\uffc2" +
    "\046\uffc2\047\uffc2\050\uffc2\051\uffc2\052\uffc2\053\uffc2\054" +
    "\uffc2\055\uffc2\056\uffc2\057\uffc2\071\uffc2\072\uffc2\073\uffc2" +
    "\074\uffc2\001\002\000\022\026\026\030\053\035\033\036" +
    "\055\037\061\040\027\042\025\070\103\001\002\000\030" +
    "\003\uffaa\011\uffaa\031\uffaa\033\uffaa\034\uffaa\053\uffaa\054" +
    "\uffaa\055\uffaa\071\uffaa\072\uffaa\073\uffaa\001\002\000\030" +
    "\003\uffa9\011\uffa9\031\uffa9\033\uffa9\034\uffa9\053\uffa9\054" +
    "\uffa9\055\uffa9\071\uffa9\072\uffa9\073\uffa9\001\002\000\030" +
    "\003\uffa8\011\uffa8\031\uffa8\033\uffa8\034\uffa8\053\uffa8\054" +
    "\uffa8\055\uffa8\071\uffa8\072\uffa8\073\uffa8\001\002\000\014" +
    "\034\uffb9\053\065\054\063\055\064\073\070\001\002\000" +
    "\022\026\026\030\053\035\033\036\055\037\061\040\027" +
    "\042\025\070\103\001\002\000\030\003\uffa2\011\uffa2\031" +
    "\uffa2\033\uffa2\034\uffa2\053\065\054\063\055\064\071\uffa2" +
    "\072\uffa2\073\070\001\002\000\014\053\065\054\063\055" +
    "\064\071\113\073\070\001\002\000\030\003\uffa3\011\uffa3" +
    "\031\uffa3\033\uffa3\034\uffa3\053\uffa3\054\uffa3\055\uffa3\071" +
    "\uffa3\072\uffa3\073\uffa3\001\002\000\004\032\uffbb\001\002" +
    "\000\034\024\uff78\032\uff76\044\uffc9\045\uffc9\046\uffc9\047" +
    "\uffc9\050\uffc9\051\uffc9\052\uffc9\053\uffc9\054\uffc9\055\uffc9" +
    "\073\uffc9\001\002\000\034\024\uff77\032\uff72\044\uffc8\045" +
    "\uffc8\046\uffc8\047\uffc8\050\uffc8\051\uffc8\052\uffc8\053\uffc8" +
    "\054\uffc8\055\uffc8\073\uffc8\001\002\000\032\032\uff75\044" +
    "\uffa6\045\uffa6\046\uffa6\047\uffa6\050\uffa6\051\uffa6\052\uffa6" +
    "\053\uffa6\054\uffa6\055\uffa6\073\uffa6\001\002\000\004\032" +
    "\uffbc\001\002\000\032\032\uff74\044\uffa5\045\uffa5\046\uffa5" +
    "\047\uffa5\050\uffa5\051\uffa5\052\uffa5\053\uffa5\054\uffa5\055" +
    "\uffa5\073\uffa5\001\002\000\032\032\uff73\044\uffc7\045\uffc7" +
    "\046\uffc7\047\uffc7\050\uffc7\051\uffc7\052\uffc7\053\uffc7\054" +
    "\uffc7\055\uffc7\073\uffc7\001\002\000\032\032\uff71\044\uffca" +
    "\045\uffca\046\uffca\047\uffca\050\uffca\051\uffca\052\uffca\053" +
    "\uffca\054\uffca\055\uffca\073\uffca\001\002\000\022\026\026" +
    "\030\053\035\033\036\055\037\061\040\027\042\025\070" +
    "\103\001\002\000\010\031\uffbd\033\uffbd\034\uffbd\001\002" +
    "\000\020\031\uffba\033\uffba\034\uffba\053\065\054\063\055" +
    "\064\073\070\001\002\000\006\033\077\034\131\001\002" +
    "\000\004\034\132\001\002\000\070\003\uffc1\010\uffc1\011" +
    "\uffc1\022\uffc1\031\uffc1\032\uffc1\033\uffc1\034\uffc1\035\uffc1" +
    "\041\uffc1\043\uffc1\044\uffc1\045\uffc1\046\uffc1\047\uffc1\050" +
    "\uffc1\051\uffc1\052\uffc1\053\uffc1\054\uffc1\055\uffc1\056\uffc1" +
    "\057\uffc1\071\uffc1\072\uffc1\073\uffc1\074\uffc1\001\002\000" +
    "\070\003\uffc0\010\uffc0\011\uffc0\022\uffc0\031\uffc0\032\uffc0" +
    "\033\uffc0\034\uffc0\035\uffc0\041\uffc0\043\uffc0\044\uffc0\045" +
    "\uffc0\046\uffc0\047\uffc0\050\uffc0\051\uffc0\052\uffc0\053\uffc0" +
    "\054\uffc0\055\uffc0\056\uffc0\057\uffc0\071\uffc0\072\uffc0\073" +
    "\uffc0\074\uffc0\001\002\000\006\033\uffbf\034\uffbf\001\002" +
    "\000\022\026\026\030\053\035\047\036\055\037\061\040" +
    "\027\042\050\070\060\001\002\000\022\026\uff68\030\uff68" +
    "\035\uff68\036\uff68\037\uff68\040\uff68\042\uff68\070\uff68\001" +
    "\002\000\022\026\uff69\030\uff69\035\uff69\036\uff69\037\uff69" +
    "\040\uff69\042\uff69\070\uff69\001\002\000\012\003\uff87\032" +
    "\uff87\071\uff87\074\uff87\001\002\000\022\026\uff6b\030\uff6b" +
    "\035\uff6b\036\uff6b\037\uff6b\040\uff6b\042\uff6b\070\uff6b\001" +
    "\002\000\022\026\uff6c\030\uff6c\035\uff6c\036\uff6c\037\uff6c" +
    "\040\uff6c\042\uff6c\070\uff6c\001\002\000\022\026\026\030" +
    "\053\035\033\036\055\037\061\040\027\042\025\070\060" +
    "\001\002\000\022\026\uff6d\030\uff6d\035\uff6d\036\uff6d\037" +
    "\uff6d\040\uff6d\042\uff6d\070\uff6d\001\002\000\022\026\uff6a" +
    "\030\uff6a\035\uff6a\036\uff6a\037\uff6a\040\uff6a\042\uff6a\070" +
    "\uff6a\001\002\000\022\026\uff6e\030\uff6e\035\uff6e\036\uff6e" +
    "\037\uff6e\040\uff6e\042\uff6e\070\uff6e\001\002\000\022\026" +
    "\uff6f\030\uff6f\035\uff6f\036\uff6f\037\uff6f\040\uff6f\042\uff6f" +
    "\070\uff6f\001\002\000\022\026\uff70\030\uff70\035\uff70\036" +
    "\uff70\037\uff70\040\uff70\042\uff70\070\uff70\001\002\000\016" +
    "\003\uff85\032\uff85\056\uff85\057\uff85\071\uff85\074\uff85\001" +
    "\002\000\004\070\152\001\002\000\020\004\014\026\160" +
    "\035\167\036\154\037\166\040\164\042\157\001\002\000" +
    "\016\003\uff84\032\uff84\056\uff84\057\uff84\071\uff84\074\uff84" +
    "\001\002\000\034\011\uff75\012\uff75\013\uff75\014\uff75\015" +
    "\uff75\017\uff75\020\uff75\044\uff75\056\uff75\057\uff75\071\uff75" +
    "\072\uff75\074\uff75\001\002\000\004\071\262\001\002\000" +
    "\012\026\026\035\033\040\027\042\025\001\002\000\034" +
    "\011\uff72\012\uff72\013\uff72\014\uff72\015\uff72\017\uff72\020" +
    "\uff72\044\uff72\056\uff72\057\uff72\071\uff72\072\uff72\074\uff72" +
    "\001\002\000\034\011\uff71\012\uff71\013\uff71\014\uff71\015" +
    "\uff71\017\uff71\020\uff71\044\uff71\056\uff71\057\uff71\071\uff71" +
    "\072\uff71\074\uff71\001\002\000\006\071\uff79\072\257\001" +
    "\002\000\004\071\uff81\001\002\000\004\071\uff80\001\002" +
    "\000\034\011\uff73\012\uff73\013\uff73\014\uff73\015\uff73\017" +
    "\uff73\020\uff73\044\uff73\056\uff73\057\uff73\071\uff73\072\uff73" +
    "\074\uff73\001\002\000\004\010\170\001\002\000\034\011" +
    "\uff74\012\uff74\013\uff74\014\uff74\015\uff74\017\uff74\020\uff74" +
    "\044\uff74\056\uff74\057\uff74\071\uff74\072\uff74\074\uff74\001" +
    "\002\000\034\011\uff76\012\uff76\013\uff76\014\uff76\015\uff76" +
    "\017\uff76\020\uff76\044\uff76\056\uff76\057\uff76\071\uff76\072" +
    "\uff76\074\uff76\001\002\000\004\035\uff8f\001\002\000\004" +
    "\035\211\001\002\000\022\011\037\012\204\013\175\014" +
    "\200\015\176\017\203\020\173\071\uff7f\001\002\000\004" +
    "\035\211\001\002\000\004\035\211\001\002\000\006\016" +
    "\225\020\224\001\002\000\004\016\222\001\002\000\024" +
    "\011\ufff5\012\204\013\175\014\200\015\176\017\203\020" +
    "\173\071\ufff5\074\ufff5\001\002\000\006\016\217\020\216" +
    "\001\002\000\004\071\uff7e\001\002\000\006\011\037\071" +
    "\uff7d\001\002\000\004\020\214\001\002\000\004\020\205" +
    "\001\002\000\004\035\211\001\002\000\024\011\ufff4\012" +
    "\ufff4\013\ufff4\014\ufff4\015\ufff4\017\ufff4\020\ufff4\071\ufff4" +
    "\074\ufff4\001\002\000\036\003\uff8d\006\uff8d\011\uff8d\012" +
    "\uff8d\013\uff8d\014\uff8d\015\uff8d\017\uff8d\020\uff8d\021\uff8d" +
    "\023\uff8d\071\uff8d\072\uff8d\074\uff8d\001\002\000\036\003" +
    "\uff8e\006\uff8e\011\uff8e\012\uff8e\013\uff8e\014\uff8e\015\uff8e" +
    "\017\uff8e\020\uff8e\021\uff8e\023\uff8e\071\uff8e\072\uff8e\074" +
    "\uff8e\001\002\000\042\003\uff8c\006\uff8c\011\uff8c\012\uff8c" +
    "\013\uff8c\014\uff8c\015\uff8c\017\uff8c\020\uff8c\021\uff8c\023" +
    "\uff8c\035\213\041\212\071\uff8c\072\uff8c\074\uff8c\001\002" +
    "\000\036\003\uff8a\006\uff8a\011\uff8a\012\uff8a\013\uff8a\014" +
    "\uff8a\015\uff8a\017\uff8a\020\uff8a\021\uff8a\023\uff8a\071\uff8a" +
    "\072\uff8a\074\uff8a\001\002\000\036\003\uff8b\006\uff8b\011" +
    "\uff8b\012\uff8b\013\uff8b\014\uff8b\015\uff8b\017\uff8b\020\uff8b" +
    "\021\uff8b\023\uff8b\071\uff8b\072\uff8b\074\uff8b\001\002\000" +
    "\004\035\uffec\001\002\000\004\071\uff7c\001\002\000\004" +
    "\035\uffea\001\002\000\004\020\220\001\002\000\004\035" +
    "\uffe8\001\002\000\010\011\ufff6\071\ufff6\074\ufff6\001\002" +
    "\000\004\020\223\001\002\000\004\035\uffe7\001\002\000" +
    "\004\035\uffeb\001\002\000\004\020\226\001\002\000\004" +
    "\035\uffe9\001\002\000\004\023\231\001\002\000\024\011" +
    "\ufff0\012\ufff0\013\ufff0\014\ufff0\015\ufff0\017\ufff0\020\ufff0" +
    "\071\ufff0\074\ufff0\001\002\000\016\026\160\035\167\036" +
    "\154\037\166\040\164\042\157\001\002\000\024\011\uffe6" +
    "\012\uffe6\013\uffe6\014\uffe6\015\uffe6\017\uffe6\020\uffe6\071" +
    "\uffe6\074\uffe6\001\002\000\030\011\uffe4\012\uffe4\013\uffe4" +
    "\014\uffe4\015\uffe4\017\uffe4\020\uffe4\056\136\057\135\071" +
    "\uffe4\074\uffe4\001\002\000\004\044\235\001\002\000\016" +
    "\026\160\035\167\036\154\037\166\040\164\042\157\001" +
    "\002\000\030\011\uffe3\012\uffe3\013\uffe3\014\uffe3\015\uffe3" +
    "\017\uffe3\020\uffe3\056\uffe3\057\uffe3\071\uffe3\074\uffe3\001" +
    "\002\000\016\026\160\035\167\036\154\037\166\040\164" +
    "\042\157\001\002\000\024\011\uffe5\012\uffe5\013\uffe5\014" +
    "\uffe5\015\uffe5\017\uffe5\020\uffe5\071\uffe5\074\uffe5\001\002" +
    "\000\030\011\ufff3\012\ufff3\013\ufff3\014\ufff3\015\ufff3\017" +
    "\ufff3\020\ufff3\021\243\023\231\071\ufff3\074\ufff3\001\002" +
    "\000\024\011\ufff1\012\ufff1\013\ufff1\014\ufff1\015\ufff1\017" +
    "\ufff1\020\ufff1\071\ufff1\074\ufff1\001\002\000\004\070\245" +
    "\001\002\000\024\011\ufff2\012\ufff2\013\ufff2\014\ufff2\015" +
    "\ufff2\017\ufff2\020\ufff2\071\ufff2\074\ufff2\001\002\000\010" +
    "\035\033\040\027\042\025\001\002\000\006\071\uffed\072" +
    "\251\001\002\000\004\071\250\001\002\000\024\011\uffef" +
    "\012\uffef\013\uffef\014\uffef\015\uffef\017\uffef\020\uffef\071" +
    "\uffef\074\uffef\001\002\000\010\035\033\040\027\042\025" +
    "\001\002\000\004\071\uffee\001\002\000\026\011\uff90\012" +
    "\uff90\013\uff90\014\uff90\015\uff90\017\uff90\020\uff90\071\uff90" +
    "\072\255\074\uff90\001\002\000\024\011\uff92\012\uff92\013" +
    "\uff92\014\uff92\015\uff92\017\uff92\020\uff92\071\uff92\074\uff92" +
    "\001\002\000\004\035\211\001\002\000\024\011\uff91\012" +
    "\uff91\013\uff91\014\uff91\015\uff91\017\uff91\020\uff91\071\uff91" +
    "\074\uff91\001\002\000\016\026\160\035\167\036\154\037" +
    "\166\040\164\042\157\001\002\000\004\071\uff7a\001\002" +
    "\000\004\010\uff7b\001\002\000\016\003\uff82\032\uff82\056" +
    "\uff82\057\uff82\071\uff82\074\uff82\001\002\000\014\002\ufffb" +
    "\003\ufffb\004\ufffb\005\ufffb\007\ufffb\001\002\000\014\002" +
    "\uffb7\003\uffb7\004\uffb7\005\uffb7\007\uffb7\001\002\000\014" +
    "\002\uffb8\003\uffb8\004\uffb8\005\uffb8\007\uffb8\001\002\000" +
    "\022\026\uff98\030\uff98\035\uff98\036\uff98\037\uff98\040\uff98" +
    "\042\uff98\070\uff98\001\002\000\022\026\uff99\030\uff99\035" +
    "\uff99\036\uff99\037\uff99\040\uff99\042\uff99\070\uff99\001\002" +
    "\000\022\026\uff9d\030\uff9d\035\uff9d\036\uff9d\037\uff9d\040" +
    "\uff9d\042\uff9d\070\uff9d\001\002\000\022\026\uff95\030\uff95" +
    "\035\uff95\036\uff95\037\uff95\040\uff95\042\uff95\070\uff95\001" +
    "\002\000\022\026\uff97\030\uff97\035\uff97\036\uff97\037\uff97" +
    "\040\uff97\042\uff97\070\uff97\001\002\000\022\026\uff9b\030" +
    "\uff9b\035\uff9b\036\uff9b\037\uff9b\040\uff9b\042\uff9b\070\uff9b" +
    "\001\002\000\022\026\uff9a\030\uff9a\035\uff9a\036\uff9a\037" +
    "\uff9a\040\uff9a\042\uff9a\070\uff9a\001\002\000\022\026\026" +
    "\030\053\035\033\036\055\037\061\040\027\042\025\070" +
    "\103\001\002\000\022\026\uff9c\030\uff9c\035\uff9c\036\uff9c" +
    "\037\uff9c\040\uff9c\042\uff9c\070\uff9c\001\002\000\022\026" +
    "\uff96\030\uff96\035\uff96\036\uff96\037\uff96\040\uff96\042\uff96" +
    "\070\uff96\001\002\000\020\003\uffac\011\uffac\053\065\054" +
    "\063\055\064\072\uffac\073\070\001\002\000\010\003\uffab" +
    "\011\uffab\072\uffab\001\002\000\006\003\uffb2\006\uffb2\001" +
    "\002\000\014\002\uffb4\003\uffb4\004\uffb4\005\uffb4\007\uffb4" +
    "\001\002\000\014\002\uff93\003\uff93\004\uff93\005\uff93\007" +
    "\uff93\001\002\000\004\035\211\001\002\000\004\011\037" +
    "\001\002\000\004\074\263\001\002\000\014\002\uff94\003" +
    "\uff94\004\uff94\005\uff94\007\uff94\001\002\000\004\002\001" +
    "\001\002\000\014\002\000\003\000\004\000\005\000\007" +
    "\000\001\002\000\022\011\037\012\204\013\175\014\200" +
    "\015\176\017\203\020\173\074\263\001\002\000\014\002" +
    "\ufffa\003\ufffa\004\ufffa\005\ufffa\007\ufffa\001\002\000\004" +
    "\074\263\001\002\000\006\011\037\074\263\001\002\000" +
    "\004\074\263\001\002\000\014\002\ufff8\003\ufff8\004\ufff8" +
    "\005\ufff8\007\ufff8\001\002\000\014\002\ufff7\003\ufff7\004" +
    "\ufff7\005\ufff7\007\ufff7\001\002\000\014\002\ufff9\003\ufff9" +
    "\004\ufff9\005\ufff9\007\ufff9\001\002\000\016\010\uffd9\022" +
    "\uffd9\035\uffd9\041\uffd9\043\uffd9\072\uffd9\001\002\000\006" +
    "\010\uffdd\072\356\001\002\000\016\010\uffd2\022\uffd2\035" +
    "\uffd2\041\uffd2\043\uffd2\072\uffd2\001\002\000\016\010\uffdb" +
    "\022\350\035\353\041\347\043\352\072\uffdb\001\002\000" +
    "\004\010\uffe0\001\002\000\024\026\026\027\333\030\053" +
    "\035\033\036\055\037\061\040\027\042\025\070\060\001" +
    "\002\000\004\010\uffe2\001\002\000\026\010\uffda\022\uffda" +
    "\035\uffda\041\uffda\043\uffda\053\065\054\063\055\064\072" +
    "\uffda\073\070\001\002\000\004\070\334\001\002\000\016" +
    "\025\335\026\340\035\033\040\027\042\025\073\341\001" +
    "\002\000\012\026\345\035\033\040\027\042\025\001\002" +
    "\000\004\071\uffcc\001\002\000\004\071\343\001\002\000" +
    "\004\071\uffcd\001\002\000\004\071\342\001\002\000\016" +
    "\010\uffd0\022\uffd0\035\uffd0\041\uffd0\043\uffd0\072\uffd0\001" +
    "\002\000\016\010\uffd1\022\uffd1\035\uffd1\041\uffd1\043\uffd1" +
    "\072\uffd1\001\002\000\004\071\uffcf\001\002\000\004\071" +
    "\uffce\001\002\000\004\010\uffe1\001\002\000\006\010\uffc6" +
    "\072\uffc6\001\002\000\010\035\353\041\347\043\352\001" +
    "\002\000\006\010\uffd8\072\uffd8\001\002\000\006\010\uffc4" +
    "\072\uffc4\001\002\000\006\010\uffc5\072\uffc5\001\002\000" +
    "\006\010\uffdc\072\uffdc\001\002\000\006\010\uffd7\072\uffd7" +
    "\001\002\000\024\026\026\027\333\030\053\035\033\036" +
    "\055\037\061\040\027\042\025\070\060\001\002\000\004" +
    "\010\uffde\001\002" });
>>>>>>> release-0.3_card_47
=======
    "\274\034\213\001\002\000\006\003\022\006\023\001\002" +
    "\000\014\003\030\025\026\034\033\037\027\041\025\001" +
    "\002\000\014\002\uffb9\003\uffb9\004\uffb9\005\uffb9\007\uffb9" +
    "\001\002\000\014\003\uffb7\025\uffb7\034\uffb7\037\uffb7\041" +
    "\uffb7\001\002\000\024\043\261\057\267\060\264\061\265" +
    "\062\260\063\257\064\263\065\270\066\262\001\002\000" +
    "\110\003\uffcc\010\uffcc\011\uffcc\021\uffcc\030\uffcc\031\uffcc" +
    "\032\uffcc\033\uffcc\034\uffcc\040\uffcc\042\uffcc\043\uffcc\044" +
    "\uffcc\045\uffcc\046\uffcc\047\uffcc\050\uffcc\051\uffcc\052\uffcc" +
    "\053\uffcc\054\uffcc\055\uffcc\056\uffcc\057\uffcc\060\uffcc\061" +
    "\uffcc\062\uffcc\063\uffcc\064\uffcc\065\uffcc\066\uffcc\070\uffcc" +
    "\071\uffcc\072\uffcc\073\uffcc\001\002\000\110\003\uffce\010" +
    "\uffce\011\uffce\021\uffce\030\uffce\031\uffce\032\uffce\033\uffce" +
    "\034\uffce\040\uffce\042\uffce\043\uffce\044\uffce\045\uffce\046" +
    "\uffce\047\uffce\050\uffce\051\uffce\052\uffce\053\uffce\054\uffce" +
    "\055\uffce\056\uffce\057\uffce\060\uffce\061\uffce\062\uffce\063" +
    "\uffce\064\uffce\065\uffce\066\uffce\070\uffce\071\uffce\072\uffce" +
    "\073\uffce\001\002\000\110\003\uffcb\010\uffcb\011\uffcb\021" +
    "\uffcb\030\uffcb\031\uffcb\032\uffcb\033\uffcb\034\uffcb\040\uffcb" +
    "\042\uffcb\043\uffcb\044\uffcb\045\uffcb\046\uffcb\047\uffcb\050" +
    "\uffcb\051\uffcb\052\uffcb\053\uffcb\054\uffcb\055\uffcb\056\uffcb" +
    "\057\uffcb\060\uffcb\061\uffcb\062\uffcb\063\uffcb\064\uffcb\065" +
    "\uffcb\066\uffcb\070\uffcb\071\uffcb\072\uffcb\073\uffcb\001\002" +
    "\000\010\003\uffb1\011\uffb1\073\uffb1\001\002\000\010\003" +
    "\040\011\041\073\037\001\002\000\012\003\uffb2\011\uffb2" +
    "\071\035\073\uffb2\001\002\000\110\003\uffcd\010\uffcd\011" +
    "\uffcd\021\uffcd\030\uffcd\031\uffcd\032\uffcd\033\uffcd\034\uffcd" +
    "\040\uffcd\042\uffcd\043\uffcd\044\uffcd\045\uffcd\046\uffcd\047" +
    "\uffcd\050\uffcd\051\uffcd\052\uffcd\053\uffcd\054\uffcd\055\uffcd" +
    "\056\uffcd\057\uffcd\060\uffcd\061\uffcd\062\uffcd\063\uffcd\064" +
    "\uffcd\065\uffcd\066\uffcd\070\uffcd\071\uffcd\072\uffcd\073\uffcd" +
    "\001\002\000\110\003\uffcf\010\uffcf\011\uffcf\021\uffcf\030" +
    "\uffcf\031\uffcf\032\uffcf\033\uffcf\034\uffcf\040\uffcf\042\uffcf" +
    "\043\uffcf\044\uffcf\045\uffcf\046\uffcf\047\uffcf\050\uffcf\051" +
    "\uffcf\052\uffcf\053\uffcf\054\uffcf\055\uffcf\056\uffcf\057\uffcf" +
    "\060\uffcf\061\uffcf\062\uffcf\063\uffcf\064\uffcf\065\uffcf\066" +
    "\uffcf\070\uffcf\071\uffcf\072\uffcf\073\uffcf\001\002\000\014" +
    "\003\030\025\026\034\033\037\027\041\025\001\002\000" +
    "\010\003\uffb3\011\uffb3\073\uffb3\001\002\000\014\002\ufffb" +
    "\003\ufffb\004\ufffb\005\ufffb\007\ufffb\001\002\000\014\002" +
    "\uffbb\003\uffbb\004\uffbb\005\uffbb\007\uffbb\001\002\000\022" +
    "\025\uff8b\027\uff8b\034\uff8b\035\uff8b\036\uff8b\037\uff8b\041" +
    "\uff8b\067\uff8b\001\002\000\004\073\037\001\002\000\004" +
    "\003\255\001\002\000\022\025\026\027\055\034\051\035" +
    "\057\036\063\037\027\041\052\067\062\001\002\000\070" +
    "\003\uffa8\010\uffa8\011\uffa8\021\uffa8\030\uffa8\031\uffa8\032" +
    "\uffa8\033\uffa8\034\uffa8\040\uffa8\042\uffa8\043\uffa8\044\uffa8" +
    "\045\uffa8\046\uffa8\047\uffa8\050\uffa8\051\uffa8\052\uffa8\053" +
    "\uffa8\054\uffa8\055\uffa8\056\uffa8\070\uffa8\071\uffa8\072\uffa8" +
    "\073\uffa8\001\002\000\004\023\153\001\002\000\020\043" +
    "\151\044\150\045\147\046\145\047\143\050\142\051\146" +
    "\001\002\000\070\003\uffab\010\uffab\011\uffab\021\uffab\030" +
    "\uffab\031\uffab\032\uffab\033\uffab\034\uffab\040\uffab\042\uffab" +
    "\043\uffab\044\uffab\045\uffab\046\uffab\047\uffab\050\uffab\051" +
    "\uffab\052\uffab\053\uffab\054\uffab\055\uffab\056\uffab\070\uffab" +
    "\071\uffab\072\uffab\073\uffab\001\002\000\032\023\uff7b\043" +
    "\uffcd\044\uffcd\045\uffcd\046\uffcd\047\uffcd\050\uffcd\051\uffcd" +
    "\052\uffcd\053\uffcd\054\uffcd\072\uffcd\001\002\000\032\023" +
    "\uff7a\043\uffcc\044\uffcc\045\uffcc\046\uffcc\047\uffcc\050\uffcc" +
    "\051\uffcc\052\uffcc\053\uffcc\054\uffcc\072\uffcc\001\002\000" +
    "\014\031\uff89\055\140\056\137\070\uff89\073\uff89\001\002" +
    "\000\056\010\uffd8\021\uffd8\031\uffd8\034\uffd8\040\uffd8\042" +
    "\uffd8\043\uffd8\044\uffd8\045\uffd8\046\uffd8\047\uffd8\050\uffd8" +
    "\051\uffd8\052\uffd8\053\uffd8\054\uffd8\055\uffd8\056\uffd8\070" +
    "\uffd8\071\uffd8\072\uffd8\073\uffd8\001\002\000\014\025\026" +
    "\030\077\034\033\037\027\041\025\001\002\000\056\010" +
    "\uffd9\021\uffd9\031\uffd9\034\uffd9\040\uffd9\042\uffd9\043\uffd9" +
    "\044\uffd9\045\uffd9\046\uffd9\047\uffd9\050\uffd9\051\uffd9\052" +
    "\uffd9\053\uffd9\054\uffd9\055\uffd9\056\uffd9\070\uffd9\071\uffd9" +
    "\072\uffd9\073\uffd9\001\002\000\070\003\uffaa\010\uffaa\011" +
    "\uffaa\021\uffaa\030\uffaa\031\uffaa\032\uffaa\033\uffaa\034\uffaa" +
    "\040\uffaa\042\uffaa\043\uffaa\044\uffaa\045\uffaa\046\uffaa\047" +
    "\uffaa\050\uffaa\051\uffaa\052\uffaa\053\uffaa\054\uffaa\055\uffaa" +
    "\056\uffaa\070\uffaa\071\uffaa\072\uffaa\073\uffaa\001\002\000" +
    "\042\031\uff86\043\uff86\044\uff86\045\uff86\046\uff86\047\uff86" +
    "\050\uff86\051\uff86\052\066\053\065\054\067\055\uff86\056" +
    "\uff86\070\uff86\072\072\073\uff86\001\002\000\006\070\uff8c" +
    "\073\uff8c\001\002\000\022\025\026\027\055\034\033\035" +
    "\057\036\063\037\027\041\025\067\062\001\002\000\070" +
    "\003\uffa9\010\uffa9\011\uffa9\021\uffa9\030\uffa9\031\uffa9\032" +
    "\uffa9\033\uffa9\034\uffa9\040\uffa9\042\uffa9\043\uffa9\044\uffa9" +
    "\045\uffa9\046\uffa9\047\uffa9\050\uffa9\051\uffa9\052\uffa9\053" +
    "\uffa9\054\uffa9\055\uffa9\056\uffa9\070\uffa9\071\uffa9\072\uffa9" +
    "\073\uffa9\001\002\000\014\052\066\053\065\054\067\070" +
    "\071\072\072\001\002\000\022\025\uffa4\027\uffa4\034\uffa4" +
    "\035\uffa4\036\uffa4\037\uffa4\041\uffa4\067\uffa4\001\002\000" +
    "\022\025\uffa5\027\uffa5\034\uffa5\035\uffa5\036\uffa5\037\uffa5" +
    "\041\uffa5\067\uffa5\001\002\000\022\025\uffa2\027\uffa2\034" +
    "\uffa2\035\uffa2\036\uffa2\037\uffa2\041\uffa2\067\uffa2\001\002" +
    "\000\022\025\026\027\055\034\033\035\057\036\063\037" +
    "\027\041\025\067\062\001\002\000\056\010\uffda\021\uffda" +
    "\031\uffda\034\uffda\040\uffda\042\uffda\043\uffda\044\uffda\045" +
    "\uffda\046\uffda\047\uffda\050\uffda\051\uffda\052\uffda\053\uffda" +
    "\054\uffda\055\uffda\056\uffda\070\uffda\071\uffda\072\uffda\073" +
    "\uffda\001\002\000\022\025\uffa3\027\uffa3\034\uffa3\035\uffa3" +
    "\036\uffa3\037\uffa3\041\uffa3\067\uffa3\001\002\000\056\010" +
    "\uffd7\021\uffd7\031\uffd7\034\uffd7\040\uffd7\042\uffd7\043\uffd7" +
    "\044\uffd7\045\uffd7\046\uffd7\047\uffd7\050\uffd7\051\uffd7\052" +
    "\066\053\065\054\067\055\uffd7\056\uffd7\070\uffd7\071\uffd7" +
    "\072\072\073\uffd7\001\002\000\010\030\077\032\uffc2\033" +
    "\uffc2\001\002\000\004\030\077\001\002\000\004\031\126" +
    "\001\002\000\022\025\125\027\055\034\117\035\121\036" +
    "\123\037\124\041\120\067\062\001\002\000\006\032\101" +
    "\033\103\001\002\000\022\025\026\027\055\034\033\035" +
    "\057\036\063\037\027\041\025\067\105\001\002\000\004" +
    "\033\104\001\002\000\070\003\uffc7\010\uffc7\011\uffc7\021" +
    "\uffc7\030\uffc7\031\uffc7\032\uffc7\033\uffc7\034\uffc7\040\uffc7" +
    "\042\uffc7\043\uffc7\044\uffc7\045\uffc7\046\uffc7\047\uffc7\050" +
    "\uffc7\051\uffc7\052\uffc7\053\uffc7\054\uffc7\055\uffc7\056\uffc7" +
    "\070\uffc7\071\uffc7\072\uffc7\073\uffc7\001\002\000\070\003" +
    "\uffc6\010\uffc6\011\uffc6\021\uffc6\030\uffc6\031\uffc6\032\uffc6" +
    "\033\uffc6\034\uffc6\040\uffc6\042\uffc6\043\uffc6\044\uffc6\045" +
    "\uffc6\046\uffc6\047\uffc6\050\uffc6\051\uffc6\052\uffc6\053\uffc6" +
    "\054\uffc6\055\uffc6\056\uffc6\070\uffc6\071\uffc6\072\uffc6\073" +
    "\uffc6\001\002\000\022\025\026\027\055\034\033\035\057" +
    "\036\063\037\027\041\025\067\105\001\002\000\032\003" +
    "\uffae\011\uffae\030\uffae\032\uffae\033\uffae\052\uffae\053\uffae" +
    "\054\uffae\070\uffae\071\uffae\072\uffae\073\uffae\001\002\000" +
    "\032\003\uffad\011\uffad\030\uffad\032\uffad\033\uffad\052\uffad" +
    "\053\uffad\054\uffad\070\uffad\071\uffad\072\uffad\073\uffad\001" +
    "\002\000\032\003\uffac\011\uffac\030\uffac\032\uffac\033\uffac" +
    "\052\uffac\053\uffac\054\uffac\070\uffac\071\uffac\072\uffac\073" +
    "\uffac\001\002\000\014\033\uffbd\052\066\053\065\054\067" +
    "\072\072\001\002\000\022\025\026\027\055\034\033\035" +
    "\057\036\063\037\027\041\025\067\105\001\002\000\032" +
    "\003\uffa6\011\uffa6\030\uffa6\032\uffa6\033\uffa6\052\066\053" +
    "\065\054\067\070\uffa6\071\uffa6\072\072\073\uffa6\001\002" +
    "\000\014\052\066\053\065\054\067\070\115\072\072\001" +
    "\002\000\032\003\uffa7\011\uffa7\030\uffa7\032\uffa7\033\uffa7" +
    "\052\uffa7\053\uffa7\054\uffa7\070\uffa7\071\uffa7\072\uffa7\073" +
    "\uffa7\001\002\000\004\031\uffbf\001\002\000\034\023\uff7b" +
    "\031\uff79\043\uffcd\044\uffcd\045\uffcd\046\uffcd\047\uffcd\050" +
    "\uffcd\051\uffcd\052\uffcd\053\uffcd\054\uffcd\072\uffcd\001\002" +
    "\000\034\023\uff7a\031\uff75\043\uffcc\044\uffcc\045\uffcc\046" +
    "\uffcc\047\uffcc\050\uffcc\051\uffcc\052\uffcc\053\uffcc\054\uffcc" +
    "\072\uffcc\001\002\000\032\031\uff78\043\uffaa\044\uffaa\045" +
    "\uffaa\046\uffaa\047\uffaa\050\uffaa\051\uffaa\052\uffaa\053\uffaa" +
    "\054\uffaa\072\uffaa\001\002\000\004\031\uffc0\001\002\000" +
    "\032\031\uff77\043\uffa9\044\uffa9\045\uffa9\046\uffa9\047\uffa9" +
    "\050\uffa9\051\uffa9\052\uffa9\053\uffa9\054\uffa9\072\uffa9\001" +
    "\002\000\032\031\uff76\043\uffcb\044\uffcb\045\uffcb\046\uffcb" +
    "\047\uffcb\050\uffcb\051\uffcb\052\uffcb\053\uffcb\054\uffcb\072" +
    "\uffcb\001\002\000\032\031\uff74\043\uffce\044\uffce\045\uffce" +
    "\046\uffce\047\uffce\050\uffce\051\uffce\052\uffce\053\uffce\054" +
    "\uffce\072\uffce\001\002\000\022\025\026\027\055\034\033" +
    "\035\057\036\063\037\027\041\025\067\105\001\002\000" +
    "\010\030\uffc1\032\uffc1\033\uffc1\001\002\000\020\030\uffbe" +
    "\032\uffbe\033\uffbe\052\066\053\065\054\067\072\072\001" +
    "\002\000\006\032\101\033\133\001\002\000\004\033\134" +
    "\001\002\000\070\003\uffc5\010\uffc5\011\uffc5\021\uffc5\030" +
    "\uffc5\031\uffc5\032\uffc5\033\uffc5\034\uffc5\040\uffc5\042\uffc5" +
    "\043\uffc5\044\uffc5\045\uffc5\046\uffc5\047\uffc5\050\uffc5\051" +
    "\uffc5\052\uffc5\053\uffc5\054\uffc5\055\uffc5\056\uffc5\070\uffc5" +
    "\071\uffc5\072\uffc5\073\uffc5\001\002\000\070\003\uffc4\010" +
    "\uffc4\011\uffc4\021\uffc4\030\uffc4\031\uffc4\032\uffc4\033\uffc4" +
    "\034\uffc4\040\uffc4\042\uffc4\043\uffc4\044\uffc4\045\uffc4\046" +
    "\uffc4\047\uffc4\050\uffc4\051\uffc4\052\uffc4\053\uffc4\054\uffc4" +
    "\055\uffc4\056\uffc4\070\uffc4\071\uffc4\072\uffc4\073\uffc4\001" +
    "\002\000\006\032\uffc3\033\uffc3\001\002\000\022\025\026" +
    "\027\055\034\051\035\057\036\063\037\027\041\052\067" +
    "\062\001\002\000\022\025\uff6b\027\uff6b\034\uff6b\035\uff6b" +
    "\036\uff6b\037\uff6b\041\uff6b\067\uff6b\001\002\000\022\025" +
    "\uff6c\027\uff6c\034\uff6c\035\uff6c\036\uff6c\037\uff6c\041\uff6c" +
    "\067\uff6c\001\002\000\010\031\uff8a\070\uff8a\073\uff8a\001" +
    "\002\000\022\025\uff6e\027\uff6e\034\uff6e\035\uff6e\036\uff6e" +
    "\037\uff6e\041\uff6e\067\uff6e\001\002\000\022\025\uff6f\027" +
    "\uff6f\034\uff6f\035\uff6f\036\uff6f\037\uff6f\041\uff6f\067\uff6f" +
    "\001\002\000\022\025\026\027\055\034\033\035\057\036" +
    "\063\037\027\041\025\067\062\001\002\000\022\025\uff70" +
    "\027\uff70\034\uff70\035\uff70\036\uff70\037\uff70\041\uff70\067" +
    "\uff70\001\002\000\022\025\uff6d\027\uff6d\034\uff6d\035\uff6d" +
    "\036\uff6d\037\uff6d\041\uff6d\067\uff6d\001\002\000\022\025" +
    "\uff71\027\uff71\034\uff71\035\uff71\036\uff71\037\uff71\041\uff71" +
    "\067\uff71\001\002\000\022\025\uff72\027\uff72\034\uff72\035" +
    "\uff72\036\uff72\037\uff72\041\uff72\067\uff72\001\002\000\022" +
    "\025\uff73\027\uff73\034\uff73\035\uff73\036\uff73\037\uff73\041" +
    "\uff73\067\uff73\001\002\000\014\031\uff88\055\uff88\056\uff88" +
    "\070\uff88\073\uff88\001\002\000\004\067\154\001\002\000" +
    "\020\004\014\025\162\034\171\035\156\036\170\037\166" +
    "\041\161\001\002\000\014\031\uff87\055\uff87\056\uff87\070" +
    "\uff87\073\uff87\001\002\000\034\011\uff78\012\uff78\013\uff78" +
    "\014\uff78\015\uff78\017\uff78\020\uff78\043\uff78\055\uff78\056" +
    "\uff78\070\uff78\071\uff78\073\uff78\001\002\000\004\070\254" +
    "\001\002\000\012\025\026\034\033\037\027\041\025\001" +
    "\002\000\034\011\uff75\012\uff75\013\uff75\014\uff75\015\uff75" +
    "\017\uff75\020\uff75\043\uff75\055\uff75\056\uff75\070\uff75\071" +
    "\uff75\073\uff75\001\002\000\034\011\uff74\012\uff74\013\uff74" +
    "\014\uff74\015\uff74\017\uff74\020\uff74\043\uff74\055\uff74\056" +
    "\uff74\070\uff74\071\uff74\073\uff74\001\002\000\006\070\uff7c" +
    "\071\251\001\002\000\004\070\uff84\001\002\000\004\070" +
    "\uff83\001\002\000\034\011\uff76\012\uff76\013\uff76\014\uff76" +
    "\015\uff76\017\uff76\020\uff76\043\uff76\055\uff76\056\uff76\070" +
    "\uff76\071\uff76\073\uff76\001\002\000\004\010\172\001\002" +
    "\000\034\011\uff77\012\uff77\013\uff77\014\uff77\015\uff77\017" +
    "\uff77\020\uff77\043\uff77\055\uff77\056\uff77\070\uff77\071\uff77" +
    "\073\uff77\001\002\000\034\011\uff79\012\uff79\013\uff79\014" +
    "\uff79\015\uff79\017\uff79\020\uff79\043\uff79\055\uff79\056\uff79" +
    "\070\uff79\071\uff79\073\uff79\001\002\000\004\034\uff92\001" +
    "\002\000\004\034\213\001\002\000\022\011\041\012\206" +
    "\013\177\014\202\015\200\017\204\020\175\070\uff82\001" +
    "\002\000\004\034\213\001\002\000\004\034\213\001\002" +
    "\000\006\016\227\020\226\001\002\000\004\016\224\001" +
    "\002\000\024\011\ufff5\012\206\013\177\014\202\015\200" +
    "\017\204\020\175\070\ufff5\073\ufff5\001\002\000\006\016" +
    "\221\020\220\001\002\000\004\070\uff81\001\002\000\004" +
    "\020\217\001\002\000\006\011\041\070\uff80\001\002\000" +
    "\004\020\207\001\002\000\004\034\213\001\002\000\024" +
    "\011\ufff4\012\ufff4\013\ufff4\014\ufff4\015\ufff4\017\ufff4\020" +
    "\ufff4\070\ufff4\073\ufff4\001\002\000\034\003\uff90\006\uff90" +
    "\011\uff90\012\uff90\013\uff90\014\uff90\015\uff90\017\uff90\020" +
    "\uff90\022\uff90\070\uff90\071\uff90\073\uff90\001\002\000\034" +
    "\003\uff91\006\uff91\011\uff91\012\uff91\013\uff91\014\uff91\015" +
    "\uff91\017\uff91\020\uff91\022\uff91\070\uff91\071\uff91\073\uff91" +
    "\001\002\000\040\003\uff8f\006\uff8f\011\uff8f\012\uff8f\013" +
    "\uff8f\014\uff8f\015\uff8f\017\uff8f\020\uff8f\022\uff8f\034\215" +
    "\040\214\070\uff8f\071\uff8f\073\uff8f\001\002\000\034\003" +
    "\uff8d\006\uff8d\011\uff8d\012\uff8d\013\uff8d\014\uff8d\015\uff8d" +
    "\017\uff8d\020\uff8d\022\uff8d\070\uff8d\071\uff8d\073\uff8d\001" +
    "\002\000\034\003\uff8e\006\uff8e\011\uff8e\012\uff8e\013\uff8e" +
    "\014\uff8e\015\uff8e\017\uff8e\020\uff8e\022\uff8e\070\uff8e\071" +
    "\uff8e\073\uff8e\001\002\000\004\070\uff7f\001\002\000\004" +
    "\034\ufff0\001\002\000\004\034\uffee\001\002\000\004\020" +
    "\222\001\002\000\004\034\uffec\001\002\000\010\011\ufff6" +
    "\070\ufff6\073\ufff6\001\002\000\004\020\225\001\002\000" +
    "\004\034\uffeb\001\002\000\004\034\uffef\001\002\000\004" +
    "\020\230\001\002\000\004\034\uffed\001\002\000\004\022" +
    "\233\001\002\000\024\011\ufff1\012\ufff1\013\ufff1\014\ufff1" +
    "\015\ufff1\017\ufff1\020\ufff1\070\ufff1\073\ufff1\001\002\000" +
    "\016\025\162\034\171\035\156\036\170\037\166\041\161" +
    "\001\002\000\024\011\uffea\012\uffea\013\uffea\014\uffea\015" +
    "\uffea\017\uffea\020\uffea\070\uffea\073\uffea\001\002\000\030" +
    "\011\uffe8\012\uffe8\013\uffe8\014\uffe8\015\uffe8\017\uffe8\020" +
    "\uffe8\055\140\056\137\070\uffe8\073\uffe8\001\002\000\004" +
    "\043\237\001\002\000\016\025\162\034\171\035\156\036" +
    "\170\037\166\041\161\001\002\000\030\011\uffe7\012\uffe7" +
    "\013\uffe7\014\uffe7\015\uffe7\017\uffe7\020\uffe7\055\uffe7\056" +
    "\uffe7\070\uffe7\073\uffe7\001\002\000\016\025\162\034\171" +
    "\035\156\036\170\037\166\041\161\001\002\000\024\011" +
    "\uffe9\012\uffe9\013\uffe9\014\uffe9\015\uffe9\017\uffe9\020\uffe9" +
    "\070\uffe9\073\uffe9\001\002\000\026\011\ufff3\012\ufff3\013" +
    "\ufff3\014\ufff3\015\ufff3\017\ufff3\020\ufff3\022\233\070\ufff3" +
    "\073\ufff3\001\002\000\024\011\ufff2\012\ufff2\013\ufff2\014" +
    "\ufff2\015\ufff2\017\ufff2\020\ufff2\070\ufff2\073\ufff2\001\002" +
    "\000\026\011\uff93\012\uff93\013\uff93\014\uff93\015\uff93\017" +
    "\uff93\020\uff93\070\uff93\071\247\073\uff93\001\002\000\024" +
    "\011\uff95\012\uff95\013\uff95\014\uff95\015\uff95\017\uff95\020" +
    "\uff95\070\uff95\073\uff95\001\002\000\004\034\213\001\002" +
    "\000\024\011\uff94\012\uff94\013\uff94\014\uff94\015\uff94\017" +
    "\uff94\020\uff94\070\uff94\073\uff94\001\002\000\016\025\162" +
    "\034\171\035\156\036\170\037\166\041\161\001\002\000" +
    "\004\070\uff7d\001\002\000\004\010\uff7e\001\002\000\014" +
    "\031\uff85\055\uff85\056\uff85\070\uff85\073\uff85\001\002\000" +
    "\014\002\uffba\003\uffba\004\uffba\005\uffba\007\uffba\001\002" +
    "\000\014\002\uffbc\003\uffbc\004\uffbc\005\uffbc\007\uffbc\001" +
    "\002\000\022\025\uff9c\027\uff9c\034\uff9c\035\uff9c\036\uff9c" +
    "\037\uff9c\041\uff9c\067\uff9c\001\002\000\022\025\uff9d\027" +
    "\uff9d\034\uff9d\035\uff9d\036\uff9d\037\uff9d\041\uff9d\067\uff9d" +
    "\001\002\000\022\025\uffa1\027\uffa1\034\uffa1\035\uffa1\036" +
    "\uffa1\037\uffa1\041\uffa1\067\uffa1\001\002\000\022\025\uff99" +
    "\027\uff99\034\uff99\035\uff99\036\uff99\037\uff99\041\uff99\067" +
    "\uff99\001\002\000\022\025\uff9b\027\uff9b\034\uff9b\035\uff9b" +
    "\036\uff9b\037\uff9b\041\uff9b\067\uff9b\001\002\000\022\025" +
    "\uff9f\027\uff9f\034\uff9f\035\uff9f\036\uff9f\037\uff9f\041\uff9f" +
    "\067\uff9f\001\002\000\022\025\uff9e\027\uff9e\034\uff9e\035" +
    "\uff9e\036\uff9e\037\uff9e\041\uff9e\067\uff9e\001\002\000\022" +
    "\025\026\027\055\034\033\035\057\036\063\037\027\041" +
    "\025\067\105\001\002\000\022\025\uffa0\027\uffa0\034\uffa0" +
    "\035\uffa0\036\uffa0\037\uffa0\041\uffa0\067\uffa0\001\002\000" +
    "\022\025\uff9a\027\uff9a\034\uff9a\035\uff9a\036\uff9a\037\uff9a" +
    "\041\uff9a\067\uff9a\001\002\000\022\003\uffb0\011\uffb0\052" +
    "\066\053\065\054\067\071\uffb0\072\072\073\uffb0\001\002" +
    "\000\012\003\uffaf\011\uffaf\071\uffaf\073\uffaf\001\002\000" +
    "\006\003\uffb6\006\uffb6\001\002\000\014\002\uffb8\003\uffb8" +
    "\004\uffb8\005\uffb8\007\uffb8\001\002\000\014\002\uff96\003" +
    "\uff96\004\uff96\005\uff96\007\uff96\001\002\000\004\034\213" +
    "\001\002\000\006\011\041\073\037\001\002\000\004\073" +
    "\037\001\002\000\004\003\302\001\002\000\014\002\uff97" +
    "\003\uff97\004\uff97\005\uff97\007\uff97\001\002\000\014\002" +
    "\uff98\003\uff98\004\uff98\005\uff98\007\uff98\001\002\000\004" +
    "\002\001\001\002\000\014\002\000\003\000\004\000\005" +
    "\000\007\000\001\002\000\022\011\041\012\206\013\177" +
    "\014\202\015\200\017\204\020\175\073\037\001\002\000" +
    "\014\002\ufffa\003\ufffa\004\ufffa\005\ufffa\007\ufffa\001\002" +
    "\000\004\073\037\001\002\000\006\011\041\073\037\001" +
    "\002\000\004\073\037\001\002\000\014\002\ufff8\003\ufff8" +
    "\004\ufff8\005\ufff8\007\ufff8\001\002\000\014\002\ufff7\003" +
    "\ufff7\004\ufff7\005\ufff7\007\ufff7\001\002\000\014\002\ufff9" +
    "\003\ufff9\004\ufff9\005\ufff9\007\ufff9\001\002\000\016\010" +
    "\uffdd\021\uffdd\034\uffdd\040\uffdd\042\uffdd\071\uffdd\001\002" +
    "\000\006\010\uffe1\071\351\001\002\000\016\010\uffd6\021" +
    "\uffd6\034\uffd6\040\uffd6\042\uffd6\071\uffd6\001\002\000\016" +
    "\010\uffdf\021\343\034\346\040\342\042\345\071\uffdf\001" +
    "\002\000\004\010\uffe4\001\002\000\024\025\026\026\326" +
    "\027\055\034\033\035\057\036\063\037\027\041\025\067" +
    "\062\001\002\000\004\010\uffe6\001\002\000\026\010\uffde" +
    "\021\uffde\034\uffde\040\uffde\042\uffde\052\066\053\065\054" +
    "\067\071\uffde\072\072\001\002\000\004\067\327\001\002" +
    "\000\016\024\330\025\333\034\033\037\027\041\025\072" +
    "\334\001\002\000\012\025\340\034\033\037\027\041\025" +
    "\001\002\000\004\070\uffd0\001\002\000\004\070\336\001" +
    "\002\000\004\070\uffd1\001\002\000\004\070\335\001\002" +
    "\000\016\010\uffd4\021\uffd4\034\uffd4\040\uffd4\042\uffd4\071" +
    "\uffd4\001\002\000\016\010\uffd5\021\uffd5\034\uffd5\040\uffd5" +
    "\042\uffd5\071\uffd5\001\002\000\004\070\uffd3\001\002\000" +
    "\004\070\uffd2\001\002\000\004\010\uffe5\001\002\000\006" +
    "\010\uffca\071\uffca\001\002\000\010\034\346\040\342\042" +
    "\345\001\002\000\006\010\uffdc\071\uffdc\001\002\000\006" +
    "\010\uffc8\071\uffc8\001\002\000\006\010\uffc9\071\uffc9\001" +
    "\002\000\006\010\uffe0\071\uffe0\001\002\000\006\010\uffdb" +
    "\071\uffdb\001\002\000\024\025\026\026\326\027\055\034" +
    "\033\035\057\036\063\037\027\041\025\067\062\001\002" +
    "\000\004\010\uffe2\001\002" });
>>>>>>> release-0.3_card_49
=======
    "\036\102\001\002\000\066\003\uffc0\010\uffc0\011\uffc0\033" +
    "\uffc0\034\uffc0\035\uffc0\036\uffc0\037\uffc0\043\uffc0\045\uffc0" +
    "\046\uffc0\047\uffc0\050\uffc0\051\uffc0\052\uffc0\053\uffc0\054" +
    "\uffc0\055\uffc0\056\uffc0\057\uffc0\060\uffc0\061\uffc0\073\uffc0" +
    "\074\uffc0\075\uffc0\076\uffc0\001\002\000\066\003\uffbf\010" +
    "\uffbf\011\uffbf\033\uffbf\034\uffbf\035\uffbf\036\uffbf\037\uffbf" +
    "\043\uffbf\045\uffbf\046\uffbf\047\uffbf\050\uffbf\051\uffbf\052" +
    "\uffbf\053\uffbf\054\uffbf\055\uffbf\056\uffbf\057\uffbf\060\uffbf" +
    "\061\uffbf\073\uffbf\074\uffbf\075\uffbf\076\uffbf\001\002\000" +
    "\022\025\026\032\053\037\033\040\055\041\061\042\027" +
    "\044\025\072\103\001\002\000\030\003\uffa7\011\uffa7\033" +
    "\uffa7\035\uffa7\036\uffa7\055\uffa7\056\uffa7\057\uffa7\073\uffa7" +
    "\074\uffa7\075\uffa7\001\002\000\030\003\uffa6\011\uffa6\033" +
    "\uffa6\035\uffa6\036\uffa6\055\uffa6\056\uffa6\057\uffa6\073\uffa6" +
    "\074\uffa6\075\uffa6\001\002\000\030\003\uffa5\011\uffa5\033" +
    "\uffa5\035\uffa5\036\uffa5\055\uffa5\056\uffa5\057\uffa5\073\uffa5" +
    "\074\uffa5\075\uffa5\001\002\000\014\036\uffb6\055\064\056" +
    "\063\057\065\075\070\001\002\000\022\025\026\032\053" +
    "\037\033\040\055\041\061\042\027\044\025\072\103\001" +
    "\002\000\030\003\uff9f\011\uff9f\033\uff9f\035\uff9f\036\uff9f" +
    "\055\064\056\063\057\065\073\uff9f\074\uff9f\075\070\001" +
    "\002\000\014\055\064\056\063\057\065\073\113\075\070" +
    "\001\002\000\030\003\uffa0\011\uffa0\033\uffa0\035\uffa0\036" +
    "\uffa0\055\uffa0\056\uffa0\057\uffa0\073\uffa0\074\uffa0\075\uffa0" +
    "\001\002\000\004\034\uffb8\001\002\000\034\023\uff75\034" +
    "\uff73\046\uffc6\047\uffc6\050\uffc6\051\uffc6\052\uffc6\053\uffc6" +
    "\054\uffc6\055\uffc6\056\uffc6\057\uffc6\075\uffc6\001\002\000" +
    "\034\023\uff74\034\uff6f\046\uffc5\047\uffc5\050\uffc5\051\uffc5" +
    "\052\uffc5\053\uffc5\054\uffc5\055\uffc5\056\uffc5\057\uffc5\075" +
    "\uffc5\001\002\000\032\034\uff72\046\uffa3\047\uffa3\050\uffa3" +
    "\051\uffa3\052\uffa3\053\uffa3\054\uffa3\055\uffa3\056\uffa3\057" +
    "\uffa3\075\uffa3\001\002\000\004\034\uffb9\001\002\000\032" +
    "\034\uff71\046\uffa2\047\uffa2\050\uffa2\051\uffa2\052\uffa2\053" +
    "\uffa2\054\uffa2\055\uffa2\056\uffa2\057\uffa2\075\uffa2\001\002" +
    "\000\032\034\uff70\046\uffc4\047\uffc4\050\uffc4\051\uffc4\052" +
    "\uffc4\053\uffc4\054\uffc4\055\uffc4\056\uffc4\057\uffc4\075\uffc4" +
    "\001\002\000\032\034\uff6e\046\uffc7\047\uffc7\050\uffc7\051" +
    "\uffc7\052\uffc7\053\uffc7\054\uffc7\055\uffc7\056\uffc7\057\uffc7" +
    "\075\uffc7\001\002\000\022\025\026\032\053\037\033\040" +
    "\055\041\061\042\027\044\025\072\103\001\002\000\010" +
    "\033\uffba\035\uffba\036\uffba\001\002\000\020\033\uffb7\035" +
    "\uffb7\036\uffb7\055\064\056\063\057\065\075\070\001\002" +
    "\000\006\035\077\036\131\001\002\000\004\036\132\001" +
    "\002\000\066\003\uffbe\010\uffbe\011\uffbe\033\uffbe\034\uffbe" +
    "\035\uffbe\036\uffbe\037\uffbe\043\uffbe\045\uffbe\046\uffbe\047" +
    "\uffbe\050\uffbe\051\uffbe\052\uffbe\053\uffbe\054\uffbe\055\uffbe" +
    "\056\uffbe\057\uffbe\060\uffbe\061\uffbe\073\uffbe\074\uffbe\075" +
    "\uffbe\076\uffbe\001\002\000\066\003\uffbd\010\uffbd\011\uffbd" +
    "\033\uffbd\034\uffbd\035\uffbd\036\uffbd\037\uffbd\043\uffbd\045" +
    "\uffbd\046\uffbd\047\uffbd\050\uffbd\051\uffbd\052\uffbd\053\uffbd" +
    "\054\uffbd\055\uffbd\056\uffbd\057\uffbd\060\uffbd\061\uffbd\073" +
    "\uffbd\074\uffbd\075\uffbd\076\uffbd\001\002\000\006\035\uffbc" +
    "\036\uffbc\001\002\000\022\025\026\032\053\037\047\040" +
    "\055\041\061\042\027\044\050\072\060\001\002\000\022" +
    "\025\uff65\032\uff65\037\uff65\040\uff65\041\uff65\042\uff65\044" +
    "\uff65\072\uff65\001\002\000\022\025\uff66\032\uff66\037\uff66" +
    "\040\uff66\041\uff66\042\uff66\044\uff66\072\uff66\001\002\000" +
    "\012\003\uff84\034\uff84\073\uff84\076\uff84\001\002\000\022" +
    "\025\uff68\032\uff68\037\uff68\040\uff68\041\uff68\042\uff68\044" +
    "\uff68\072\uff68\001\002\000\022\025\uff69\032\uff69\037\uff69" +
    "\040\uff69\041\uff69\042\uff69\044\uff69\072\uff69\001\002\000" +
    "\022\025\026\032\053\037\033\040\055\041\061\042\027" +
    "\044\025\072\060\001\002\000\022\025\uff6a\032\uff6a\037" +
    "\uff6a\040\uff6a\041\uff6a\042\uff6a\044\uff6a\072\uff6a\001\002" +
    "\000\022\025\uff67\032\uff67\037\uff67\040\uff67\041\uff67\042" +
    "\uff67\044\uff67\072\uff67\001\002\000\022\025\uff6b\032\uff6b" +
    "\037\uff6b\040\uff6b\041\uff6b\042\uff6b\044\uff6b\072\uff6b\001" +
    "\002\000\022\025\uff6c\032\uff6c\037\uff6c\040\uff6c\041\uff6c" +
    "\042\uff6c\044\uff6c\072\uff6c\001\002\000\022\025\uff6d\032" +
    "\uff6d\037\uff6d\040\uff6d\041\uff6d\042\uff6d\044\uff6d\072\uff6d" +
    "\001\002\000\016\003\uff82\034\uff82\060\uff82\061\uff82\073" +
    "\uff82\076\uff82\001\002\000\004\072\152\001\002\000\020" +
    "\004\014\025\160\037\167\040\154\041\166\042\164\044" +
    "\157\001\002\000\016\003\uff81\034\uff81\060\uff81\061\uff81" +
    "\073\uff81\076\uff81\001\002\000\034\011\uff72\012\uff72\013" +
    "\uff72\014\uff72\015\uff72\017\uff72\020\uff72\046\uff72\060\uff72" +
    "\061\uff72\073\uff72\074\uff72\076\uff72\001\002\000\004\073" +
    "\252\001\002\000\012\025\026\037\033\042\027\044\025" +
    "\001\002\000\034\011\uff6f\012\uff6f\013\uff6f\014\uff6f\015" +
    "\uff6f\017\uff6f\020\uff6f\046\uff6f\060\uff6f\061\uff6f\073\uff6f" +
    "\074\uff6f\076\uff6f\001\002\000\034\011\uff6e\012\uff6e\013" +
    "\uff6e\014\uff6e\015\uff6e\017\uff6e\020\uff6e\046\uff6e\060\uff6e" +
    "\061\uff6e\073\uff6e\074\uff6e\076\uff6e\001\002\000\006\073" +
    "\uff76\074\247\001\002\000\004\073\uff7e\001\002\000\004" +
    "\073\uff7d\001\002\000\034\011\uff70\012\uff70\013\uff70\014" +
    "\uff70\015\uff70\017\uff70\020\uff70\046\uff70\060\uff70\061\uff70" +
    "\073\uff70\074\uff70\076\uff70\001\002\000\004\010\170\001" +
    "\002\000\034\011\uff71\012\uff71\013\uff71\014\uff71\015\uff71" +
    "\017\uff71\020\uff71\046\uff71\060\uff71\061\uff71\073\uff71\074" +
    "\uff71\076\uff71\001\002\000\034\011\uff73\012\uff73\013\uff73" +
    "\014\uff73\015\uff73\017\uff73\020\uff73\046\uff73\060\uff73\061" +
    "\uff73\073\uff73\074\uff73\076\uff73\001\002\000\004\037\uff8c" +
    "\001\002\000\004\037\211\001\002\000\022\011\037\012" +
    "\204\013\175\014\200\015\176\017\202\020\173\073\uff7c" +
    "\001\002\000\004\037\211\001\002\000\004\037\211\001" +
    "\002\000\006\016\225\020\224\001\002\000\004\016\222" +
    "\001\002\000\024\011\ufff5\012\204\013\175\014\200\015" +
    "\176\017\202\020\173\073\ufff5\076\ufff5\001\002\000\006" +
    "\016\217\020\216\001\002\000\004\073\uff7b\001\002\000" +
    "\004\020\215\001\002\000\006\011\037\073\uff7a\001\002" +
    "\000\004\020\205\001\002\000\004\037\211\001\002\000" +
    "\024\011\ufff4\012\ufff4\013\ufff4\014\ufff4\015\ufff4\017\ufff4" +
    "\020\ufff4\073\ufff4\076\ufff4\001\002\000\034\003\uff8a\006" +
    "\uff8a\011\uff8a\012\uff8a\013\uff8a\014\uff8a\015\uff8a\017\uff8a" +
    "\020\uff8a\022\uff8a\073\uff8a\074\uff8a\076\uff8a\001\002\000" +
    "\034\003\uff8b\006\uff8b\011\uff8b\012\uff8b\013\uff8b\014\uff8b" +
    "\015\uff8b\017\uff8b\020\uff8b\022\uff8b\073\uff8b\074\uff8b\076" +
    "\uff8b\001\002\000\040\003\uff89\006\uff89\011\uff89\012\uff89" +
    "\013\uff89\014\uff89\015\uff89\017\uff89\020\uff89\022\uff89\037" +
    "\213\043\212\073\uff89\074\uff89\076\uff89\001\002\000\034" +
    "\003\uff87\006\uff87\011\uff87\012\uff87\013\uff87\014\uff87\015" +
    "\uff87\017\uff87\020\uff87\022\uff87\073\uff87\074\uff87\076\uff87" +
    "\001\002\000\034\003\uff88\006\uff88\011\uff88\012\uff88\013" +
    "\uff88\014\uff88\015\uff88\017\uff88\020\uff88\022\uff88\073\uff88" +
    "\074\uff88\076\uff88\001\002\000\004\073\uff79\001\002\000" +
    "\004\037\ufff0\001\002\000\004\037\uffee\001\002\000\004" +
    "\020\220\001\002\000\004\037\uffec\001\002\000\010\011" +
    "\ufff6\073\ufff6\076\ufff6\001\002\000\004\020\223\001\002" +
    "\000\004\037\uffeb\001\002\000\004\037\uffef\001\002\000" +
    "\004\020\226\001\002\000\004\037\uffed\001\002\000\004" +
    "\022\231\001\002\000\024\011\ufff1\012\ufff1\013\ufff1\014" +
    "\ufff1\015\ufff1\017\ufff1\020\ufff1\073\ufff1\076\ufff1\001\002" +
    "\000\016\025\160\037\167\040\154\041\166\042\164\044" +
    "\157\001\002\000\024\011\uffea\012\uffea\013\uffea\014\uffea" +
    "\015\uffea\017\uffea\020\uffea\073\uffea\076\uffea\001\002\000" +
    "\030\011\uffe8\012\uffe8\013\uffe8\014\uffe8\015\uffe8\017\uffe8" +
    "\020\uffe8\060\136\061\135\073\uffe8\076\uffe8\001\002\000" +
    "\004\046\235\001\002\000\016\025\160\037\167\040\154" +
    "\041\166\042\164\044\157\001\002\000\030\011\uffe7\012" +
    "\uffe7\013\uffe7\014\uffe7\015\uffe7\017\uffe7\020\uffe7\060\uffe7" +
    "\061\uffe7\073\uffe7\076\uffe7\001\002\000\016\025\160\037" +
    "\167\040\154\041\166\042\164\044\157\001\002\000\024" +
    "\011\uffe9\012\uffe9\013\uffe9\014\uffe9\015\uffe9\017\uffe9\020" +
    "\uffe9\073\uffe9\076\uffe9\001\002\000\026\011\ufff3\012\ufff3" +
    "\013\ufff3\014\ufff3\015\ufff3\017\ufff3\020\ufff3\022\231\073" +
    "\ufff3\076\ufff3\001\002\000\024\011\ufff2\012\ufff2\013\ufff2" +
    "\014\ufff2\015\ufff2\017\ufff2\020\ufff2\073\ufff2\076\ufff2\001" +
    "\002\000\026\011\uff8d\012\uff8d\013\uff8d\014\uff8d\015\uff8d" +
    "\017\uff8d\020\uff8d\073\uff8d\074\245\076\uff8d\001\002\000" +
    "\024\011\uff8f\012\uff8f\013\uff8f\014\uff8f\015\uff8f\017\uff8f" +
    "\020\uff8f\073\uff8f\076\uff8f\001\002\000\004\037\211\001" +
    "\002\000\024\011\uff8e\012\uff8e\013\uff8e\014\uff8e\015\uff8e" +
    "\017\uff8e\020\uff8e\073\uff8e\076\uff8e\001\002\000\016\025" +
    "\160\037\167\040\154\041\166\042\164\044\157\001\002" +
    "\000\004\073\uff77\001\002\000\004\010\uff78\001\002\000" +
    "\016\003\uff7f\034\uff7f\060\uff7f\061\uff7f\073\uff7f\076\uff7f" +
    "\001\002\000\014\002\ufffb\003\ufffb\004\ufffb\005\ufffb\007" +
    "\ufffb\001\002\000\014\002\uffb4\003\uffb4\004\uffb4\005\uffb4" +
    "\007\uffb4\001\002\000\014\002\uffb5\003\uffb5\004\uffb5\005" +
    "\uffb5\007\uffb5\001\002\000\022\025\uff95\032\uff95\037\uff95" +
    "\040\uff95\041\uff95\042\uff95\044\uff95\072\uff95\001\002\000" +
    "\022\025\uff96\032\uff96\037\uff96\040\uff96\041\uff96\042\uff96" +
    "\044\uff96\072\uff96\001\002\000\022\025\uff9a\032\uff9a\037" +
    "\uff9a\040\uff9a\041\uff9a\042\uff9a\044\uff9a\072\uff9a\001\002" +
    "\000\022\025\uff92\032\uff92\037\uff92\040\uff92\041\uff92\042" +
    "\uff92\044\uff92\072\uff92\001\002\000\022\025\uff94\032\uff94" +
    "\037\uff94\040\uff94\041\uff94\042\uff94\044\uff94\072\uff94\001" +
    "\002\000\022\025\uff98\032\uff98\037\uff98\040\uff98\041\uff98" +
    "\042\uff98\044\uff98\072\uff98\001\002\000\022\025\uff97\032" +
    "\uff97\037\uff97\040\uff97\041\uff97\042\uff97\044\uff97\072\uff97" +
    "\001\002\000\022\025\026\032\053\037\033\040\055\041" +
    "\061\042\027\044\025\072\103\001\002\000\022\025\uff99" +
    "\032\uff99\037\uff99\040\uff99\041\uff99\042\uff99\044\uff99\072" +
    "\uff99\001\002\000\022\025\uff93\032\uff93\037\uff93\040\uff93" +
    "\041\uff93\042\uff93\044\uff93\072\uff93\001\002\000\020\003" +
    "\uffa9\011\uffa9\055\064\056\063\057\065\074\uffa9\075\070" +
    "\001\002\000\010\003\uffa8\011\uffa8\074\uffa8\001\002\000" +
    "\006\003\uffaf\006\uffaf\001\002\000\014\002\uffb1\003\uffb1" +
    "\004\uffb1\005\uffb1\007\uffb1\001\002\000\014\002\uff90\003" +
    "\uff90\004\uff90\005\uff90\007\uff90\001\002\000\004\037\211" +
    "\001\002\000\004\011\037\001\002\000\004\076\253\001" +
    "\002\000\014\002\uff91\003\uff91\004\uff91\005\uff91\007\uff91" +
    "\001\002\000\004\002\001\001\002\000\014\002\000\003" +
    "\000\004\000\005\000\007\000\001\002\000\022\011\037" +
    "\012\204\013\175\014\200\015\176\017\202\020\173\076" +
    "\253\001\002\000\014\002\ufffa\003\ufffa\004\ufffa\005\ufffa" +
    "\007\ufffa\001\002\000\004\076\253\001\002\000\006\011" +
    "\037\076\253\001\002\000\004\076\253\001\002\000\014" +
    "\002\ufff8\003\ufff8\004\ufff8\005\ufff8\007\ufff8\001\002\000" +
    "\014\002\ufff7\003\ufff7\004\ufff7\005\ufff7\007\ufff7\001\002" +
    "\000\014\002\ufff9\003\ufff9\004\ufff9\005\ufff9\007\ufff9\001" +
    "\002\000\014\010\uffdd\037\uffdd\043\uffdd\045\uffdd\074\uffdd" +
    "\001\002\000\014\010\uffd5\037\uffd5\043\uffd5\045\uffd5\074" +
    "\uffd5\001\002\000\006\010\uffe1\074\372\001\002\000\014" +
    "\010\uffd6\037\uffd6\043\uffd6\045\uffd6\074\uffd6\001\002\000" +
    "\014\010\uffe0\037\365\043\362\045\364\074\uffe0\001\002" +
    "\000\004\072\354\001\002\000\004\010\uffe4\001\002\000" +
    "\014\010\uffdc\037\uffdc\043\uffdc\045\uffdc\074\uffdc\001\002" +
    "\000\032\025\026\026\330\027\332\030\324\031\320\032" +
    "\053\037\033\040\055\041\061\042\027\044\025\072\060" +
    "\001\002\000\004\072\350\001\002\000\014\010\uffd3\037" +
    "\uffd3\043\uffd3\045\uffd3\074\uffd3\001\002\000\004\010\uffe6" +
    "\001\002\000\024\010\uffde\037\uffde\043\uffde\045\uffde\055" +
    "\064\056\063\057\065\074\uffde\075\070\001\002\000\004" +
    "\072\336\001\002\000\014\010\uffd4\037\uffd4\043\uffd4\045" +
    "\uffd4\074\uffd4\001\002\000\004\072\333\001\002\000\004" +
    "\042\334\001\002\000\004\073\335\001\002\000\014\010" +
    "\uffd0\037\uffd0\043\uffd0\045\uffd0\074\uffd0\001\002\000\016" +
    "\024\337\025\342\037\033\042\027\044\025\075\343\001" +
    "\002\000\012\025\347\037\033\042\027\044\025\001\002" +
    "\000\006\073\uffc9\074\uffc9\001\002\000\004\073\345\001" +
    "\002\000\006\073\uffca\074\uffca\001\002\000\004\073\344" +
    "\001\002\000\014\010\uffd1\037\uffd1\043\uffd1\045\uffd1\074" +
    "\uffd1\001\002\000\014\010\uffd2\037\uffd2\043\uffd2\045\uffd2" +
    "\074\uffd2\001\002\000\006\073\uffcc\074\uffcc\001\002\000" +
    "\006\073\uffcb\074\uffcb\001\002\000\004\042\351\001\002" +
    "\000\004\073\352\001\002\000\014\010\uffcf\037\uffcf\043" +
    "\uffcf\045\uffcf\074\uffcf\001\002\000\004\010\uffe5\001\002" +
    "\000\014\024\337\025\342\037\033\042\027\044\025\001" +
    "\002\000\004\074\356\001\002\000\004\042\357\001\002" +
    "\000\004\073\360\001\002\000\016\010\uffce\021\361\037" +
    "\uffce\043\uffce\045\uffce\074\uffce\001\002\000\010\037\365" +
    "\043\362\045\364\001\002\000\016\010\uffc3\021\uffc3\037" +
    "\uffc3\043\uffc3\045\uffc3\074\uffc3\001\002\000\014\010\uffcd" +
    "\037\uffcd\043\uffcd\045\uffcd\074\uffcd\001\002\000\016\010" +
    "\uffc1\021\uffc1\037\uffc1\043\uffc1\045\uffc1\074\uffc1\001\002" +
    "\000\016\010\uffc2\021\uffc2\037\uffc2\043\uffc2\045\uffc2\074" +
    "\uffc2\001\002\000\004\021\370\001\002\000\006\010\uffdf" +
    "\074\uffdf\001\002\000\010\037\365\043\362\045\364\001" +
    "\002\000\006\010\uffdb\074\uffdb\001\002\000\032\025\026" +
    "\026\330\027\332\030\324\031\320\032\053\037\033\040" +
    "\055\041\061\042\027\044\025\072\060\001\002\000\004" +
    "\010\uffe2\001\002" });
>>>>>>> release-0.3_card_69

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    "\000\364\000\024\002\003\011\007\012\011\014\014\015" +
    "\004\067\006\070\015\072\017\103\016\001\001\000\036" +
    "\017\315\020\314\021\316\022\312\023\324\024\322\030" +
    "\320\031\045\032\033\055\317\057\326\060\053\061\042" +
    "\073\051\001\001\000\006\003\170\026\302\001\001\000" +
    "\002\001\001\000\002\001\001\000\022\002\003\012\301" +
    "\014\014\015\004\067\006\070\015\072\017\103\016\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\005\271\007" +
    "\206\010\207\001\001\000\002\001\001\000\004\071\020" +
    "\001\001\000\012\031\023\032\033\074\030\075\031\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\102\264" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\004\041\027\040\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\031\023\032\033\074\035\075\031\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\013" +
    "\254\001\001\000\026\031\045\032\033\034\043\047\056" +
    "\050\050\054\044\057\055\060\053\061\042\073\051\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\052\142" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\051\133\001\001\000\002\001\001\000\014" +
    "\031\072\032\033\062\075\063\071\065\073\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\101\065\001\001" +
    "\000\002\001\001\000\016\031\045\032\033\057\061\060" +
    "\053\061\042\073\051\001\001\000\002\001\001\000\004" +
    "\101\065\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\016\031\045\032\033\057\070\060\053" +
    "\061\042\073\051\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\101\065\001\001\000\010\062\132\063\071" +
    "\065\073\001\001\000\010\062\126\063\071\065\073\001" +
    "\001\000\004\066\124\001\001\000\030\031\045\032\033" +
    "\034\043\047\117\050\050\053\113\054\044\057\055\060" +
    "\053\061\042\073\051\001\001\000\004\064\077\001\001" +
    "\000\020\031\045\032\033\061\042\073\105\076\106\077" +
    "\103\100\104\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\020\031\045\032\033\061\042\073" +
    "\105\076\111\077\103\100\104\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\101\107\001" +
    "\001\000\020\031\045\032\033\061\042\073\105\076\110" +
    "\077\103\100\104\001\001\000\004\101\107\001\001\000" +
    "\004\101\107\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\020\031\045\032\033\061\042\073\105\076" +
    "\125\077\103\100\104\001\001\000\002\001\001\000\004" +
    "\101\107\001\001\000\004\064\127\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\026\031\045\032\033\034\043\047\136\050\050\054" +
    "\044\057\055\060\053\061\042\073\051\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\020\031\045" +
    "\032\033\054\147\057\055\060\053\061\042\073\051\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\035\152\001" +
    "\001\000\016\002\155\016\164\036\154\037\160\040\162" +
    "\053\161\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\031\250\032\033\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\003\170" +
    "\026\171\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\005\242\006\243\007\206\010\207" +
    "\001\001\000\014\004\041\027\200\041\202\042\176\046" +
    "\173\001\001\000\010\005\240\007\206\010\207\001\001" +
    "\000\010\005\226\007\206\010\207\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\041\220\042\176\046\173" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\004\041\027\213\001\001\000\002\001\001" +
    "\000\010\005\205\007\206\010\207\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\044\227\001\001\000\002\001\001\000\010\043" +
    "\232\045\231\053\233\001\001\000\002\001\001\000\004" +
    "\051\236\001\001\000\002\001\001\000\004\053\235\001" +
    "\001\000\002\001\001\000\010\043\232\045\237\053\233" +
    "\001\001\000\002\001\001\000\004\044\241\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\005\242\006\245\007\206\010\207\001\001\000\002\001" +
    "\001\000\006\037\247\053\161\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\020\031\045" +
    "\032\033\061\042\073\105\076\267\077\103\100\104\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\101\107" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\005\275\007\206\010\207" +
    "\001\001\000\006\004\041\027\276\001\001\000\004\013" +
    "\277\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\016\004\041\013\303\027\304\041\305\042" +
    "\176\046\173\001\001\000\002\001\001\000\004\013\311" +
    "\001\001\000\010\004\041\013\307\027\306\001\001\000" +
    "\004\013\310\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\033\354\056\357\001\001\000\002\001\001\000\036\017" +
    "\315\020\314\021\316\022\312\023\324\024\322\030\351" +
    "\031\045\032\033\055\317\057\326\060\053\061\042\073" +
    "\051\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\101\065\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\025\334\032\333" +
    "\001\001\000\004\032\341\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\025\344\032\333\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\025\347\032\333\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\033\360\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\036\017\315\020\314\021\316\022\312\023" +
    "\324\024\322\030\362\031\045\032\033\055\317\057\326" +
    "\060\053\061\042\073\051\001\001\000\002\001\001\000" +
    "\006\025\364\032\333\001\001\000\002\001\001\000\002" +
    "\001\001" });
=======
    "\000\355\000\024\002\003\011\007\012\011\014\014\015" +
    "\004\066\006\067\016\071\017\102\015\001\001\000\030" +
    "\017\323\020\322\021\324\025\326\026\045\027\033\054" +
    "\325\056\331\057\053\060\042\072\051\001\001\000\006" +
    "\003\170\023\312\001\001\000\002\001\001\000\002\001" +
    "\001\000\022\002\003\012\311\014\014\015\004\066\006" +
    "\067\016\071\017\102\015\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\005\301\007\207\010" +
    "\206\001\001\000\004\070\020\001\001\000\012\026\023" +
    "\027\033\073\030\074\031\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\101\274\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\004\041\024\040\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\026\023\027\033\073" +
    "\035\074\031\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\013\264\001\001\000\026\026" +
    "\045\027\033\031\043\046\056\047\050\053\044\056\055" +
    "\057\053\060\042\072\051\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\051\141\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\050\133\001" +
    "\001\000\002\001\001\000\014\026\072\027\033\061\075" +
    "\062\071\064\073\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\100\065\001\001\000\002\001\001\000\016" +
    "\026\045\027\033\056\061\057\053\060\042\072\051\001" +
    "\001\000\002\001\001\000\004\100\065\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\016\026" +
    "\045\027\033\056\070\057\053\060\042\072\051\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\100\065\001" +
    "\001\000\010\061\132\062\071\064\073\001\001\000\010" +
    "\061\126\062\071\064\073\001\001\000\004\065\124\001" +
    "\001\000\030\026\045\027\033\031\043\046\117\047\050" +
    "\052\113\053\044\056\055\057\053\060\042\072\051\001" +
    "\001\000\004\063\077\001\001\000\020\026\045\027\033" +
    "\060\042\072\105\075\106\076\103\077\104\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\020" +
    "\026\045\027\033\060\042\072\105\075\111\076\103\077" +
    "\104\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\100\107\001\001\000\020\026\045\027" +
    "\033\060\042\072\105\075\110\076\103\077\104\001\001" +
    "\000\004\100\107\001\001\000\004\100\107\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\020\026\045" +
    "\027\033\060\042\072\105\075\125\076\103\077\104\001" +
    "\001\000\002\001\001\000\004\100\107\001\001\000\004" +
    "\063\127\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\026\026\045\027\033" +
    "\031\043\046\136\047\050\053\044\056\055\057\053\060" +
    "\042\072\051\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\020\026\045\027\033\053\147\056\055\057\053\060\042" +
    "\072\051\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\032\152\001\001\000\016\002\155\016" +
    "\164\033\154\034\161\035\162\052\160\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\026" +
    "\260\027\033\001\001\000\002\001\001\000\002\001\001" +
=======
    "\000\350\000\024\002\003\011\007\012\011\014\014\015" +
    "\004\064\006\065\016\067\017\100\015\001\001\000\030" +
    "\017\316\020\315\021\317\025\321\026\047\027\033\052" +
    "\320\054\324\055\055\056\044\070\053\001\001\000\006" +
    "\003\172\023\305\001\001\000\002\001\001\000\002\001" +
    "\001\000\022\002\003\012\304\014\014\015\004\064\006" +
    "\065\016\067\017\100\015\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\005\272\007\211\010" +
    "\210\001\001\000\004\066\020\001\001\000\012\026\023" +
    "\027\033\071\030\072\031\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\077\265\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\004\043\013\042\024\041\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\026\023\027" +
    "\033\071\035\072\031\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\013" +
    "\255\001\001\000\002\001\001\000\026\026\047\027\033" +
    "\031\045\044\060\045\052\051\046\054\057\055\055\056" +
    "\044\070\053\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\047\143\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\046\135\001\001\000\002" +
    "\001\001\000\014\026\074\027\033\057\077\060\073\062" +
    "\075\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\076\067\001\001\000\002\001\001\000\016\026\047\027" +
    "\033\054\063\055\055\056\044\070\053\001\001\000\002" +
    "\001\001\000\004\076\067\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\016\026\047\027\033" +
    "\054\072\055\055\056\044\070\053\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\076\067\001\001\000\010" +
    "\057\134\060\073\062\075\001\001\000\010\057\130\060" +
    "\073\062\075\001\001\000\004\063\126\001\001\000\030" +
    "\026\047\027\033\031\045\044\121\045\052\050\115\051" +
    "\046\054\057\055\055\056\044\070\053\001\001\000\004" +
    "\061\101\001\001\000\020\026\047\027\033\056\044\070" +
    "\107\073\110\074\105\075\106\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\020\026\047\027" +
    "\033\056\044\070\107\073\113\074\105\075\106\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\076\111\001\001\000\020\026\047\027\033\056\044" +
    "\070\107\073\112\074\105\075\106\001\001\000\004\076" +
    "\111\001\001\000\004\076\111\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\020\026\047\027\033\056" +
    "\044\070\107\073\127\074\105\075\106\001\001\000\002" +
    "\001\001\000\004\076\111\001\001\000\004\061\131\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\026\026\047\027\033\031\045\044" +
    "\140\045\052\051\046\054\057\055\055\056\044\070\053" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\020\026\047" +
    "\027\033\051\151\054\057\055\055\056\044\070\053\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\032\154\001\001\000\016\002\157\016\166\033\156" +
    "\034\163\035\164\050\162\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\026\252\027\033" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\003\172\023\173\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\005\244\006\245" +
    "\007\211\010\210\001\001\000\014\004\043\024\202\036" +
    "\204\037\200\043\175\001\001\000\010\005\242\007\211" +
    "\010\210\001\001\000\010\005\230\007\211\010\210\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\036\222" +
    "\037\200\043\175\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\004\043\024\215\001\001" +
    "\000\002\001\001\000\010\005\207\007\211\010\210\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
>>>>>>> release-0.3_card_49
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\003\170\023\171\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\005" +
    "\252\006\253\007\207\010\206\001\001\000\014\004\041" +
    "\024\200\036\201\037\176\043\173\001\001\000\010\005" +
    "\240\007\207\010\206\001\001\000\010\005\226\007\207" +
    "\010\206\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\036\220\037\176\043\173\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\004\041\024\214\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\005\205\007\207" +
    "\010\206\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
=======
    "\000\371\000\024\002\003\011\007\012\011\014\014\015" +
    "\004\070\006\071\016\073\017\104\015\001\001\000\040" +
    "\017\314\020\312\021\321\022\315\023\313\024\330\025" +
    "\324\031\320\032\045\033\033\056\316\060\326\061\053" +
    "\062\042\074\051\001\001\000\006\003\170\027\302\001" +
    "\001\000\002\001\001\000\002\001\001\000\022\002\003" +
    "\012\301\014\014\015\004\070\006\071\016\073\017\104" +
    "\015\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\005\271\007\207\010\206\001\001\000\004" +
    "\072\020\001\001\000\012\032\023\033\033\075\030\076" +
    "\031\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\103\264\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\004\041\030\040" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\032\023\033\033\075\035\076\031\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\013\254\001\001\000\026\032\045\033\033\035\043" +
    "\050\056\051\050\055\044\060\055\061\053\062\042\074" +
    "\051\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\053\141\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\052\133\001\001\000\002\001\001" +
    "\000\014\032\072\033\033\063\075\064\071\066\073\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\102\065" +
    "\001\001\000\002\001\001\000\016\032\045\033\033\060" +
    "\061\061\053\062\042\074\051\001\001\000\002\001\001" +
    "\000\004\102\065\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\016\032\045\033\033\060\070" +
    "\061\053\062\042\074\051\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\102\065\001\001\000\010\063\132" +
    "\064\071\066\073\001\001\000\010\063\126\064\071\066" +
    "\073\001\001\000\004\067\124\001\001\000\030\032\045" +
    "\033\033\035\043\050\117\051\050\054\113\055\044\060" +
    "\055\061\053\062\042\074\051\001\001\000\004\065\077" +
    "\001\001\000\020\032\045\033\033\062\042\074\105\077" +
    "\106\100\103\101\104\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\020\032\045\033\033\062" +
    "\042\074\105\077\111\100\103\101\104\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\102" +
    "\107\001\001\000\020\032\045\033\033\062\042\074\105" +
    "\077\110\100\103\101\104\001\001\000\004\102\107\001" +
    "\001\000\004\102\107\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\020\032\045\033\033\062\042\074" +
    "\105\077\125\100\103\101\104\001\001\000\002\001\001" +
    "\000\004\102\107\001\001\000\004\065\127\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\026\032\045\033\033\035\043\050\136\051" +
    "\050\055\044\060\055\061\053\062\042\074\051\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\020\032\045\033\033" +
    "\055\147\060\055\061\053\062\042\074\051\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\036" +
    "\152\001\001\000\016\002\155\016\164\037\154\040\161" +
    "\041\162\054\160\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\032\250\033\033\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\003\170\027\171\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\005\242\006\243\007\207" +
    "\010\206\001\001\000\014\004\041\030\200\042\202\043" +
    "\176\047\173\001\001\000\010\005\240\007\207\010\206" +
    "\001\001\000\010\005\226\007\207\010\206\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\042\220\043\176" +
    "\047\173\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\004\041\030\213\001\001\000\002" +
    "\001\001\000\010\005\205\007\207\010\206\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\045\227\001\001\000\002\001\001\000" +
    "\010\044\232\046\231\054\233\001\001\000\002\001\001" +
    "\000\004\052\236\001\001\000\002\001\001\000\004\054" +
    "\235\001\001\000\002\001\001\000\010\044\232\046\237" +
    "\054\233\001\001\000\002\001\001\000\004\045\241\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\005\242\006\245\007\207\010\206\001\001\000" +
    "\002\001\001\000\006\040\247\054\160\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\020" +
    "\032\045\033\033\062\042\074\105\077\267\100\103\101" +
    "\104\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\102\107\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\005\275\007\207" +
    "\010\206\001\001\000\006\004\041\030\276\001\001\000" +
    "\004\013\277\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\016\004\041\013\303\030\304\042" +
    "\305\043\176\047\173\001\001\000\002\001\001\000\004" +
    "\013\311\001\001\000\010\004\041\013\307\030\306\001" +
    "\001\000\004\013\310\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\034\365" +
    "\057\366\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\040\017\314\020\312\021\321\022\315" +
    "\023\313\024\330\025\324\031\352\032\045\033\033\056" +
    "\316\060\326\061\053\062\042\074\051\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\102" +
    "\065\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\026\340\033\337\001\001\000\004\033\345" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
>>>>>>> release-0.3_card_69
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\041\231\001\001\000\002\001" +
    "\001\000\010\040\234\042\233\050\235\001\001\000\002" +
    "\001\001\000\004\046\240\001\001\000\002\001\001\000" +
    "\004\050\237\001\001\000\002\001\001\000\010\040\234" +
    "\042\241\050\235\001\001\000\002\001\001\000\004\041" +
    "\243\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\005\244\006\247\007\211\010\210\001" +
    "\001\000\002\001\001\000\006\034\251\050\162\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
<<<<<<< HEAD
<<<<<<< HEAD
    "\002\001\001\000\002\001\001\000\004\041\227\001\001" +
    "\000\002\001\001\000\010\040\232\042\231\052\233\001" +
    "\001\000\002\001\001\000\004\050\236\001\001\000\002" +
    "\001\001\000\004\052\235\001\001\000\002\001\001\000" +
    "\010\040\232\042\237\052\233\001\001\000\002\001\001" +
    "\000\006\041\241\045\243\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\027\245\044\246" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\027\245\044\251\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\005\252\006" +
    "\255\007\207\010\206\001\001\000\002\001\001\000\006" +
    "\034\257\052\160\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\020\026\045\027\033\060" +
    "\042\072\105\075\277\076\103\077\104\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\100\107\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\005\305\007\207\010\206\001\001\000" +
    "\006\004\041\024\306\001\001\000\004\013\307\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\016\004\041\013\313\024\314\036\315\037\176\043\173" +
    "\001\001\000\002\001\001\000\004\013\321\001\001\000" +
    "\010\004\041\013\317\024\316\001\001\000\004\013\320" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\030\350\055\353\001\001\000\002\001\001\000" +
    "\030\017\323\020\322\021\324\025\345\026\045\027\033" +
    "\054\325\056\331\057\053\060\042\072\051\001\001\000" +
    "\002\001\001\000\004\100\065\001\001\000\002\001\001" +
    "\000\006\022\336\027\335\001\001\000\004\027\343\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\030\354\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\030\017\323\020\322\021\324\025\356\026" +
    "\045\027\033\054\325\056\331\057\053\060\042\072\051" +
    "\001\001\000\002\001\001" });
>>>>>>> release-0.3_card_47
=======
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\020\026\047" +
    "\027\033\056\044\070\107\073\270\074\105\075\106\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\076\111" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\005\276\007\211\010\210" +
    "\001\001\000\010\004\043\013\300\024\277\001\001\000" +
    "\004\013\302\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\016\004\043\013\306\024\307\036\310\037\200\043\175" +
    "\001\001\000\002\001\001\000\004\013\314\001\001\000" +
    "\010\004\043\013\312\024\311\001\001\000\004\013\313" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\030\343\053\346\001\001\000\002\001\001\000" +
    "\030\017\316\020\315\021\317\025\340\026\047\027\033" +
    "\052\320\054\324\055\055\056\044\070\053\001\001\000" +
    "\002\001\001\000\004\076\067\001\001\000\002\001\001" +
    "\000\006\022\331\027\330\001\001\000\004\027\336\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\030\347\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\030\017\316\020\315\021\317\025\351\026" +
    "\047\027\033\052\320\054\324\055\055\056\044\070\053" +
    "\001\001\000\002\001\001" });
>>>>>>> release-0.3_card_49
=======
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\026\354\033\337\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\034\362" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\034\370\001\001\000\002\001\001\000\040\017" +
    "\314\020\312\021\321\022\315\023\313\024\330\025\324" +
    "\031\372\032\045\033\033\056\316\060\326\061\053\062" +
    "\042\074\051\001\001\000\002\001\001" });
>>>>>>> release-0.3_card_69

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Cup_Rules_SQL$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Cup_Rules_SQL$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Cup_Rules_SQL$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



	// This list will store every error found in the syntax analysis process. SE -> Syntax errors
	public static LinkedList<TError> TableSE = new LinkedList<TError>();

	// This object has a list with all columns found and its table
	//public static ColumnEvalutator Columns = new ColumnEvaluator();

	public HashSet<String> Tables  = new HashSet<String>();
	public HashSet<String> Columns = new HashSet<String>();

	public  Scanner s;
  	public  int errors = 0, line, column;
  	public 	String the_error = "";
	public 	StringBuilder the_error_message = new StringBuilder();

	public int selects_read = 0;
	public int updates_read = 0;
	public int deletes_read = 0;


	public void clean_lists() {
		TableSE = new LinkedList<TError>();
	}

	/* This is the error handler */
	public void report_error(String message, Object info) {

        /* Create a StringBuilder called 'm' with the string 'Error' in it. */
        StringBuilder m = new StringBuilder("\n\n---- Error message: " + message + "\n");
   
        /* Check if the information passed to the method is the same
           type as the type java_cup.runtime.Symbol. */
        if (info instanceof java_cup.runtime.Symbol) {

        	// Uncomment when Analyzer can handle multiple errors
			//errors++;
			errors = 1;

            /* Declare a java_cup.runtime.Symbol object 's' with the
               information in the object info that is being typecasted
               as a java_cup.runtime.Symbol object. */
            java_cup.runtime.Symbol s = ((java_cup.runtime.Symbol) info);
   
            /* Check if the line number in the input is greater or
               equal to zero. */
            if (s.left >= 0 && s.right >= 0) {

            	
				the_error = (s.value == null) ? "Empty" : s.value.toString();
				//the_error = s.value.toString();
                
                m.append("--> Unexpected : " + the_error );
                m.append(" at line: "+(s.left));  
                m.append(", column: "+(s.right)); 

				the_error_message = m;
            }
        }
   
        /* Print the contents of the StringBuilder 'm', which contains
           an error message, out on a line. */
        System.err.println(m);
    }
   
    /* Change the method report_fatal_error so when it reports a fatal
       error it will display the line and column number of where the
       fatal error occurred in the input as well as the reason for the
       fatal error which is passed into the method in the object
       'message' and then exit.*/

    public void report_fatal_error(String message, Object info) {
        //report_error(message, info);
		//the_error_message.append("\n\n---- Unknown syntax error ლ(ಠ_ಠლ)" + "\n");
		the_error_message.append("\n\n---- Unknown syntax error." + "\n");
    }
	


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$Cup_Rules_SQL$actions {


	

  private final Cup_Rules_SQL parser;

  /** Constructor */
  CUP$Cup_Rules_SQL$actions(Cup_Rules_SQL parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$Cup_Rules_SQL$do_action_part00000000(
    int                        CUP$Cup_Rules_SQL$act_num,
    java_cup.runtime.lr_parser CUP$Cup_Rules_SQL$parser,
    java.util.Stack            CUP$Cup_Rules_SQL$stack,
    int                        CUP$Cup_Rules_SQL$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Cup_Rules_SQL$result;

      /* select the action based on the action number */
      switch (CUP$Cup_Rules_SQL$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= statement_group EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)).value;
		RESULT = start_val;
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Cup_Rules_SQL$parser.done_parsing();
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // statement_group ::= statement_group statement 
            {
              Object RESULT =null;
		 System.out.println("statement_group ::= statement_group statement"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("statement_group",7, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // statement_group ::= statement 
            {
              Object RESULT =null;
		 System.out.println("statement_group ::= statement"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("statement_group",7, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // statement ::= select_s 
            {
              Object RESULT =null;
		 System.out.println("statement ::= select_s"); 	
						   selects_read++; 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("statement",8, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // statement ::= delete_s 
            {
              Object RESULT =null;
		 System.out.println("statement ::= delete_s");
						   deletes_read++; 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("statement",8, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // statement ::= update_s 
            {
              Object RESULT =null;
		 System.out.println("statement ::= update_s"); 
						   updates_read++; 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("statement",8, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // _semicolon ::= _SEMCOL2 
            {
              Object RESULT =null;
		 System.out.println("_semicolon ::= _SEMICOL2"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_semicolon",9, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // select_s ::= select_part from_part _semicolon 
            {
              Object RESULT =null;
		 System.out.println("select_s ::= select_part from_part"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("select_s",10, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // select_s ::= select_part from_part where_part _semicolon 
            {
              Object RESULT =null;
		 System.out.println("select_s ::= select_part from_part where_part"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("select_s",10, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // select_s ::= select_part from_part joins_part _semicolon 
            {
              Object RESULT =null;
		 System.out.println("select_s ::= select_part from_part joins_part"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("select_s",10, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // select_s ::= select_part from_part joins_part where_part _semicolon 
            {
              Object RESULT =null;
		 System.out.println("select_s ::= select_part from_part joins_part where_part"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("select_s",10, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-4)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // joins_part ::= join_p joins_part 
            {
              Object RESULT =null;
		 System.out.println("joins_part ::= join_p joins_part"); 
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("joins_part",31, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("joins_part",32, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // joins_part ::= join_p 
            {
              Object RESULT =null;
		 System.out.println("joins_part ::= join_p"); 
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("joins_part",31, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("joins_part",32, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // join_p ::= NATURAL JOIN table_name 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_p",32, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_p",33, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // join_p ::= JOIN table_name 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_p",32, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_p",33, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // join_p ::= JOIN table_name join_using 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_p",33, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // join_p ::= JOIN table_name join_cond 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_p",32, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // join_p ::= join table_name join_cond 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_p",32, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_p",33, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // join_using ::= USING _OPENPAR join_using_cols _CLOSEPAR 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_using",35, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join",37, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // join_using_cols ::= cl _COMMA join_using_cols 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_using_cols",34, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join",37, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // join_using_cols ::= cl 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_using_cols",34, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join",37, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // join ::= INNER JOIN 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join",36, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join",37, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // join ::= LEFT JOIN 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join",36, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join",37, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // join ::= RIGHT JOIN 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join",36, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join",37, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // join ::= LEFT OUTER JOIN 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join",36, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_cond",35, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // join ::= RIGHT OUTER JOIN 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join",36, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_c",36, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // join ::= FULL OUTER JOIN 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join",36, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_c",36, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // join_cond ::= ON join_c 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_cond",34, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_on",34, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // join_c ::= join_on log_oper join_c 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_c",35, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // join_c ::= join_on 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_c",35, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // join_on ::= element _EQU element 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_on",33, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // select_part ::= _select _STAR 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("select_part",11, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // select_part ::= _select DISTINCT cols 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("select_part",11, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // select_part ::= _select cols 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("select_part",11, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // _select ::= SELECT 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_select",0, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // cols ::= col_el _COMMA cols 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cols",22, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cols",23, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // cols ::= col_el 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cols",22, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cols",23, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 37: // col_el ::= c_el c_ali 
=======
          case 33: // col_el ::= c_el 
>>>>>>> release-0.3_card_69
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("col_el",13, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 38: // col_el ::= c_el 
=======
          case 34: // col_el ::= c_el c_ali 
>>>>>>> release-0.3_card_69
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("col_el",13, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // c_el ::= mix_exp 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("c_el",43, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("c_el",42, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // c_el ::= aggregates 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("c_el",43, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("c_el",42, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // c_ali ::= col_ali 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("c_ali",44, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("c_ali",43, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // c_ali ::= AS col_ali 
            {
              Object RESULT =null;

<<<<<<< HEAD
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("c_ali",44, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("c_ali",43, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("c_el",44, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // mix_exp ::= _OPENPAR mix_exp _CLOSEPAR 
            {
              Object RESULT =null;

<<<<<<< HEAD
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("mix_exp",45, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("mix_exp",44, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("c_el",44, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 44: // mix_exp ::= m_exp 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("mix_exp",45, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("mix_exp",44, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 37: // c_el ::= stringFunctions 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("c_el",44, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 45: // mix_exp ::= ari_value 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("mix_exp",45, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("mix_exp",44, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 38: // c_ali ::= col_ali AS col_ali 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("c_ali",45, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // m_exp ::= mix_exp _ari_opr mix_exp 
            {
              Object RESULT =null;

<<<<<<< HEAD
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("m_exp",46, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("m_exp",45, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("mix_exp",46, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // aggregates ::= agg_count 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("aggregates",14, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("mix_exp",46, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 44: // aggregates ::= agg_sum 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("aggregates",14, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("mix_exp",46, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // aggregates ::= agg_max 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("aggregates",14, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("m_exp",47, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // aggregates ::= agg_min 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("aggregates",14, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 47: // agg_count ::= COUNT _OPENPAR count_exp _CLOSEPAR 
=======
          case 48: // agg_count ::= COUNT _OPENPAR count_exp _CLOSEPAR 
>>>>>>> release-0.3_card_47
=======
          case 44: // stringFunctions ::= stringFunction_ltrim 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("stringFunctions",15, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // stringFunctions ::= stringFunction_rtrim 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("stringFunctions",15, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // stringFunctions ::= stringFunction_instr 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("stringFunctions",15, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // agg_count ::= COUNT _OPENPAR count_exp _CLOSEPAR 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("agg_count",16, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // agg_count ::= COUNT _OPENPAR _STAR _CLOSEPAR 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("agg_count",16, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // stringFunction_ltrim ::= LTRIM _OPENPAR LITERAL_STRING _CLOSEPAR 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("stringFunction_ltrim",17, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // stringFunction_rtrim ::= RTRIM _OPENPAR LITERAL_STRING _CLOSEPAR 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("stringFunction_rtrim",18, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // stringFunction_instr ::= INSTR _OPENPAR count_exp _COMMA LITERAL_STRING _CLOSEPAR 
>>>>>>> release-0.3_card_69
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("stringFunction_instr",19, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-5)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 48: // agg_count ::= COUNT _OPENPAR _STAR _CLOSEPAR 
=======
          case 49: // agg_count ::= COUNT _OPENPAR _STAR _CLOSEPAR 
>>>>>>> release-0.3_card_47
=======
          case 52: // stringFunction_instr ::= INSTR _OPENPAR count_exp _COMMA LITERAL_STRING _CLOSEPAR AS col_ali 
>>>>>>> release-0.3_card_69
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("stringFunction_instr",19, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-7)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 49: // agg_sum ::= SUM _OPENPAR count_exp _CLOSEPAR 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("agg_sum",16, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 53: // count_exp ::= DISTINCT cl 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("count_exp",20, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 50: // agg_max ::= MAX _OPENPAR count_exp _CLOSEPAR 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("agg_max",17, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 54: // count_exp ::= DISTINCT NULL 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("count_exp",20, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 51: // agg_min ::= MIN _OPENPAR count_exp _CLOSEPAR 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("agg_min",18, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 55: // count_exp ::= NULL 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("count_exp",20, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 52: // count_exp ::= DISTINCT cl 
=======
          case 50: // count_exp ::= DISTINCT cl 
>>>>>>> release-0.3_card_47
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("count_exp",19, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 56: // count_exp ::= cl 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("count_exp",20, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 53: // count_exp ::= DISTINCT NULL 
=======
          case 51: // count_exp ::= DISTINCT NULL 
>>>>>>> release-0.3_card_47
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("count_exp",19, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 57: // col ::= cl 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("col",24, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 54: // count_exp ::= NULL 
=======
          case 52: // count_exp ::= NULL 
>>>>>>> release-0.3_card_47
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("count_exp",19, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 58: // col ::= NULL 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("col",24, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 55: // count_exp ::= cl 
=======
          case 53: // count_exp ::= cl 
>>>>>>> release-0.3_card_47
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("count_exp",19, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 56: // col ::= cl 
=======
          case 54: // col ::= cl 
>>>>>>> release-0.3_card_47
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("col",23, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 57: // col ::= NULL 
=======
          case 55: // col ::= NULL 
>>>>>>> release-0.3_card_47
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("col",23, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 58: // cl ::= IDENTIFIER 
=======
          case 56: // cl ::= IDENTIFIER 
>>>>>>> release-0.3_card_47
=======
          case 59: // cl ::= IDENTIFIER 
>>>>>>> release-0.3_card_69
            {
              Object RESULT =null;
		int col1left = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).left;
		int col1right = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).right;
		Object col1 = (Object)((java_cup.runtime.Symbol) CUP$Cup_Rules_SQL$stack.peek()).value;
		 Columns.add(col1 + ""); 
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cl",24, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cl",25, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 59: // cl ::= TABDOTCOL 
=======
          case 57: // cl ::= TABDOTCOL 
>>>>>>> release-0.3_card_47
=======
          case 60: // cl ::= TABDOTCOL 
>>>>>>> release-0.3_card_69
            {
              Object RESULT =null;
		int col1left = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).left;
		int col1right = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).right;
		Object col1 = (Object)((java_cup.runtime.Symbol) CUP$Cup_Rules_SQL$stack.peek()).value;
		 Columns.add(col1 + ""); 
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cl",24, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cl",25, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 60: // cl ::= LITERAL_STRING 
=======
          case 58: // cl ::= LITERAL_STRING 
>>>>>>> release-0.3_card_47
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cl",24, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 61: // cl ::= LITERAL_STRING 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cl",25, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 61: // col_ali ::= QTABLENAME 
=======
          case 59: // col_ali ::= QTABLENAME 
>>>>>>> release-0.3_card_47
=======
          case 62: // col_ali ::= QTABLENAME 
>>>>>>> release-0.3_card_69
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Cup_Rules_SQL$stack.peek()).value;
		 /*Tables.add(t+"");*/ 
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("col_ali",25, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("col_ali",26, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 62: // col_ali ::= IDENTIFIER 
=======
          case 60: // col_ali ::= IDENTIFIER 
>>>>>>> release-0.3_card_47
=======
          case 63: // col_ali ::= IDENTIFIER 
>>>>>>> release-0.3_card_69
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Cup_Rules_SQL$stack.peek()).value;
		 /*Tables.add(t+"");*/ 
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("col_ali",25, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("col_ali",26, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 63: // col_ali ::= QCOLALIAS 
=======
          case 61: // col_ali ::= QCOLALIAS 
>>>>>>> release-0.3_card_47
=======
          case 64: // col_ali ::= QCOLALIAS 
>>>>>>> release-0.3_card_69
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Cup_Rules_SQL$stack.peek()).value;
		 /*Tables.add(t+"");*/ 
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("col_ali",25, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("col_ali",26, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 64: // case_exp ::= CASE case_rules END 
            {
              Object RESULT =null;
		 System.out.println("case_exp ::= CASE case_rules END"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_exp",47, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 62: // case_exp ::= CASE case_rules END 
            {
              Object RESULT =null;
		 System.out.println("case_exp ::= CASE case_rules END"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_exp",46, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 65: // case_exp ::= CASE case_rules END 
            {
              Object RESULT =null;
		 System.out.println("case_exp ::= CASE case_rules END"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_exp",48, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 65: // case_exp ::= CASE case_rules case_else END 
            {
              Object RESULT =null;
		 System.out.println("case_exp ::= CASE case_rules case_else END"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_exp",47, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 63: // case_exp ::= CASE case_rules case_else END 
            {
              Object RESULT =null;
		 System.out.println("case_exp ::= CASE case_rules case_else END"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_exp",46, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 66: // case_exp ::= CASE case_rules case_else END 
            {
              Object RESULT =null;
		 System.out.println("case_exp ::= CASE case_rules case_else END"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_exp",48, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 66: // case_exp ::= CASE col case_rules END 
            {
              Object RESULT =null;
		 System.out.println("case_exp ::= CASE col case_rules END"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_exp",47, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 64: // case_exp ::= CASE col case_rules END 
            {
              Object RESULT =null;
		 System.out.println("case_exp ::= CASE col case_rules END"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_exp",46, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 67: // case_exp ::= CASE col case_rules END 
            {
              Object RESULT =null;
		 System.out.println("case_exp ::= CASE col case_rules END"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_exp",48, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 67: // case_exp ::= CASE col case_rules case_else END 
            {
              Object RESULT =null;
		 System.out.println("case_exp ::= CASE col case_rules case_else END"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_exp",47, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-4)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 65: // case_exp ::= CASE col case_rules case_else END 
            {
              Object RESULT =null;
		 System.out.println("case_exp ::= CASE col case_rules case_else END"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_exp",46, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-4)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 68: // case_exp ::= CASE col case_rules case_else END 
            {
              Object RESULT =null;
		 System.out.println("case_exp ::= CASE col case_rules case_else END"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_exp",48, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-4)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 68: // case_rules ::= case_rul case_rules 
            {
              Object RESULT =null;
		 System.out.println("case_rules ::= case_rul case_rules"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_rules",48, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 66: // case_rules ::= case_rul case_rules 
            {
              Object RESULT =null;
		 System.out.println("case_rules ::= case_rul case_rules"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_rules",47, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 69: // case_rules ::= case_rul case_rules 
            {
              Object RESULT =null;
		 System.out.println("case_rules ::= case_rul case_rules"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_rules",49, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 69: // case_rules ::= case_rul 
            {
              Object RESULT =null;
		 System.out.println("case_rules ::= case_rul"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_rules",48, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 67: // case_rules ::= case_rul 
            {
              Object RESULT =null;
		 System.out.println("case_rules ::= case_rul"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_rules",47, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 70: // case_rules ::= case_rul 
            {
              Object RESULT =null;
		 System.out.println("case_rules ::= case_rul"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_rules",49, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 70: // case_rul ::= case_cond case_act 
            {
              Object RESULT =null;
		 System.out.println("case_rul ::= WHEN case_cond THEN case_act"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_rul",49, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 68: // case_rul ::= case_cond case_act 
            {
              Object RESULT =null;
		 System.out.println("case_rul ::= WHEN case_cond THEN case_act"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_rul",48, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 71: // case_rul ::= case_cond case_act 
            {
              Object RESULT =null;
		 System.out.println("case_rul ::= WHEN case_cond THEN case_act"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_rul",50, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 71: // case_cond ::= WHEN w_condition 
            {
              Object RESULT =null;
		 System.out.println("case_cond ::= w_condition"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_cond",51, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 69: // case_cond ::= WHEN w_condition 
            {
              Object RESULT =null;
		 System.out.println("case_cond ::= w_condition"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_cond",50, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 72: // case_cond ::= WHEN w_condition 
            {
              Object RESULT =null;
		 System.out.println("case_cond ::= w_condition"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_cond",52, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 72: // case_cond ::= WHEN element 
            {
              Object RESULT =null;
		 System.out.println("case_cond ::= element"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_cond",51, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 70: // case_cond ::= WHEN element 
            {
              Object RESULT =null;
		 System.out.println("case_cond ::= element"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_cond",50, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 73: // case_cond ::= WHEN element 
            {
              Object RESULT =null;
		 System.out.println("case_cond ::= element"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_cond",52, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 73: // case_act ::= THEN ari_exp 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_act",52, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 71: // case_act ::= THEN ari_exp 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_act",51, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 74: // case_act ::= THEN ari_exp 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_act",53, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 74: // case_else ::= ELSE ari_exp 
            {
              Object RESULT =null;
		 System.out.println("case_else ::= ELSE ari_exp"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_else",50, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 72: // case_else ::= ELSE ari_exp 
            {
              Object RESULT =null;
		 System.out.println("case_else ::= ELSE ari_exp"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_else",49, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 75: // case_else ::= ELSE ari_exp 
            {
              Object RESULT =null;
		 System.out.println("case_else ::= ELSE ari_exp"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_else",51, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 75: // update_s ::= update_part _set set_exp_list where_part _semicolon 
            {
              Object RESULT =null;
		 System.out.println("update_s	::= update_part _set set_cols where_part _semicolon"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_s",53, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-4)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 73: // update_s ::= update_part _set set_exp_list where_part _semicolon 
            {
              Object RESULT =null;
		 System.out.println("update_s	::= update_part _set set_cols where_part _semicolon"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_s",52, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-4)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 76: // update_s ::= update_part _set set_exp_list where_part _semicolon 
            {
              Object RESULT =null;
		 System.out.println("update_s	::= update_part _set set_cols where_part _semicolon"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_s",54, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-4)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 76: // update_s ::= update_part _set set_exp_list where_part error 
=======
          case 74: // update_s ::= update_part _set set_exp_list where_part error 
>>>>>>> release-0.3_card_47
=======
          case 70: // update_s ::= update_part _set set_exp_list error 
>>>>>>> release-0.3_card_49
=======
          case 77: // update_s ::= update_part _set set_exp_list where_part error 
>>>>>>> release-0.3_card_69
            {
              Object RESULT =null;
		 TError errors_found = new TError("",0,0,"Syntax Error","Invalid UPDATE section. \nMissing semicolon."); //Original error message: UPDATE error after set of columns.
				  	  	   TableSE.add(errors_found);
<<<<<<< HEAD
						   System.out.println("update_s	::= update_part _set set_cols where_part errorerror.\nMissing semicolon on UPDATE."); 
<<<<<<< HEAD
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_s",53, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-4)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_s",52, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-4)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
						   System.out.println("update_s	::= update_part _set set_cols error. \nMissing semicolon on UPDATE."); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_s",50, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_49
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_s",54, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-4)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 77: // update_s ::= update_part _set set_exp_list error 
=======
          case 75: // update_s ::= update_part _set set_exp_list error 
>>>>>>> release-0.3_card_47
=======
          case 71: // update_s ::= update_part _set set_exp_list _semicolon error 
>>>>>>> release-0.3_card_49
=======
          case 78: // update_s ::= update_part _set set_exp_list error 
>>>>>>> release-0.3_card_69
            {
              Object RESULT =null;
		 TError errors_found = new TError("",0,0,"Syntax Error","Invalid UPDATE section. Missing where clause (WHERE).");
				  	  	   TableSE.add(errors_found);
<<<<<<< HEAD
						   System.out.println("update_s	::= update_part _set set_cols error"); 
<<<<<<< HEAD
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_s",53, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_s",52, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
						   System.out.println("update_s	::= update_part _set set_exp_list _semicolon error.\nMissing WHERE CLAUSE on UPDATE."); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_s",50, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-4)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_49
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_s",54, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 78: // update_s ::= update_part error 
=======
          case 76: // update_s ::= update_part error 
>>>>>>> release-0.3_card_47
=======
          case 79: // update_s ::= update_part error 
>>>>>>> release-0.3_card_69
            {
              Object RESULT =null;
		 TError errors_found = new TError("",0,0,"Syntax Error","Incomplete UPDATE.");
				  	  	   TableSE.add(errors_found);
						   System.out.println("update_s	::= update_part error"); 
<<<<<<< HEAD
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_s",53, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_s",52, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_s",54, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 79: // update_s ::= _update error 
=======
          case 77: // update_s ::= _update error 
>>>>>>> release-0.3_card_47
=======
          case 80: // update_s ::= _update error 
>>>>>>> release-0.3_card_69
            {
              Object RESULT =null;
		 TError errors_found = new TError("",0,0,"Syntax Error","Invalid UPDATE.");
				  	  	   TableSE.add(errors_found);
						   System.out.println("update_s	::= _update error"); 
<<<<<<< HEAD
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_s",53, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_s",52, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_s",54, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 80: // _set ::= SET 
            {
              Object RESULT =null;
		 System.out.println("_set ::= SET"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_set",55, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 78: // _set ::= SET 
            {
              Object RESULT =null;
		 System.out.println("_set ::= SET"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_set",54, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 81: // _set ::= SET 
            {
              Object RESULT =null;
		 System.out.println("_set ::= SET"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_set",56, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 81: // update_part ::= _update table_name 
            {
              Object RESULT =null;
		 System.out.println("update_part ::= _update table_name"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_part",56, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 79: // update_part ::= _update table_name 
            {
              Object RESULT =null;
<<<<<<< HEAD
		 System.out.println("update_part ::= _update table_name"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_part",55, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
		 System.out.println("update_part ::= _update table_name OK"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_part",53, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_49
=======
          case 82: // update_part ::= _update table_name 
            {
              Object RESULT =null;
		 System.out.println("update_part ::= _update table_name"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_part",57, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 82: // update_part ::= error 
=======
          case 80: // update_part ::= error 
>>>>>>> release-0.3_card_47
=======
          case 83: // update_part ::= error 
>>>>>>> release-0.3_card_69
            {
              Object RESULT =null;
		 TError errors_found = new TError("",0,0,"Syntax Error","Invalid UPDATE.");
				  	  	   TableSE.add(errors_found); 
<<<<<<< HEAD
						   System.out.println("update_part ::= _update table_name"); 
<<<<<<< HEAD
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_part",56, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_part",55, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
						   System.out.println("update_part ::= _update table_name ERROR"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_part",53, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_49
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_part",57, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 83: // _update ::= UPDATE 
            {
              Object RESULT =null;
		 System.out.println("_update ::= UPDATE"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_update",54, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 81: // _update ::= UPDATE 
            {
              Object RESULT =null;
		 System.out.println("_update ::= UPDATE"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_update",53, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 84: // _update ::= UPDATE 
            {
              Object RESULT =null;
		 System.out.println("_update ::= UPDATE"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_update",55, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 84: // set_exp_list ::= set_exp _COMMA set_exp_list 
            {
              Object RESULT =null;
		 System.out.println("set_exp_list	::= set_exp _COMMA set_exp_list "); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("set_exp_list",58, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 82: // set_exp_list ::= set_exp _COMMA set_exp_list 
            {
              Object RESULT =null;
		 System.out.println("set_exp_list	::= set_exp _COMMA set_exp_list "); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("set_exp_list",57, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 85: // set_exp_list ::= set_exp _COMMA set_exp_list 
            {
              Object RESULT =null;
		 System.out.println("set_exp_list	::= set_exp _COMMA set_exp_list "); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("set_exp_list",59, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 85: // set_exp_list ::= set_exp 
            {
              Object RESULT =null;
		 System.out.println("set_exp_list	::= set_exp "); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("set_exp_list",58, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 83: // set_exp_list ::= set_exp 
            {
              Object RESULT =null;
		 System.out.println("set_exp_list	::= set_exp "); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("set_exp_list",57, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 86: // set_exp_list ::= set_exp 
            {
              Object RESULT =null;
		 System.out.println("set_exp_list	::= set_exp "); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("set_exp_list",59, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 86: // set_exp_list ::= error 
=======
          case 84: // set_exp_list ::= error 
>>>>>>> release-0.3_card_47
=======
          case 87: // set_exp_list ::= error 
>>>>>>> release-0.3_card_69
            {
              Object RESULT =null;
		 TError errors_found = new TError("",0,0,"Syntax Error","Invalid set of columns in UPDATE");
				  	  	   TableSE.add(errors_found); 
						   System.out.println("set_cols	::=	error"); 
<<<<<<< HEAD
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("set_exp_list",58, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("set_exp_list",57, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("set_exp_list",59, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 87: // set_exp ::= col _asig_opr ari_exp 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("set_exp",59, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 85: // set_exp ::= col _asig_opr ari_exp 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("set_exp",58, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 88: // set_exp ::= col _asig_opr ari_exp 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("set_exp",60, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 88: // set_exp ::= col _EQU LITERAL_STRING 
            {
              Object RESULT =null;
		 System.out.println("set_exp ::= col _EQU LITERAL_STRING"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("set_exp",59, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 86: // set_exp ::= col _EQU LITERAL_STRING 
            {
              Object RESULT =null;
		 System.out.println("set_exp ::= col _EQU LITERAL_STRING"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("set_exp",58, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 89: // set_exp ::= col _EQU LITERAL_STRING 
            {
              Object RESULT =null;
		 System.out.println("set_exp ::= col _EQU LITERAL_STRING"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("set_exp",60, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 89: // ari_exp ::= par_exp 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_exp",60, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 87: // ari_exp ::= par_exp 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_exp",59, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 90: // ari_exp ::= par_exp 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_exp",61, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 90: // ari_exp ::= exp 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_exp",60, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 88: // ari_exp ::= exp 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_exp",59, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 91: // ari_exp ::= exp 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_exp",61, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 91: // ari_exp ::= ari_value 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_exp",60, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 89: // ari_exp ::= ari_value 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_exp",59, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 92: // ari_exp ::= ari_value 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_exp",61, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 92: // ari_value ::= col 
            {
              Object RESULT =null;
		 System.out.println("ari_value ::= col"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_value",57, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 90: // ari_value ::= col 
            {
              Object RESULT =null;
		 System.out.println("ari_value ::= col"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_value",56, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 93: // ari_value ::= col 
            {
              Object RESULT =null;
		 System.out.println("ari_value ::= col"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_value",58, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 93: // ari_value ::= INTEGER 
            {
              Object RESULT =null;
		 System.out.println("ari_value ::= INTEGER"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_value",57, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 91: // ari_value ::= INTEGER 
            {
              Object RESULT =null;
		 System.out.println("ari_value ::= INTEGER"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_value",56, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 94: // ari_value ::= INTEGER 
            {
              Object RESULT =null;
		 System.out.println("ari_value ::= INTEGER"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_value",58, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 94: // ari_value ::= REAL 
            {
              Object RESULT =null;
		 System.out.println("ari_value ::= REAL"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_value",57, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 92: // ari_value ::= REAL 
            {
              Object RESULT =null;
		 System.out.println("ari_value ::= REAL"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_value",56, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 95: // ari_value ::= REAL 
            {
              Object RESULT =null;
		 System.out.println("ari_value ::= REAL"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_value",58, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 95: // ari_value ::= case_exp 
            {
              Object RESULT =null;
		 System.out.println("ari_value ::= case_exp"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_value",57, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 93: // ari_value ::= case_exp 
            {
              Object RESULT =null;
		 System.out.println("ari_value ::= case_exp"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_value",56, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 96: // ari_value ::= case_exp 
            {
              Object RESULT =null;
		 System.out.println("ari_value ::= case_exp"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_value",58, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 96: // par_exp ::= _OPENPAR ari_exp _CLOSEPAR 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("par_exp",61, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 94: // par_exp ::= _OPENPAR ari_exp _CLOSEPAR 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("par_exp",60, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 97: // par_exp ::= _OPENPAR ari_exp _CLOSEPAR 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("par_exp",62, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 97: // exp ::= ari_exp _ari_opr ari_exp 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("exp",62, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 95: // exp ::= ari_exp _ari_opr ari_exp 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("exp",61, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 98: // exp ::= ari_exp _ari_opr ari_exp 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("exp",63, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 98: // _ari_opr ::= _PLUS 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_ari_opr",63, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 96: // _ari_opr ::= _PLUS 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_ari_opr",62, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 99: // _ari_opr ::= _PLUS 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_ari_opr",64, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 99: // _ari_opr ::= _MINUS 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_ari_opr",63, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 97: // _ari_opr ::= _MINUS 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_ari_opr",62, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 100: // _ari_opr ::= _MINUS 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_ari_opr",64, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 100: // _ari_opr ::= _STAR 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_ari_opr",63, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 98: // _ari_opr ::= _STAR 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_ari_opr",62, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 101: // _ari_opr ::= _STAR 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_ari_opr",64, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 101: // _ari_opr ::= _DIVIDE 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_ari_opr",63, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 99: // _ari_opr ::= _DIVIDE 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_ari_opr",62, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 102: // _ari_opr ::= _DIVIDE 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_ari_opr",64, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 102: // _asig_opr ::= _EQU 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",64, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 100: // _asig_opr ::= _EQU 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",63, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 103: // _asig_opr ::= _EQU 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",65, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 103: // _asig_opr ::= _PLUSEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",64, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 101: // _asig_opr ::= _PLUSEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",63, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 104: // _asig_opr ::= _PLUSEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",65, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 104: // _asig_opr ::= _MINUSEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",64, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 102: // _asig_opr ::= _MINUSEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",63, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 105: // _asig_opr ::= _MINUSEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",65, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 105: // _asig_opr ::= _TIMESEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",64, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 103: // _asig_opr ::= _TIMESEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",63, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 106: // _asig_opr ::= _TIMESEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",65, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 106: // _asig_opr ::= _DIVIDEEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",64, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 104: // _asig_opr ::= _DIVIDEEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",63, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 107: // _asig_opr ::= _DIVIDEEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",65, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 107: // _asig_opr ::= _MODEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",64, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 105: // _asig_opr ::= _MODEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",63, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 108: // _asig_opr ::= _MODEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",65, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 108: // _asig_opr ::= _ANDEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",64, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 106: // _asig_opr ::= _ANDEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",63, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 109: // _asig_opr ::= _ANDEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",65, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 109: // _asig_opr ::= _POWEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",64, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 107: // _asig_opr ::= _POWEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",63, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 110: // _asig_opr ::= _POWEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",65, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 110: // _asig_opr ::= _OREQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",64, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 108: // _asig_opr ::= _OREQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",63, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 111: // _asig_opr ::= _OREQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",65, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 111: // delete_s ::= DELETE FROM table_name where_part _semicolon 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("delete_s",65, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-4)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 109: // delete_s ::= DELETE FROM table_name where_part _semicolon 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("delete_s",64, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-4)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
          case 112: // delete_s ::= DELETE error 
=======
          case 110: // delete_s ::= DELETE error 
>>>>>>> release-0.3_card_47
=======
          case 106: // delete_s ::= DELETE FROM table_name _semicolon error 
            {
              Object RESULT =null;
		 TError errors_found = new TError("",0,0,"Syntax Error","Invalid DELETE section. Missing where clause (WHERE).");
				  	  	   TableSE.add(errors_found);
						   System.out.println("DELETE FROM table_name _semicolon error.\nMissing WHERE CLAUSE on DELETE."); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("delete_s",62, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-4)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 112: // delete_s ::= DELETE FROM table_name where_part _semicolon 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("delete_s",66, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-4)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 107: // delete_s ::= DELETE error 
>>>>>>> release-0.3_card_49
=======
          case 113: // delete_s ::= DELETE error 
>>>>>>> release-0.3_card_69
            {
              Object RESULT =null;
		 TError errors_found = new TError("",0,0,"Syntax Error","Invalid DELETE statement.");
				  	  			 		TableSE.add(errors_found);
										System.out.println("value ::= LITERAL_STRING"); 
<<<<<<< HEAD
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("delete_s",65, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("delete_s",64, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("delete_s",66, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 113: // from_part ::= _from table_name_mult 
=======
          case 111: // from_part ::= _from table_name_mult 
>>>>>>> release-0.3_card_47
=======
          case 108: // from_part ::= _from table_name_mult 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("from_part",20, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 114: // from_part ::= _from table_name_mult 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("from_part",21, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 114: // table_name_mult ::= table_name _COMMA table_name_mult 
=======
          case 112: // table_name_mult ::= table_name _COMMA table_name_mult 
>>>>>>> release-0.3_card_47
=======
          case 109: // table_name_mult ::= table_name _COMMA table_name_mult 
>>>>>>> release-0.3_card_49
=======
          case 115: // table_name_mult ::= table_name _COMMA table_name_mult 
>>>>>>> release-0.3_card_69
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("table_name_mult",4, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 115: // table_name_mult ::= table_name 
=======
          case 113: // table_name_mult ::= table_name 
>>>>>>> release-0.3_card_47
=======
          case 110: // table_name_mult ::= table_name 
>>>>>>> release-0.3_card_49
=======
          case 116: // table_name_mult ::= table_name 
>>>>>>> release-0.3_card_69
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("table_name_mult",4, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 116: // _from ::= FROM 
=======
          case 114: // _from ::= FROM 
>>>>>>> release-0.3_card_47
=======
          case 111: // _from ::= FROM 
>>>>>>> release-0.3_card_49
=======
          case 117: // _from ::= FROM 
>>>>>>> release-0.3_card_69
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_from",1, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 117: // table_name ::= tab 
=======
          case 115: // table_name ::= tab 
>>>>>>> release-0.3_card_47
=======
          case 112: // table_name ::= tab 
>>>>>>> release-0.3_card_49
=======
          case 118: // table_name ::= tab 
>>>>>>> release-0.3_card_69
            {
              Object RESULT =null;
		 System.out.println("table_name ::= tab"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("table_name",3, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 118: // table_name ::= tab_ali 
=======
          case 116: // table_name ::= tab_ali 
>>>>>>> release-0.3_card_47
=======
          case 113: // table_name ::= tab_ali 
>>>>>>> release-0.3_card_49
=======
          case 119: // table_name ::= tab_ali 
>>>>>>> release-0.3_card_69
            {
              Object RESULT =null;
		 System.out.println("table_name ::= tab_ali"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("table_name",3, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 119: // tab ::= IDENTIFIER 
=======
          case 117: // tab ::= IDENTIFIER 
>>>>>>> release-0.3_card_47
=======
          case 114: // tab ::= IDENTIFIER 
>>>>>>> release-0.3_card_49
=======
          case 120: // tab ::= IDENTIFIER 
>>>>>>> release-0.3_card_69
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Cup_Rules_SQL$stack.peek()).value;
		 Tables.add(id+"");
						   System.out.println("tab ::= IDENTIFIER"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("tab",5, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 120: // tab_ali ::= IDENTIFIER IDENTIFIER 
=======
          case 118: // tab_ali ::= IDENTIFIER IDENTIFIER 
>>>>>>> release-0.3_card_47
=======
          case 115: // tab_ali ::= IDENTIFIER IDENTIFIER 
>>>>>>> release-0.3_card_49
=======
          case 121: // tab_ali ::= IDENTIFIER IDENTIFIER 
>>>>>>> release-0.3_card_69
            {
              Object RESULT =null;
		int id1left = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)).left;
		int id1right = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)).right;
		Object id1 = (Object)((java_cup.runtime.Symbol) CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)).value;
		int id2left = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).left;
		int id2right = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).right;
		Object id2 = (Object)((java_cup.runtime.Symbol) CUP$Cup_Rules_SQL$stack.peek()).value;
		 System.out.println("tab_ali ::= IDENTIFIER IDENTIFIER");	
						   Tables.add(id1+""); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("tab_ali",6, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 121: // tab_ali ::= IDENTIFIER QTABLENAME 
=======
          case 119: // tab_ali ::= IDENTIFIER QTABLENAME 
>>>>>>> release-0.3_card_47
=======
          case 116: // tab_ali ::= IDENTIFIER QTABLENAME 
>>>>>>> release-0.3_card_49
=======
          case 122: // tab_ali ::= IDENTIFIER QTABLENAME 
>>>>>>> release-0.3_card_69
            {
              Object RESULT =null;
		int id1left = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)).left;
		int id1right = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)).right;
		Object id1 = (Object)((java_cup.runtime.Symbol) CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)).value;
		int id2left = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).left;
		int id2right = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).right;
		Object id2 = (Object)((java_cup.runtime.Symbol) CUP$Cup_Rules_SQL$stack.peek()).value;
		 System.out.println("tab_ali ::= IDENTIFIER QTABLENAME"); 
						   Tables.add(id1+""); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("tab_ali",6, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 122: // where_part ::= _where w_condition 
=======
          case 120: // where_part ::= _where w_condition 
>>>>>>> release-0.3_card_47
=======
          case 117: // where_part ::= _where w_condition 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;
		 System.out.println("where_part ::= _where w_condition"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("where_part",21, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 123: // where_part ::= _where w_condition 
            {
              Object RESULT =null;
		 System.out.println("where_part ::= _where w_condition"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("where_part",22, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 123: // _where ::= WHERE 
=======
          case 121: // _where ::= WHERE 
>>>>>>> release-0.3_card_47
=======
          case 118: // _where ::= WHERE 
>>>>>>> release-0.3_card_49
=======
          case 124: // _where ::= WHERE 
>>>>>>> release-0.3_card_69
            {
              Object RESULT =null;
		 System.out.println("_where ::= WHERE"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_where",2, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 124: // w_condition ::= cond log_oper w_condition 
=======
          case 119: // w_condition ::= cond log_oper w_condition 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;
		 System.out.println("w_condition ::= cond log_oper w_condition"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("w_condition",37, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 122: // w_condition ::= cond log_oper w_condition 
            {
              Object RESULT =null;
		 System.out.println("w_condition ::= cond log_oper w_condition"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("w_condition",36, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 125: // w_condition ::= cond log_oper w_condition 
            {
              Object RESULT =null;
		 System.out.println("w_condition ::= cond log_oper w_condition"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("w_condition",38, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 125: // w_condition ::= cond 
            {
              Object RESULT =null;
		 System.out.println("w_condition ::= cond"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("w_condition",37, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 123: // w_condition ::= cond 
=======
          case 120: // w_condition ::= cond 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;
		 System.out.println("w_condition ::= cond"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("w_condition",36, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 126: // w_condition ::= cond 
            {
              Object RESULT =null;
		 System.out.println("w_condition ::= cond"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("w_condition",38, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 126: // cond ::= cond_el cmp_oper cond_el 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cond",38, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 124: // cond ::= cond_el cmp_oper cond_el 
=======
          case 121: // cond ::= cond_el cmp_oper cond_el 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cond",37, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 127: // cond ::= cond_el cmp_oper cond_el 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cond",39, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 127: // cond ::= element_in IN in_list 
=======
          case 122: // cond ::= element_in IN in_list 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cond",38, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 125: // cond ::= element_in IN in_list 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cond",37, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 128: // cond ::= element_in IN in_list 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cond",39, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 128: // cond_el ::= mix_exp 
=======
          case 123: // cond_el ::= mix_exp 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cond_el",42, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 126: // cond_el ::= mix_exp 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cond_el",41, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 129: // cond_el ::= mix_exp 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cond_el",43, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 129: // in_list ::= _OPENPAR in_exp _CLOSEPAR 
=======
          case 127: // in_list ::= _OPENPAR in_exp _CLOSEPAR 
>>>>>>> release-0.3_card_47
=======
          case 124: // in_list ::= _OPENPAR in_exp _CLOSEPAR 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_list",27, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 130: // in_list ::= _OPENPAR in_exp _CLOSEPAR 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_list",28, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 130: // in_exp ::= in_array 
=======
          case 128: // in_exp ::= in_array 
>>>>>>> release-0.3_card_47
=======
          case 125: // in_exp ::= in_array 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_exp",28, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 131: // in_exp ::= in_array 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_exp",29, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 131: // in_exp ::= in_subquery 
=======
          case 129: // in_exp ::= in_subquery 
>>>>>>> release-0.3_card_47
=======
          case 126: // in_exp ::= in_subquery 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_exp",28, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 132: // in_exp ::= in_subquery 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_exp",29, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 132: // in_subquery ::= select_part_sub from_part 
=======
          case 130: // in_subquery ::= select_part_sub from_part 
>>>>>>> release-0.3_card_47
=======
          case 127: // in_subquery ::= select_part_sub from_part 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_subquery",30, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 133: // in_subquery ::= select_part_sub from_part 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_subquery",31, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 133: // in_subquery ::= select_part_sub from_part where_part 
=======
          case 131: // in_subquery ::= select_part_sub from_part where_part 
>>>>>>> release-0.3_card_47
=======
          case 128: // in_subquery ::= select_part_sub from_part where_part 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_subquery",30, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 134: // in_subquery ::= select_part_sub from_part where_part 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_subquery",31, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 134: // in_subquery ::= select_part_sub from_part joins_part 
=======
          case 132: // in_subquery ::= select_part_sub from_part joins_part 
>>>>>>> release-0.3_card_47
=======
          case 129: // in_subquery ::= select_part_sub from_part joins_part 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_subquery",30, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 135: // in_subquery ::= select_part_sub from_part joins_part 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_subquery",31, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 135: // in_subquery ::= select_part_sub from_part joins_part where_part 
=======
          case 133: // in_subquery ::= select_part_sub from_part joins_part where_part 
>>>>>>> release-0.3_card_47
=======
          case 130: // in_subquery ::= select_part_sub from_part joins_part where_part 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_subquery",30, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 136: // in_subquery ::= select_part_sub from_part joins_part where_part 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_subquery",31, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 136: // select_part_sub ::= _select col 
=======
          case 134: // select_part_sub ::= _select col 
>>>>>>> release-0.3_card_47
=======
          case 131: // select_part_sub ::= _select col 
>>>>>>> release-0.3_card_49
=======
          case 137: // select_part_sub ::= _select col 
>>>>>>> release-0.3_card_69
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("select_part_sub",12, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 137: // in_array ::= element _COMMA in_array 
=======
          case 135: // in_array ::= element _COMMA in_array 
>>>>>>> release-0.3_card_47
=======
          case 132: // in_array ::= element _COMMA in_array 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_array",29, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 138: // in_array ::= element _COMMA in_array 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_array",30, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 138: // in_array ::= element 
=======
          case 136: // in_array ::= element 
>>>>>>> release-0.3_card_47
=======
          case 133: // in_array ::= element 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_array",29, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 139: // in_array ::= element 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_array",30, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 139: // element_in ::= IDENTIFIER 
=======
          case 137: // element_in ::= IDENTIFIER 
>>>>>>> release-0.3_card_47
=======
          case 134: // element_in ::= IDENTIFIER 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element_in",26, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 140: // element_in ::= IDENTIFIER 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element_in",27, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 140: // element_in ::= TABDOTCOL 
=======
          case 138: // element_in ::= TABDOTCOL 
>>>>>>> release-0.3_card_47
=======
          case 135: // element_in ::= TABDOTCOL 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element_in",26, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 141: // element_in ::= TABDOTCOL 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element_in",27, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 141: // element ::= IDENTIFIER 
=======
          case 136: // element ::= IDENTIFIER 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element",41, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 139: // element ::= IDENTIFIER 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element",40, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 142: // element ::= IDENTIFIER 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element",42, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 142: // element ::= INTEGER 
=======
          case 137: // element ::= INTEGER 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element",41, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 140: // element ::= INTEGER 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element",40, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 143: // element ::= INTEGER 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element",42, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 143: // element ::= REAL 
=======
          case 138: // element ::= REAL 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element",41, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 141: // element ::= REAL 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element",40, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 144: // element ::= REAL 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element",42, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 144: // element ::= LITERAL_STRING 
=======
          case 139: // element ::= LITERAL_STRING 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element",41, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 142: // element ::= LITERAL_STRING 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element",40, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 145: // element ::= LITERAL_STRING 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element",42, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 145: // element ::= TABDOTCOL 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element",41, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 143: // element ::= TABDOTCOL 
=======
          case 140: // element ::= TABDOTCOL 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element",40, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 146: // element ::= TABDOTCOL 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element",42, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 146: // element ::= NULL 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element",41, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 144: // element ::= NULL 
=======
          case 141: // element ::= NULL 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element",40, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 147: // element ::= NULL 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element",42, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 147: // cmp_oper ::= _EQU 
=======
          case 142: // cmp_oper ::= _EQU 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",40, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 145: // cmp_oper ::= _EQU 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",39, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 148: // cmp_oper ::= _EQU 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",41, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 148: // cmp_oper ::= _GT 
=======
          case 143: // cmp_oper ::= _GT 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",40, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 146: // cmp_oper ::= _GT 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",39, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 149: // cmp_oper ::= _GT 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",41, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 149: // cmp_oper ::= _LT 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",40, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 147: // cmp_oper ::= _LT 
=======
          case 144: // cmp_oper ::= _LT 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",39, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 150: // cmp_oper ::= _LT 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",41, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 150: // cmp_oper ::= _LET 
=======
          case 145: // cmp_oper ::= _LET 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",40, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 148: // cmp_oper ::= _LET 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",39, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 151: // cmp_oper ::= _LET 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",41, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 151: // cmp_oper ::= _GET 
=======
          case 146: // cmp_oper ::= _GET 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",40, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 149: // cmp_oper ::= _GET 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",39, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 152: // cmp_oper ::= _GET 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",41, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 152: // cmp_oper ::= _DIFF 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",40, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 150: // cmp_oper ::= _DIFF 
=======
          case 147: // cmp_oper ::= _DIFF 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",39, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 153: // cmp_oper ::= _DIFF 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",41, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 153: // cmp_oper ::= _DIFF2 
=======
          case 148: // cmp_oper ::= _DIFF2 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",40, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 151: // cmp_oper ::= _DIFF2 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",39, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 154: // cmp_oper ::= _DIFF2 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",41, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 154: // log_oper ::= _AND 
=======
          case 149: // log_oper ::= _AND 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("log_oper",39, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 152: // log_oper ::= _AND 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("log_oper",38, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 155: // log_oper ::= _AND 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("log_oper",40, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          case 155: // log_oper ::= _OR 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("log_oper",39, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 153: // log_oper ::= _OR 
=======
          case 150: // log_oper ::= _OR 
>>>>>>> release-0.3_card_49
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("log_oper",38, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_47
=======
          case 156: // log_oper ::= _OR 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("log_oper",40, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_69
            }
          return CUP$Cup_Rules_SQL$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Cup_Rules_SQL$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$Cup_Rules_SQL$do_action(
    int                        CUP$Cup_Rules_SQL$act_num,
    java_cup.runtime.lr_parser CUP$Cup_Rules_SQL$parser,
    java.util.Stack            CUP$Cup_Rules_SQL$stack,
    int                        CUP$Cup_Rules_SQL$top)
    throws java.lang.Exception
    {
              return CUP$Cup_Rules_SQL$do_action_part00000000(
                               CUP$Cup_Rules_SQL$act_num,
                               CUP$Cup_Rules_SQL$parser,
                               CUP$Cup_Rules_SQL$stack,
                               CUP$Cup_Rules_SQL$top);
    }
}

}
