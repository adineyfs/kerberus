
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20150326 (SVN rev 63)
//----------------------------------------------------

package com.kerberus.model.syntaxValidator.rules.sql;

import java_cup.runtime.*;
import java.util.LinkedList;
import java.util.HashSet;
import java.io.*;
import com.kerberus.model.syntaxValidator.rules.util.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20150326 (SVN rev 63) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class Cup_Rules_SQL extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public Cup_Rules_SQL() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public Cup_Rules_SQL(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Cup_Rules_SQL(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
<<<<<<< HEAD
    "\000\235\000\002\002\004\000\002\011\004\000\002\011" +
    "\003\000\002\012\003\000\002\012\003\000\002\012\003" +
    "\000\002\013\003\000\002\014\005\000\002\014\006\000" +
    "\002\014\006\000\002\014\007\000\002\040\004\000\002" +
    "\040\003\000\002\041\005\000\002\041\004\000\002\041" +
    "\005\000\002\041\005\000\002\045\004\000\002\045\004" +
    "\000\002\045\004\000\002\045\005\000\002\045\005\000" +
    "\002\045\005\000\002\043\004\000\002\044\005\000\002" +
    "\044\003\000\002\042\005\000\002\015\004\000\002\015" +
    "\005\000\002\015\004\000\002\002\003\000\002\027\005" +
    "\000\002\027\003\000\002\017\004\000\002\017\003\000" +
    "\002\054\003\000\002\054\003\000\002\055\003\000\002" +
    "\055\004\000\002\056\005\000\002\056\003\000\002\056" +
    "\003\000\002\057\005\000\002\020\003\000\002\020\003" +
    "\000\002\021\006\000\002\021\006\000\002\023\006\000" +
    "\002\023\006\000\002\022\004\000\002\022\004\000\002" +
    "\022\003\000\002\022\003\000\002\024\004\000\002\024" +
    "\004\000\002\024\003\000\002\024\003\000\002\030\003" +
    "\000\002\030\003\000\002\031\003\000\002\031\003\000" +
    "\002\031\003\000\002\032\003\000\002\032\003\000\002" +
    "\032\003\000\002\060\005\000\002\060\006\000\002\060" +
    "\006\000\002\060\007\000\002\061\004\000\002\061\003" +
    "\000\002\062\004\000\002\064\004\000\002\064\004\000" +
    "\002\065\004\000\002\063\004\000\002\066\007\000\002" +
    "\066\007\000\002\066\006\000\002\066\004\000\002\066" +
    "\004\000\002\070\003\000\002\071\004\000\002\071\003" +
    "\000\002\067\003\000\002\073\005\000\002\073\003\000" +
    "\002\073\003\000\002\074\005\000\002\074\005\000\002" +
    "\075\003\000\002\075\003\000\002\075\003\000\002\072" +
    "\003\000\002\072\003\000\002\072\003\000\002\072\003" +
    "\000\002\076\005\000\002\077\005\000\002\100\003\000" +
    "\002\100\003\000\002\100\003\000\002\100\003\000\002" +
    "\101\003\000\002\101\003\000\002\101\003\000\002\101" +
    "\003\000\002\101\003\000\002\101\003\000\002\101\003" +
    "\000\002\101\003\000\002\101\003\000\002\102\007\000" +
    "\002\102\004\000\002\025\004\000\002\006\005\000\002" +
    "\006\003\000\002\003\003\000\002\005\003\000\002\005" +
    "\003\000\002\007\003\000\002\010\004\000\002\010\004" +
    "\000\002\026\004\000\002\004\003\000\002\046\005\000" +
    "\002\046\003\000\002\047\005\000\002\047\005\000\002" +
    "\053\003\000\002\034\005\000\002\035\003\000\002\035" +
    "\003\000\002\037\004\000\002\037\005\000\002\037\005" +
    "\000\002\037\006\000\002\016\004\000\002\036\005\000" +
    "\002\036\003\000\002\033\003\000\002\033\003\000\002" +
    "\052\003\000\002\052\003\000\002\052\003\000\002\052" +
    "\003\000\002\052\003\000\002\052\003\000\002\051\003" +
    "\000\002\051\003\000\002\051\003\000\002\051\003\000" +
    "\002\051\003\000\002\051\003\000\002\051\003\000\002" +
    "\050\003\000\002\050\003" });
=======
    "\000\244\000\002\002\004\000\002\011\004\000\002\011" +
    "\003\000\002\012\003\000\002\012\003\000\002\012\003" +
    "\000\002\013\003\000\002\014\005\000\002\014\006\000" +
    "\002\014\006\000\002\014\007\000\002\043\004\000\002" +
    "\043\003\000\002\044\005\000\002\044\004\000\002\044" +
    "\005\000\002\044\005\000\002\050\004\000\002\050\004" +
    "\000\002\050\004\000\002\050\005\000\002\050\005\000" +
    "\002\050\005\000\002\046\004\000\002\047\005\000\002" +
    "\047\003\000\002\045\005\000\002\015\004\000\002\015" +
    "\005\000\002\015\004\000\002\002\003\000\002\032\005" +
    "\000\002\032\003\000\002\017\004\000\002\017\003\000" +
    "\002\057\003\000\002\057\003\000\002\057\003\000\002" +
    "\060\003\000\002\060\004\000\002\061\005\000\002\061" +
    "\003\000\002\061\003\000\002\062\005\000\002\020\003" +
    "\000\002\021\003\000\002\021\003\000\002\022\006\000" +
    "\002\022\006\000\002\024\012\000\002\026\016\000\002" +
    "\027\003\000\002\027\003\000\002\027\003\000\002\027" +
    "\003\000\002\027\003\000\002\027\003\000\002\027\003" +
    "\000\002\025\005\000\002\025\003\000\002\023\004\000" +
    "\002\023\004\000\002\023\003\000\002\023\003\000\002" +
    "\033\003\000\002\033\003\000\002\034\003\000\002\034" +
    "\003\000\002\034\003\000\002\035\003\000\002\035\003" +
    "\000\002\035\003\000\002\063\005\000\002\063\006\000" +
    "\002\063\006\000\002\063\007\000\002\064\004\000\002" +
    "\064\003\000\002\065\004\000\002\067\004\000\002\067" +
    "\004\000\002\070\004\000\002\066\004\000\002\071\007" +
    "\000\002\071\007\000\002\071\006\000\002\071\004\000" +
    "\002\071\004\000\002\073\003\000\002\074\004\000\002" +
    "\074\003\000\002\072\003\000\002\076\005\000\002\076" +
    "\003\000\002\076\003\000\002\077\005\000\002\077\005" +
    "\000\002\100\003\000\002\100\003\000\002\100\003\000" +
    "\002\075\003\000\002\075\003\000\002\075\003\000\002" +
    "\075\003\000\002\101\005\000\002\102\005\000\002\103" +
    "\003\000\002\103\003\000\002\103\003\000\002\103\003" +
    "\000\002\104\003\000\002\104\003\000\002\104\003\000" +
    "\002\104\003\000\002\104\003\000\002\104\003\000\002" +
    "\104\003\000\002\104\003\000\002\104\003\000\002\105" +
    "\007\000\002\105\004\000\002\030\004\000\002\006\005" +
    "\000\002\006\003\000\002\003\003\000\002\005\003\000" +
    "\002\005\003\000\002\007\003\000\002\010\004\000\002" +
    "\010\004\000\002\031\004\000\002\004\003\000\002\051" +
    "\005\000\002\051\003\000\002\052\005\000\002\052\005" +
    "\000\002\056\003\000\002\037\005\000\002\040\003\000" +
    "\002\040\003\000\002\042\004\000\002\042\005\000\002" +
    "\042\005\000\002\042\006\000\002\016\004\000\002\041" +
    "\005\000\002\041\003\000\002\036\003\000\002\036\003" +
    "\000\002\055\003\000\002\055\003\000\002\055\003\000" +
    "\002\055\003\000\002\055\003\000\002\055\003\000\002" +
    "\054\003\000\002\054\003\000\002\054\003\000\002\054" +
    "\003\000\002\054\003\000\002\054\003\000\002\054\003" +
    "\000\002\053\003\000\002\053\003" });
>>>>>>> release-0.3_card_53

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
<<<<<<< HEAD
    "\000\361\000\012\003\013\004\014\005\006\007\011\001" +
    "\002\000\032\024\321\025\026\026\325\027\322\030\053" +
    "\035\033\036\055\037\061\040\027\042\025\070\060\073" +
    "\323\001\002\000\004\010\170\001\002\000\006\003\uffad" +
    "\035\uffad\001\002\000\014\002\ufffc\003\ufffc\004\ufffc\005" +
    "\ufffc\007\ufffc\001\002\000\014\002\301\003\013\004\014" +
    "\005\006\007\011\001\002\000\006\003\274\010\275\001" +
    "\002\000\014\002\uffff\003\uffff\004\uffff\005\uffff\007\uffff" +
    "\001\002\000\006\003\uffae\006\uffae\001\002\000\032\024" +
    "\uffe3\025\uffe3\026\uffe3\027\uffe3\030\uffe3\035\uffe3\036\uffe3" +
    "\037\uffe3\040\uffe3\042\uffe3\070\uffe3\073\uffe3\001\002\000" +
    "\014\002\ufffe\003\ufffe\004\ufffe\005\ufffe\007\ufffe\001\002" +
    "\000\014\002\ufffd\003\ufffd\004\ufffd\005\ufffd\007\ufffd\001" +
    "\002\000\006\003\273\035\211\001\002\000\006\003\022" +
    "\006\023\001\002\000\014\003\030\025\026\035\033\040" +
    "\027\042\025\001\002\000\014\002\uffb2\003\uffb2\004\uffb2" +
    "\005\uffb2\007\uffb2\001\002\000\014\003\uffb0\025\uffb0\035" +
    "\uffb0\040\uffb0\042\uffb0\001\002\000\024\044\260\060\266" +
    "\061\263\062\264\063\257\064\256\065\262\066\267\067" +
    "\261\001\002\000\110\003\uffc5\010\uffc5\011\uffc5\021\uffc5" +
    "\031\uffc5\032\uffc5\033\uffc5\034\uffc5\035\uffc5\041\uffc5\043" +
    "\uffc5\044\uffc5\045\uffc5\046\uffc5\047\uffc5\050\uffc5\051\uffc5" +
    "\052\uffc5\053\uffc5\054\uffc5\055\uffc5\056\uffc5\057\uffc5\060" +
    "\uffc5\061\uffc5\062\uffc5\063\uffc5\064\uffc5\065\uffc5\066\uffc5" +
    "\067\uffc5\071\uffc5\072\uffc5\073\uffc5\074\uffc5\001\002\000" +
    "\110\003\uffc7\010\uffc7\011\uffc7\021\uffc7\031\uffc7\032\uffc7" +
    "\033\uffc7\034\uffc7\035\uffc7\041\uffc7\043\uffc7\044\uffc7\045" +
    "\uffc7\046\uffc7\047\uffc7\050\uffc7\051\uffc7\052\uffc7\053\uffc7" +
    "\054\uffc7\055\uffc7\056\uffc7\057\uffc7\060\uffc7\061\uffc7\062" +
    "\uffc7\063\uffc7\064\uffc7\065\uffc7\066\uffc7\067\uffc7\071\uffc7" +
    "\072\uffc7\073\uffc7\074\uffc7\001\002\000\110\003\uffc4\010" +
    "\uffc4\011\uffc4\021\uffc4\031\uffc4\032\uffc4\033\uffc4\034\uffc4" +
    "\035\uffc4\041\uffc4\043\uffc4\044\uffc4\045\uffc4\046\uffc4\047" +
    "\uffc4\050\uffc4\051\uffc4\052\uffc4\053\uffc4\054\uffc4\055\uffc4" +
    "\056\uffc4\057\uffc4\060\uffc4\061\uffc4\062\uffc4\063\uffc4\064" +
    "\uffc4\065\uffc4\066\uffc4\067\uffc4\071\uffc4\072\uffc4\073\uffc4" +
    "\074\uffc4\001\002\000\006\003\uffaa\011\uffaa\001\002\000" +
    "\006\003\040\011\037\001\002\000\010\003\uffab\011\uffab" +
    "\072\035\001\002\000\110\003\uffc6\010\uffc6\011\uffc6\021" +
    "\uffc6\031\uffc6\032\uffc6\033\uffc6\034\uffc6\035\uffc6\041\uffc6" +
    "\043\uffc6\044\uffc6\045\uffc6\046\uffc6\047\uffc6\050\uffc6\051" +
    "\uffc6\052\uffc6\053\uffc6\054\uffc6\055\uffc6\056\uffc6\057\uffc6" +
    "\060\uffc6\061\uffc6\062\uffc6\063\uffc6\064\uffc6\065\uffc6\066" +
    "\uffc6\067\uffc6\071\uffc6\072\uffc6\073\uffc6\074\uffc6\001\002" +
    "\000\110\003\uffc8\010\uffc8\011\uffc8\021\uffc8\031\uffc8\032" +
    "\uffc8\033\uffc8\034\uffc8\035\uffc8\041\uffc8\043\uffc8\044\uffc8" +
    "\045\uffc8\046\uffc8\047\uffc8\050\uffc8\051\uffc8\052\uffc8\053" +
    "\uffc8\054\uffc8\055\uffc8\056\uffc8\057\uffc8\060\uffc8\061\uffc8" +
    "\062\uffc8\063\uffc8\064\uffc8\065\uffc8\066\uffc8\067\uffc8\071" +
    "\uffc8\072\uffc8\073\uffc8\074\uffc8\001\002\000\014\003\030" +
    "\025\026\035\033\040\027\042\025\001\002\000\006\003" +
    "\uffac\011\uffac\001\002\000\022\025\uff85\030\uff85\035\uff85" +
    "\036\uff85\037\uff85\040\uff85\042\uff85\070\uff85\001\002\000" +
    "\014\002\uffb3\003\uffb3\004\uffb3\005\uffb3\007\uffb3\001\002" +
    "\000\006\003\254\074\253\001\002\000\022\025\026\030" +
    "\053\035\047\036\055\037\061\040\027\042\050\070\060" +
    "\001\002\000\070\003\uffa1\010\uffa1\011\uffa1\021\uffa1\031" +
    "\uffa1\032\uffa1\033\uffa1\034\uffa1\035\uffa1\041\uffa1\043\uffa1" +
    "\044\uffa1\045\uffa1\046\uffa1\047\uffa1\050\uffa1\051\uffa1\052" +
    "\uffa1\053\uffa1\054\uffa1\055\uffa1\056\uffa1\057\uffa1\071\uffa1" +
    "\072\uffa1\073\uffa1\074\uffa1\001\002\000\004\023\151\001" +
    "\002\000\020\044\147\045\146\046\145\047\143\050\141" +
    "\051\140\052\144\001\002\000\070\003\uffa4\010\uffa4\011" +
    "\uffa4\021\uffa4\031\uffa4\032\uffa4\033\uffa4\034\uffa4\035\uffa4" +
    "\041\uffa4\043\uffa4\044\uffa4\045\uffa4\046\uffa4\047\uffa4\050" +
    "\uffa4\051\uffa4\052\uffa4\053\uffa4\054\uffa4\055\uffa4\056\uffa4" +
    "\057\uffa4\071\uffa4\072\uffa4\073\uffa4\074\uffa4\001\002\000" +
    "\032\023\uff75\044\uffc6\045\uffc6\046\uffc6\047\uffc6\050\uffc6" +
    "\051\uffc6\052\uffc6\053\uffc6\054\uffc6\055\uffc6\073\uffc6\001" +
    "\002\000\032\023\uff74\044\uffc5\045\uffc5\046\uffc5\047\uffc5" +
    "\050\uffc5\051\uffc5\052\uffc5\053\uffc5\054\uffc5\055\uffc5\073" +
    "\uffc5\001\002\000\016\003\uff83\032\uff83\056\136\057\135" +
    "\071\uff83\074\uff83\001\002\000\060\003\uffd8\010\uffd8\021" +
    "\uffd8\032\uffd8\035\uffd8\041\uffd8\043\uffd8\044\uffd8\045\uffd8" +
    "\046\uffd8\047\uffd8\050\uffd8\051\uffd8\052\uffd8\053\uffd8\054" +
    "\uffd8\055\uffd8\056\uffd8\057\uffd8\071\uffd8\072\uffd8\073\uffd8" +
    "\074\uffd8\001\002\000\014\025\026\031\075\035\033\040" +
    "\027\042\025\001\002\000\060\003\uffd9\010\uffd9\021\uffd9" +
    "\032\uffd9\035\uffd9\041\uffd9\043\uffd9\044\uffd9\045\uffd9\046" +
    "\uffd9\047\uffd9\050\uffd9\051\uffd9\052\uffd9\053\uffd9\054\uffd9" +
    "\055\uffd9\056\uffd9\057\uffd9\071\uffd9\072\uffd9\073\uffd9\074" +
    "\uffd9\001\002\000\070\003\uffa3\010\uffa3\011\uffa3\021\uffa3" +
    "\031\uffa3\032\uffa3\033\uffa3\034\uffa3\035\uffa3\041\uffa3\043" +
    "\uffa3\044\uffa3\045\uffa3\046\uffa3\047\uffa3\050\uffa3\051\uffa3" +
    "\052\uffa3\053\uffa3\054\uffa3\055\uffa3\056\uffa3\057\uffa3\071" +
    "\uffa3\072\uffa3\073\uffa3\074\uffa3\001\002\000\044\003\uff80" +
    "\032\uff80\044\uff80\045\uff80\046\uff80\047\uff80\050\uff80\051" +
    "\uff80\052\uff80\053\064\054\063\055\065\056\uff80\057\uff80" +
    "\071\uff80\073\070\074\uff80\001\002\000\010\003\uff86\071" +
    "\uff86\074\uff86\001\002\000\022\025\026\030\053\035\033" +
    "\036\055\037\061\040\027\042\025\070\060\001\002\000" +
    "\070\003\uffa2\010\uffa2\011\uffa2\021\uffa2\031\uffa2\032\uffa2" +
    "\033\uffa2\034\uffa2\035\uffa2\041\uffa2\043\uffa2\044\uffa2\045" +
    "\uffa2\046\uffa2\047\uffa2\050\uffa2\051\uffa2\052\uffa2\053\uffa2" +
    "\054\uffa2\055\uffa2\056\uffa2\057\uffa2\071\uffa2\072\uffa2\073" +
    "\uffa2\074\uffa2\001\002\000\014\053\064\054\063\055\065" +
    "\071\067\073\070\001\002\000\022\025\uff9d\030\uff9d\035" +
    "\uff9d\036\uff9d\037\uff9d\040\uff9d\042\uff9d\070\uff9d\001\002" +
    "\000\022\025\uff9e\030\uff9e\035\uff9e\036\uff9e\037\uff9e\040" +
    "\uff9e\042\uff9e\070\uff9e\001\002\000\022\025\uff9b\030\uff9b" +
    "\035\uff9b\036\uff9b\037\uff9b\040\uff9b\042\uff9b\070\uff9b\001" +
    "\002\000\022\025\026\030\053\035\033\036\055\037\061" +
    "\040\027\042\025\070\060\001\002\000\060\003\uffda\010" +
    "\uffda\021\uffda\032\uffda\035\uffda\041\uffda\043\uffda\044\uffda" +
    "\045\uffda\046\uffda\047\uffda\050\uffda\051\uffda\052\uffda\053" +
    "\uffda\054\uffda\055\uffda\056\uffda\057\uffda\071\uffda\072\uffda" +
    "\073\uffda\074\uffda\001\002\000\022\025\uff9c\030\uff9c\035" +
    "\uff9c\036\uff9c\037\uff9c\040\uff9c\042\uff9c\070\uff9c\001\002" +
    "\000\060\003\uffd7\010\uffd7\021\uffd7\032\uffd7\035\uffd7\041" +
    "\uffd7\043\uffd7\044\uffd7\045\uffd7\046\uffd7\047\uffd7\050\uffd7" +
    "\051\uffd7\052\uffd7\053\064\054\063\055\065\056\uffd7\057" +
    "\uffd7\071\uffd7\072\uffd7\073\070\074\uffd7\001\002\000\010" +
    "\031\075\033\uffbb\034\uffbb\001\002\000\004\031\075\001" +
    "\002\000\004\032\124\001\002\000\022\025\123\030\053" +
    "\035\115\036\117\037\121\040\122\042\116\070\060\001" +
    "\002\000\006\033\077\034\101\001\002\000\022\025\026" +
    "\030\053\035\033\036\055\037\061\040\027\042\025\070" +
    "\103\001\002\000\004\034\102\001\002\000\070\003\uffc0" +
    "\010\uffc0\011\uffc0\021\uffc0\031\uffc0\032\uffc0\033\uffc0\034" +
    "\uffc0\035\uffc0\041\uffc0\043\uffc0\044\uffc0\045\uffc0\046\uffc0" +
    "\047\uffc0\050\uffc0\051\uffc0\052\uffc0\053\uffc0\054\uffc0\055" +
    "\uffc0\056\uffc0\057\uffc0\071\uffc0\072\uffc0\073\uffc0\074\uffc0" +
    "\001\002\000\070\003\uffbf\010\uffbf\011\uffbf\021\uffbf\031" +
    "\uffbf\032\uffbf\033\uffbf\034\uffbf\035\uffbf\041\uffbf\043\uffbf" +
    "\044\uffbf\045\uffbf\046\uffbf\047\uffbf\050\uffbf\051\uffbf\052" +
    "\uffbf\053\uffbf\054\uffbf\055\uffbf\056\uffbf\057\uffbf\071\uffbf" +
    "\072\uffbf\073\uffbf\074\uffbf\001\002\000\022\025\026\030" +
    "\053\035\033\036\055\037\061\040\027\042\025\070\103" +
    "\001\002\000\030\003\uffa7\011\uffa7\031\uffa7\033\uffa7\034" +
    "\uffa7\053\uffa7\054\uffa7\055\uffa7\071\uffa7\072\uffa7\073\uffa7" +
    "\001\002\000\030\003\uffa6\011\uffa6\031\uffa6\033\uffa6\034" +
    "\uffa6\053\uffa6\054\uffa6\055\uffa6\071\uffa6\072\uffa6\073\uffa6" +
    "\001\002\000\030\003\uffa5\011\uffa5\031\uffa5\033\uffa5\034" +
    "\uffa5\053\uffa5\054\uffa5\055\uffa5\071\uffa5\072\uffa5\073\uffa5" +
    "\001\002\000\014\034\uffb6\053\064\054\063\055\065\073" +
    "\070\001\002\000\022\025\026\030\053\035\033\036\055" +
    "\037\061\040\027\042\025\070\103\001\002\000\030\003" +
    "\uff9f\011\uff9f\031\uff9f\033\uff9f\034\uff9f\053\064\054\063" +
    "\055\065\071\uff9f\072\uff9f\073\070\001\002\000\014\053" +
    "\064\054\063\055\065\071\113\073\070\001\002\000\030" +
    "\003\uffa0\011\uffa0\031\uffa0\033\uffa0\034\uffa0\053\uffa0\054" +
    "\uffa0\055\uffa0\071\uffa0\072\uffa0\073\uffa0\001\002\000\004" +
    "\032\uffb8\001\002\000\034\023\uff75\032\uff73\044\uffc6\045" +
    "\uffc6\046\uffc6\047\uffc6\050\uffc6\051\uffc6\052\uffc6\053\uffc6" +
    "\054\uffc6\055\uffc6\073\uffc6\001\002\000\034\023\uff74\032" +
    "\uff6f\044\uffc5\045\uffc5\046\uffc5\047\uffc5\050\uffc5\051\uffc5" +
    "\052\uffc5\053\uffc5\054\uffc5\055\uffc5\073\uffc5\001\002\000" +
    "\032\032\uff72\044\uffa3\045\uffa3\046\uffa3\047\uffa3\050\uffa3" +
    "\051\uffa3\052\uffa3\053\uffa3\054\uffa3\055\uffa3\073\uffa3\001" +
    "\002\000\004\032\uffb9\001\002\000\032\032\uff71\044\uffa2" +
    "\045\uffa2\046\uffa2\047\uffa2\050\uffa2\051\uffa2\052\uffa2\053" +
    "\uffa2\054\uffa2\055\uffa2\073\uffa2\001\002\000\032\032\uff70" +
    "\044\uffc4\045\uffc4\046\uffc4\047\uffc4\050\uffc4\051\uffc4\052" +
    "\uffc4\053\uffc4\054\uffc4\055\uffc4\073\uffc4\001\002\000\032" +
    "\032\uff6e\044\uffc7\045\uffc7\046\uffc7\047\uffc7\050\uffc7\051" +
    "\uffc7\052\uffc7\053\uffc7\054\uffc7\055\uffc7\073\uffc7\001\002" +
    "\000\022\025\026\030\053\035\033\036\055\037\061\040" +
    "\027\042\025\070\103\001\002\000\010\031\uffba\033\uffba" +
    "\034\uffba\001\002\000\020\031\uffb7\033\uffb7\034\uffb7\053" +
    "\064\054\063\055\065\073\070\001\002\000\006\033\077" +
    "\034\131\001\002\000\004\034\132\001\002\000\070\003" +
    "\uffbe\010\uffbe\011\uffbe\021\uffbe\031\uffbe\032\uffbe\033\uffbe" +
    "\034\uffbe\035\uffbe\041\uffbe\043\uffbe\044\uffbe\045\uffbe\046" +
    "\uffbe\047\uffbe\050\uffbe\051\uffbe\052\uffbe\053\uffbe\054\uffbe" +
    "\055\uffbe\056\uffbe\057\uffbe\071\uffbe\072\uffbe\073\uffbe\074" +
    "\uffbe\001\002\000\070\003\uffbd\010\uffbd\011\uffbd\021\uffbd" +
    "\031\uffbd\032\uffbd\033\uffbd\034\uffbd\035\uffbd\041\uffbd\043" +
    "\uffbd\044\uffbd\045\uffbd\046\uffbd\047\uffbd\050\uffbd\051\uffbd" +
    "\052\uffbd\053\uffbd\054\uffbd\055\uffbd\056\uffbd\057\uffbd\071" +
    "\uffbd\072\uffbd\073\uffbd\074\uffbd\001\002\000\006\033\uffbc" +
    "\034\uffbc\001\002\000\022\025\026\030\053\035\047\036" +
    "\055\037\061\040\027\042\050\070\060\001\002\000\022" +
    "\025\uff65\030\uff65\035\uff65\036\uff65\037\uff65\040\uff65\042" +
    "\uff65\070\uff65\001\002\000\022\025\uff66\030\uff66\035\uff66" +
    "\036\uff66\037\uff66\040\uff66\042\uff66\070\uff66\001\002\000" +
    "\012\003\uff84\032\uff84\071\uff84\074\uff84\001\002\000\022" +
    "\025\uff68\030\uff68\035\uff68\036\uff68\037\uff68\040\uff68\042" +
    "\uff68\070\uff68\001\002\000\022\025\uff69\030\uff69\035\uff69" +
    "\036\uff69\037\uff69\040\uff69\042\uff69\070\uff69\001\002\000" +
    "\022\025\026\030\053\035\033\036\055\037\061\040\027" +
    "\042\025\070\060\001\002\000\022\025\uff6a\030\uff6a\035" +
    "\uff6a\036\uff6a\037\uff6a\040\uff6a\042\uff6a\070\uff6a\001\002" +
    "\000\022\025\uff67\030\uff67\035\uff67\036\uff67\037\uff67\040" +
    "\uff67\042\uff67\070\uff67\001\002\000\022\025\uff6b\030\uff6b" +
    "\035\uff6b\036\uff6b\037\uff6b\040\uff6b\042\uff6b\070\uff6b\001" +
    "\002\000\022\025\uff6c\030\uff6c\035\uff6c\036\uff6c\037\uff6c" +
    "\040\uff6c\042\uff6c\070\uff6c\001\002\000\022\025\uff6d\030" +
    "\uff6d\035\uff6d\036\uff6d\037\uff6d\040\uff6d\042\uff6d\070\uff6d" +
    "\001\002\000\016\003\uff82\032\uff82\056\uff82\057\uff82\071" +
    "\uff82\074\uff82\001\002\000\004\070\152\001\002\000\020" +
    "\004\014\025\160\035\167\036\154\037\166\040\164\042" +
    "\157\001\002\000\016\003\uff81\032\uff81\056\uff81\057\uff81" +
    "\071\uff81\074\uff81\001\002\000\034\011\uff72\012\uff72\013" +
    "\uff72\014\uff72\015\uff72\017\uff72\020\uff72\044\uff72\056\uff72" +
    "\057\uff72\071\uff72\072\uff72\074\uff72\001\002\000\004\071" +
    "\252\001\002\000\012\025\026\035\033\040\027\042\025" +
    "\001\002\000\034\011\uff6f\012\uff6f\013\uff6f\014\uff6f\015" +
    "\uff6f\017\uff6f\020\uff6f\044\uff6f\056\uff6f\057\uff6f\071\uff6f" +
    "\072\uff6f\074\uff6f\001\002\000\034\011\uff6e\012\uff6e\013" +
    "\uff6e\014\uff6e\015\uff6e\017\uff6e\020\uff6e\044\uff6e\056\uff6e" +
    "\057\uff6e\071\uff6e\072\uff6e\074\uff6e\001\002\000\006\071" +
    "\uff76\072\247\001\002\000\004\071\uff7e\001\002\000\004" +
    "\071\uff7d\001\002\000\034\011\uff70\012\uff70\013\uff70\014" +
    "\uff70\015\uff70\017\uff70\020\uff70\044\uff70\056\uff70\057\uff70" +
    "\071\uff70\072\uff70\074\uff70\001\002\000\004\010\170\001" +
    "\002\000\034\011\uff71\012\uff71\013\uff71\014\uff71\015\uff71" +
    "\017\uff71\020\uff71\044\uff71\056\uff71\057\uff71\071\uff71\072" +
    "\uff71\074\uff71\001\002\000\034\011\uff73\012\uff73\013\uff73" +
    "\014\uff73\015\uff73\017\uff73\020\uff73\044\uff73\056\uff73\057" +
    "\uff73\071\uff73\072\uff73\074\uff73\001\002\000\004\035\uff8c" +
    "\001\002\000\004\035\211\001\002\000\022\011\037\012" +
    "\204\013\175\014\200\015\176\017\202\020\173\071\uff7c" +
    "\001\002\000\004\035\211\001\002\000\004\035\211\001" +
    "\002\000\006\016\225\020\224\001\002\000\004\016\222" +
    "\001\002\000\024\011\ufff5\012\204\013\175\014\200\015" +
    "\176\017\202\020\173\071\ufff5\074\ufff5\001\002\000\006" +
    "\016\217\020\216\001\002\000\004\071\uff7b\001\002\000" +
    "\004\020\215\001\002\000\006\011\037\071\uff7a\001\002" +
    "\000\004\020\205\001\002\000\004\035\211\001\002\000" +
    "\024\011\ufff4\012\ufff4\013\ufff4\014\ufff4\015\ufff4\017\ufff4" +
    "\020\ufff4\071\ufff4\074\ufff4\001\002\000\034\003\uff8a\006" +
    "\uff8a\011\uff8a\012\uff8a\013\uff8a\014\uff8a\015\uff8a\017\uff8a" +
    "\020\uff8a\022\uff8a\071\uff8a\072\uff8a\074\uff8a\001\002\000" +
    "\034\003\uff8b\006\uff8b\011\uff8b\012\uff8b\013\uff8b\014\uff8b" +
    "\015\uff8b\017\uff8b\020\uff8b\022\uff8b\071\uff8b\072\uff8b\074" +
    "\uff8b\001\002\000\040\003\uff89\006\uff89\011\uff89\012\uff89" +
    "\013\uff89\014\uff89\015\uff89\017\uff89\020\uff89\022\uff89\035" +
    "\213\041\212\071\uff89\072\uff89\074\uff89\001\002\000\034" +
    "\003\uff87\006\uff87\011\uff87\012\uff87\013\uff87\014\uff87\015" +
    "\uff87\017\uff87\020\uff87\022\uff87\071\uff87\072\uff87\074\uff87" +
    "\001\002\000\034\003\uff88\006\uff88\011\uff88\012\uff88\013" +
    "\uff88\014\uff88\015\uff88\017\uff88\020\uff88\022\uff88\071\uff88" +
    "\072\uff88\074\uff88\001\002\000\004\071\uff79\001\002\000" +
    "\004\035\ufff0\001\002\000\004\035\uffee\001\002\000\004" +
    "\020\220\001\002\000\004\035\uffec\001\002\000\010\011" +
    "\ufff6\071\ufff6\074\ufff6\001\002\000\004\020\223\001\002" +
    "\000\004\035\uffeb\001\002\000\004\035\uffef\001\002\000" +
    "\004\020\226\001\002\000\004\035\uffed\001\002\000\004" +
    "\022\231\001\002\000\024\011\ufff1\012\ufff1\013\ufff1\014" +
    "\ufff1\015\ufff1\017\ufff1\020\ufff1\071\ufff1\074\ufff1\001\002" +
    "\000\016\025\160\035\167\036\154\037\166\040\164\042" +
    "\157\001\002\000\024\011\uffea\012\uffea\013\uffea\014\uffea" +
    "\015\uffea\017\uffea\020\uffea\071\uffea\074\uffea\001\002\000" +
    "\030\011\uffe8\012\uffe8\013\uffe8\014\uffe8\015\uffe8\017\uffe8" +
    "\020\uffe8\056\136\057\135\071\uffe8\074\uffe8\001\002\000" +
    "\004\044\235\001\002\000\016\025\160\035\167\036\154" +
    "\037\166\040\164\042\157\001\002\000\030\011\uffe7\012" +
    "\uffe7\013\uffe7\014\uffe7\015\uffe7\017\uffe7\020\uffe7\056\uffe7" +
    "\057\uffe7\071\uffe7\074\uffe7\001\002\000\016\025\160\035" +
    "\167\036\154\037\166\040\164\042\157\001\002\000\024" +
    "\011\uffe9\012\uffe9\013\uffe9\014\uffe9\015\uffe9\017\uffe9\020" +
    "\uffe9\071\uffe9\074\uffe9\001\002\000\026\011\ufff3\012\ufff3" +
    "\013\ufff3\014\ufff3\015\ufff3\017\ufff3\020\ufff3\022\231\071" +
    "\ufff3\074\ufff3\001\002\000\024\011\ufff2\012\ufff2\013\ufff2" +
    "\014\ufff2\015\ufff2\017\ufff2\020\ufff2\071\ufff2\074\ufff2\001" +
    "\002\000\026\011\uff8d\012\uff8d\013\uff8d\014\uff8d\015\uff8d" +
    "\017\uff8d\020\uff8d\071\uff8d\072\245\074\uff8d\001\002\000" +
    "\024\011\uff8f\012\uff8f\013\uff8f\014\uff8f\015\uff8f\017\uff8f" +
    "\020\uff8f\071\uff8f\074\uff8f\001\002\000\004\035\211\001" +
    "\002\000\024\011\uff8e\012\uff8e\013\uff8e\014\uff8e\015\uff8e" +
    "\017\uff8e\020\uff8e\071\uff8e\074\uff8e\001\002\000\016\025" +
    "\160\035\167\036\154\037\166\040\164\042\157\001\002" +
    "\000\004\071\uff77\001\002\000\004\010\uff78\001\002\000" +
    "\016\003\uff7f\032\uff7f\056\uff7f\057\uff7f\071\uff7f\074\uff7f" +
    "\001\002\000\014\002\ufffb\003\ufffb\004\ufffb\005\ufffb\007" +
    "\ufffb\001\002\000\014\002\uffb4\003\uffb4\004\uffb4\005\uffb4" +
    "\007\uffb4\001\002\000\014\002\uffb5\003\uffb5\004\uffb5\005" +
    "\uffb5\007\uffb5\001\002\000\022\025\uff95\030\uff95\035\uff95" +
    "\036\uff95\037\uff95\040\uff95\042\uff95\070\uff95\001\002\000" +
    "\022\025\uff96\030\uff96\035\uff96\036\uff96\037\uff96\040\uff96" +
    "\042\uff96\070\uff96\001\002\000\022\025\uff9a\030\uff9a\035" +
    "\uff9a\036\uff9a\037\uff9a\040\uff9a\042\uff9a\070\uff9a\001\002" +
    "\000\022\025\uff92\030\uff92\035\uff92\036\uff92\037\uff92\040" +
    "\uff92\042\uff92\070\uff92\001\002\000\022\025\uff94\030\uff94" +
    "\035\uff94\036\uff94\037\uff94\040\uff94\042\uff94\070\uff94\001" +
    "\002\000\022\025\uff98\030\uff98\035\uff98\036\uff98\037\uff98" +
    "\040\uff98\042\uff98\070\uff98\001\002\000\022\025\uff97\030" +
    "\uff97\035\uff97\036\uff97\037\uff97\040\uff97\042\uff97\070\uff97" +
    "\001\002\000\022\025\026\030\053\035\033\036\055\037" +
    "\061\040\027\042\025\070\103\001\002\000\022\025\uff99" +
    "\030\uff99\035\uff99\036\uff99\037\uff99\040\uff99\042\uff99\070" +
    "\uff99\001\002\000\022\025\uff93\030\uff93\035\uff93\036\uff93" +
    "\037\uff93\040\uff93\042\uff93\070\uff93\001\002\000\020\003" +
    "\uffa9\011\uffa9\053\064\054\063\055\065\072\uffa9\073\070" +
    "\001\002\000\010\003\uffa8\011\uffa8\072\uffa8\001\002\000" +
    "\006\003\uffaf\006\uffaf\001\002\000\014\002\uffb1\003\uffb1" +
    "\004\uffb1\005\uffb1\007\uffb1\001\002\000\014\002\uff90\003" +
    "\uff90\004\uff90\005\uff90\007\uff90\001\002\000\004\035\211" +
    "\001\002\000\004\011\037\001\002\000\004\074\253\001" +
    "\002\000\014\002\uff91\003\uff91\004\uff91\005\uff91\007\uff91" +
    "\001\002\000\004\002\001\001\002\000\014\002\000\003" +
    "\000\004\000\005\000\007\000\001\002\000\022\011\037" +
    "\012\204\013\175\014\200\015\176\017\202\020\173\074" +
    "\253\001\002\000\014\002\ufffa\003\ufffa\004\ufffa\005\ufffa" +
    "\007\ufffa\001\002\000\004\074\253\001\002\000\006\011" +
    "\037\074\253\001\002\000\004\074\253\001\002\000\014" +
    "\002\ufff8\003\ufff8\004\ufff8\005\ufff8\007\ufff8\001\002\000" +
    "\014\002\ufff7\003\ufff7\004\ufff7\005\ufff7\007\ufff7\001\002" +
    "\000\014\002\ufff9\003\ufff9\004\ufff9\005\ufff9\007\ufff9\001" +
    "\002\000\016\010\uffdd\021\uffdd\035\uffdd\041\uffdd\043\uffdd" +
    "\072\uffdd\001\002\000\006\010\uffe1\072\362\001\002\000" +
    "\016\010\uffd6\021\uffd6\035\uffd6\041\uffd6\043\uffd6\072\uffd6" +
    "\001\002\000\016\010\uffdf\021\354\035\357\041\353\043" +
    "\356\072\uffdf\001\002\000\004\010\uffe4\001\002\000\016" +
    "\010\uffd5\021\uffd5\035\uffd5\041\uffd5\043\uffd5\072\uffd5\001" +
    "\002\000\026\025\026\026\325\027\322\030\053\035\033" +
    "\036\055\037\061\040\027\042\025\070\060\001\002\000" +
    "\004\070\340\001\002\000\004\010\uffe6\001\002\000\026" +
    "\010\uffde\021\uffde\035\uffde\041\uffde\043\uffde\053\064\054" +
    "\063\055\065\072\uffde\073\070\001\002\000\004\070\326" +
    "\001\002\000\016\024\327\025\332\035\033\040\027\042" +
    "\025\073\333\001\002\000\012\025\337\035\033\040\027" +
    "\042\025\001\002\000\004\071\uffcd\001\002\000\004\071" +
    "\335\001\002\000\004\071\uffce\001\002\000\004\071\334" +
    "\001\002\000\016\010\uffd3\021\uffd3\035\uffd3\041\uffd3\043" +
    "\uffd3\072\uffd3\001\002\000\016\010\uffd4\021\uffd4\035\uffd4" +
    "\041\uffd4\043\uffd4\072\uffd4\001\002\000\004\071\uffd0\001" +
    "\002\000\004\071\uffcf\001\002\000\016\024\341\025\344" +
    "\035\033\040\027\042\025\073\345\001\002\000\012\025" +
    "\351\035\033\040\027\042\025\001\002\000\004\071\uffc9" +
    "\001\002\000\004\071\347\001\002\000\004\071\uffca\001" +
    "\002\000\004\071\346\001\002\000\016\010\uffd1\021\uffd1" +
    "\035\uffd1\041\uffd1\043\uffd1\072\uffd1\001\002\000\016\010" +
    "\uffd2\021\uffd2\035\uffd2\041\uffd2\043\uffd2\072\uffd2\001\002" +
    "\000\004\071\uffcc\001\002\000\004\071\uffcb\001\002\000" +
    "\004\010\uffe5\001\002\000\006\010\uffc3\072\uffc3\001\002" +
    "\000\010\035\357\041\353\043\356\001\002\000\006\010" +
    "\uffdc\072\uffdc\001\002\000\006\010\uffc1\072\uffc1\001\002" +
    "\000\006\010\uffc2\072\uffc2\001\002\000\006\010\uffe0\072" +
    "\uffe0\001\002\000\006\010\uffdb\072\uffdb\001\002\000\026" +
    "\025\026\026\325\027\322\030\053\035\033\036\055\037" +
    "\061\040\027\042\025\070\060\001\002\000\004\010\uffe2" +
    "\001\002" });
=======
    "\000\u0106\000\012\003\013\004\014\005\006\007\011\001" +
    "\002\000\034\024\322\025\026\026\326\027\314\030\323" +
    "\031\053\036\033\037\055\040\061\041\027\043\025\071" +
    "\060\074\324\001\002\000\004\010\170\001\002\000\006" +
    "\003\uffa6\036\uffa6\001\002\000\014\002\ufffc\003\ufffc\004" +
    "\ufffc\005\ufffc\007\ufffc\001\002\000\014\002\301\003\013" +
    "\004\014\005\006\007\011\001\002\000\006\003\274\010" +
    "\275\001\002\000\014\002\uffff\003\uffff\004\uffff\005\uffff" +
    "\007\uffff\001\002\000\006\003\uffa7\006\uffa7\001\002\000" +
    "\034\024\uffe3\025\uffe3\026\uffe3\027\uffe3\030\uffe3\031\uffe3" +
    "\036\uffe3\037\uffe3\040\uffe3\041\uffe3\043\uffe3\071\uffe3\074" +
    "\uffe3\001\002\000\014\002\ufffe\003\ufffe\004\ufffe\005\ufffe" +
    "\007\ufffe\001\002\000\014\002\ufffd\003\ufffd\004\ufffd\005" +
    "\ufffd\007\ufffd\001\002\000\006\003\273\036\211\001\002" +
    "\000\006\003\022\006\023\001\002\000\014\003\030\025" +
    "\026\036\033\041\027\043\025\001\002\000\014\002\uffab" +
    "\003\uffab\004\uffab\005\uffab\007\uffab\001\002\000\014\003" +
    "\uffa9\025\uffa9\036\uffa9\041\uffa9\043\uffa9\001\002\000\024" +
    "\045\260\061\266\062\263\063\264\064\257\065\256\066" +
    "\262\067\267\070\261\001\002\000\110\003\uffbe\010\uffbe" +
    "\011\uffbe\021\uffbe\032\uffbe\033\uffbe\034\uffbe\035\uffbe\036" +
    "\uffbe\042\uffbe\044\uffbe\045\uffbe\046\uffbe\047\uffbe\050\uffbe" +
    "\051\uffbe\052\uffbe\053\uffbe\054\uffbe\055\uffbe\056\uffbe\057" +
    "\uffbe\060\uffbe\061\uffbe\062\uffbe\063\uffbe\064\uffbe\065\uffbe" +
    "\066\uffbe\067\uffbe\070\uffbe\072\uffbe\073\uffbe\074\uffbe\075" +
    "\uffbe\001\002\000\110\003\uffc0\010\uffc0\011\uffc0\021\uffc0" +
    "\032\uffc0\033\uffc0\034\uffc0\035\uffc0\036\uffc0\042\uffc0\044" +
    "\uffc0\045\uffc0\046\uffc0\047\uffc0\050\uffc0\051\uffc0\052\uffc0" +
    "\053\uffc0\054\uffc0\055\uffc0\056\uffc0\057\uffc0\060\uffc0\061" +
    "\uffc0\062\uffc0\063\uffc0\064\uffc0\065\uffc0\066\uffc0\067\uffc0" +
    "\070\uffc0\072\uffc0\073\uffc0\074\uffc0\075\uffc0\001\002\000" +
    "\110\003\uffbd\010\uffbd\011\uffbd\021\uffbd\032\uffbd\033\uffbd" +
    "\034\uffbd\035\uffbd\036\uffbd\042\uffbd\044\uffbd\045\uffbd\046" +
    "\uffbd\047\uffbd\050\uffbd\051\uffbd\052\uffbd\053\uffbd\054\uffbd" +
    "\055\uffbd\056\uffbd\057\uffbd\060\uffbd\061\uffbd\062\uffbd\063" +
    "\uffbd\064\uffbd\065\uffbd\066\uffbd\067\uffbd\070\uffbd\072\uffbd" +
    "\073\uffbd\074\uffbd\075\uffbd\001\002\000\006\003\uffa3\011" +
    "\uffa3\001\002\000\006\003\037\011\040\001\002\000\010" +
    "\003\uffa4\011\uffa4\073\035\001\002\000\110\003\uffbf\010" +
    "\uffbf\011\uffbf\021\uffbf\032\uffbf\033\uffbf\034\uffbf\035\uffbf" +
    "\036\uffbf\042\uffbf\044\uffbf\045\uffbf\046\uffbf\047\uffbf\050" +
    "\uffbf\051\uffbf\052\uffbf\053\uffbf\054\uffbf\055\uffbf\056\uffbf" +
    "\057\uffbf\060\uffbf\061\uffbf\062\uffbf\063\uffbf\064\uffbf\065" +
    "\uffbf\066\uffbf\067\uffbf\070\uffbf\072\uffbf\073\uffbf\074\uffbf" +
    "\075\uffbf\001\002\000\110\003\uffc1\010\uffc1\011\uffc1\021" +
    "\uffc1\032\uffc1\033\uffc1\034\uffc1\035\uffc1\036\uffc1\042\uffc1" +
    "\044\uffc1\045\uffc1\046\uffc1\047\uffc1\050\uffc1\051\uffc1\052" +
    "\uffc1\053\uffc1\054\uffc1\055\uffc1\056\uffc1\057\uffc1\060\uffc1" +
    "\061\uffc1\062\uffc1\063\uffc1\064\uffc1\065\uffc1\066\uffc1\067" +
    "\uffc1\070\uffc1\072\uffc1\073\uffc1\074\uffc1\075\uffc1\001\002" +
    "\000\014\003\030\025\026\036\033\041\027\043\025\001" +
    "\002\000\006\003\uffa5\011\uffa5\001\002\000\014\002\uffac" +
    "\003\uffac\004\uffac\005\uffac\007\uffac\001\002\000\022\025" +
    "\uff7e\031\uff7e\036\uff7e\037\uff7e\040\uff7e\041\uff7e\043\uff7e" +
    "\071\uff7e\001\002\000\006\003\254\075\253\001\002\000" +
    "\022\025\026\031\053\036\047\037\055\040\061\041\027" +
    "\043\050\071\060\001\002\000\070\003\uff9a\010\uff9a\011" +
    "\uff9a\021\uff9a\032\uff9a\033\uff9a\034\uff9a\035\uff9a\036\uff9a" +
    "\042\uff9a\044\uff9a\045\uff9a\046\uff9a\047\uff9a\050\uff9a\051" +
    "\uff9a\052\uff9a\053\uff9a\054\uff9a\055\uff9a\056\uff9a\057\uff9a" +
    "\060\uff9a\072\uff9a\073\uff9a\074\uff9a\075\uff9a\001\002\000" +
    "\004\023\151\001\002\000\020\045\147\046\146\047\145" +
    "\050\142\051\141\052\140\053\144\001\002\000\070\003" +
    "\uff9d\010\uff9d\011\uff9d\021\uff9d\032\uff9d\033\uff9d\034\uff9d" +
    "\035\uff9d\036\uff9d\042\uff9d\044\uff9d\045\uff9d\046\uff9d\047" +
    "\uff9d\050\uff9d\051\uff9d\052\uff9d\053\uff9d\054\uff9d\055\uff9d" +
    "\056\uff9d\057\uff9d\060\uff9d\072\uff9d\073\uff9d\074\uff9d\075" +
    "\uff9d\001\002\000\032\023\uff6e\045\uffbf\046\uffbf\047\uffbf" +
    "\050\uffbf\051\uffbf\052\uffbf\053\uffbf\054\uffbf\055\uffbf\056" +
    "\uffbf\074\uffbf\001\002\000\032\023\uff6d\045\uffbe\046\uffbe" +
    "\047\uffbe\050\uffbe\051\uffbe\052\uffbe\053\uffbe\054\uffbe\055" +
    "\uffbe\056\uffbe\074\uffbe\001\002\000\016\003\uff7c\033\uff7c" +
    "\057\136\060\135\072\uff7c\075\uff7c\001\002\000\060\003" +
    "\uffd7\010\uffd7\021\uffd7\033\uffd7\036\uffd7\042\uffd7\044\uffd7" +
    "\045\uffd7\046\uffd7\047\uffd7\050\uffd7\051\uffd7\052\uffd7\053" +
    "\uffd7\054\uffd7\055\uffd7\056\uffd7\057\uffd7\060\uffd7\072\uffd7" +
    "\073\uffd7\074\uffd7\075\uffd7\001\002\000\014\025\026\032" +
    "\075\036\033\041\027\043\025\001\002\000\060\003\uffd8" +
    "\010\uffd8\021\uffd8\033\uffd8\036\uffd8\042\uffd8\044\uffd8\045" +
    "\uffd8\046\uffd8\047\uffd8\050\uffd8\051\uffd8\052\uffd8\053\uffd8" +
    "\054\uffd8\055\uffd8\056\uffd8\057\uffd8\060\uffd8\072\uffd8\073" +
    "\uffd8\074\uffd8\075\uffd8\001\002\000\070\003\uff9c\010\uff9c" +
    "\011\uff9c\021\uff9c\032\uff9c\033\uff9c\034\uff9c\035\uff9c\036" +
    "\uff9c\042\uff9c\044\uff9c\045\uff9c\046\uff9c\047\uff9c\050\uff9c" +
    "\051\uff9c\052\uff9c\053\uff9c\054\uff9c\055\uff9c\056\uff9c\057" +
    "\uff9c\060\uff9c\072\uff9c\073\uff9c\074\uff9c\075\uff9c\001\002" +
    "\000\044\003\uff79\033\uff79\045\uff79\046\uff79\047\uff79\050" +
    "\uff79\051\uff79\052\uff79\053\uff79\054\064\055\063\056\065" +
    "\057\uff79\060\uff79\072\uff79\074\070\075\uff79\001\002\000" +
    "\010\003\uff7f\072\uff7f\075\uff7f\001\002\000\022\025\026" +
    "\031\053\036\033\037\055\040\061\041\027\043\025\071" +
    "\060\001\002\000\070\003\uff9b\010\uff9b\011\uff9b\021\uff9b" +
    "\032\uff9b\033\uff9b\034\uff9b\035\uff9b\036\uff9b\042\uff9b\044" +
    "\uff9b\045\uff9b\046\uff9b\047\uff9b\050\uff9b\051\uff9b\052\uff9b" +
    "\053\uff9b\054\uff9b\055\uff9b\056\uff9b\057\uff9b\060\uff9b\072" +
    "\uff9b\073\uff9b\074\uff9b\075\uff9b\001\002\000\014\054\064" +
    "\055\063\056\065\072\067\074\070\001\002\000\022\025" +
    "\uff96\031\uff96\036\uff96\037\uff96\040\uff96\041\uff96\043\uff96" +
    "\071\uff96\001\002\000\022\025\uff97\031\uff97\036\uff97\037" +
    "\uff97\040\uff97\041\uff97\043\uff97\071\uff97\001\002\000\022" +
    "\025\uff94\031\uff94\036\uff94\037\uff94\040\uff94\041\uff94\043" +
    "\uff94\071\uff94\001\002\000\022\025\026\031\053\036\033" +
    "\037\055\040\061\041\027\043\025\071\060\001\002\000" +
    "\060\003\uffd9\010\uffd9\021\uffd9\033\uffd9\036\uffd9\042\uffd9" +
    "\044\uffd9\045\uffd9\046\uffd9\047\uffd9\050\uffd9\051\uffd9\052" +
    "\uffd9\053\uffd9\054\uffd9\055\uffd9\056\uffd9\057\uffd9\060\uffd9" +
    "\072\uffd9\073\uffd9\074\uffd9\075\uffd9\001\002\000\022\025" +
    "\uff95\031\uff95\036\uff95\037\uff95\040\uff95\041\uff95\043\uff95" +
    "\071\uff95\001\002\000\060\003\uffd6\010\uffd6\021\uffd6\033" +
    "\uffd6\036\uffd6\042\uffd6\044\uffd6\045\uffd6\046\uffd6\047\uffd6" +
    "\050\uffd6\051\uffd6\052\uffd6\053\uffd6\054\064\055\063\056" +
    "\065\057\uffd6\060\uffd6\072\uffd6\073\uffd6\074\070\075\uffd6" +
    "\001\002\000\010\032\075\034\uffb4\035\uffb4\001\002\000" +
    "\004\032\075\001\002\000\004\033\124\001\002\000\022" +
    "\025\123\031\053\036\115\037\117\040\121\041\122\043" +
    "\116\071\060\001\002\000\006\034\077\035\101\001\002" +
    "\000\022\025\026\031\053\036\033\037\055\040\061\041" +
    "\027\043\025\071\103\001\002\000\004\035\102\001\002" +
    "\000\070\003\uffb9\010\uffb9\011\uffb9\021\uffb9\032\uffb9\033" +
    "\uffb9\034\uffb9\035\uffb9\036\uffb9\042\uffb9\044\uffb9\045\uffb9" +
    "\046\uffb9\047\uffb9\050\uffb9\051\uffb9\052\uffb9\053\uffb9\054" +
    "\uffb9\055\uffb9\056\uffb9\057\uffb9\060\uffb9\072\uffb9\073\uffb9" +
    "\074\uffb9\075\uffb9\001\002\000\070\003\uffb8\010\uffb8\011" +
    "\uffb8\021\uffb8\032\uffb8\033\uffb8\034\uffb8\035\uffb8\036\uffb8" +
    "\042\uffb8\044\uffb8\045\uffb8\046\uffb8\047\uffb8\050\uffb8\051" +
    "\uffb8\052\uffb8\053\uffb8\054\uffb8\055\uffb8\056\uffb8\057\uffb8" +
    "\060\uffb8\072\uffb8\073\uffb8\074\uffb8\075\uffb8\001\002\000" +
    "\022\025\026\031\053\036\033\037\055\040\061\041\027" +
    "\043\025\071\103\001\002\000\030\003\uffa0\011\uffa0\032" +
    "\uffa0\034\uffa0\035\uffa0\054\uffa0\055\uffa0\056\uffa0\072\uffa0" +
    "\073\uffa0\074\uffa0\001\002\000\030\003\uff9f\011\uff9f\032" +
    "\uff9f\034\uff9f\035\uff9f\054\uff9f\055\uff9f\056\uff9f\072\uff9f" +
    "\073\uff9f\074\uff9f\001\002\000\030\003\uff9e\011\uff9e\032" +
    "\uff9e\034\uff9e\035\uff9e\054\uff9e\055\uff9e\056\uff9e\072\uff9e" +
    "\073\uff9e\074\uff9e\001\002\000\014\035\uffaf\054\064\055" +
    "\063\056\065\074\070\001\002\000\022\025\026\031\053" +
    "\036\033\037\055\040\061\041\027\043\025\071\103\001" +
    "\002\000\030\003\uff98\011\uff98\032\uff98\034\uff98\035\uff98" +
    "\054\064\055\063\056\065\072\uff98\073\uff98\074\070\001" +
    "\002\000\014\054\064\055\063\056\065\072\113\074\070" +
    "\001\002\000\030\003\uff99\011\uff99\032\uff99\034\uff99\035" +
    "\uff99\054\uff99\055\uff99\056\uff99\072\uff99\073\uff99\074\uff99" +
    "\001\002\000\004\033\uffb1\001\002\000\034\023\uff6e\033" +
    "\uff6c\045\uffbf\046\uffbf\047\uffbf\050\uffbf\051\uffbf\052\uffbf" +
    "\053\uffbf\054\uffbf\055\uffbf\056\uffbf\074\uffbf\001\002\000" +
    "\034\023\uff6d\033\uff68\045\uffbe\046\uffbe\047\uffbe\050\uffbe" +
    "\051\uffbe\052\uffbe\053\uffbe\054\uffbe\055\uffbe\056\uffbe\074" +
    "\uffbe\001\002\000\032\033\uff6b\045\uff9c\046\uff9c\047\uff9c" +
    "\050\uff9c\051\uff9c\052\uff9c\053\uff9c\054\uff9c\055\uff9c\056" +
    "\uff9c\074\uff9c\001\002\000\004\033\uffb2\001\002\000\032" +
    "\033\uff6a\045\uff9b\046\uff9b\047\uff9b\050\uff9b\051\uff9b\052" +
    "\uff9b\053\uff9b\054\uff9b\055\uff9b\056\uff9b\074\uff9b\001\002" +
    "\000\032\033\uff69\045\uffbd\046\uffbd\047\uffbd\050\uffbd\051" +
    "\uffbd\052\uffbd\053\uffbd\054\uffbd\055\uffbd\056\uffbd\074\uffbd" +
    "\001\002\000\032\033\uff67\045\uffc0\046\uffc0\047\uffc0\050" +
    "\uffc0\051\uffc0\052\uffc0\053\uffc0\054\uffc0\055\uffc0\056\uffc0" +
    "\074\uffc0\001\002\000\022\025\026\031\053\036\033\037" +
    "\055\040\061\041\027\043\025\071\103\001\002\000\010" +
    "\032\uffb3\034\uffb3\035\uffb3\001\002\000\020\032\uffb0\034" +
    "\uffb0\035\uffb0\054\064\055\063\056\065\074\070\001\002" +
    "\000\006\034\077\035\131\001\002\000\004\035\132\001" +
    "\002\000\070\003\uffb7\010\uffb7\011\uffb7\021\uffb7\032\uffb7" +
    "\033\uffb7\034\uffb7\035\uffb7\036\uffb7\042\uffb7\044\uffb7\045" +
    "\uffb7\046\uffb7\047\uffb7\050\uffb7\051\uffb7\052\uffb7\053\uffb7" +
    "\054\uffb7\055\uffb7\056\uffb7\057\uffb7\060\uffb7\072\uffb7\073" +
    "\uffb7\074\uffb7\075\uffb7\001\002\000\070\003\uffb6\010\uffb6" +
    "\011\uffb6\021\uffb6\032\uffb6\033\uffb6\034\uffb6\035\uffb6\036" +
    "\uffb6\042\uffb6\044\uffb6\045\uffb6\046\uffb6\047\uffb6\050\uffb6" +
    "\051\uffb6\052\uffb6\053\uffb6\054\uffb6\055\uffb6\056\uffb6\057" +
    "\uffb6\060\uffb6\072\uffb6\073\uffb6\074\uffb6\075\uffb6\001\002" +
    "\000\006\034\uffb5\035\uffb5\001\002\000\022\025\026\031" +
    "\053\036\047\037\055\040\061\041\027\043\050\071\060" +
    "\001\002\000\022\025\uff5e\031\uff5e\036\uff5e\037\uff5e\040" +
    "\uff5e\041\uff5e\043\uff5e\071\uff5e\001\002\000\022\025\uff5f" +
    "\031\uff5f\036\uff5f\037\uff5f\040\uff5f\041\uff5f\043\uff5f\071" +
    "\uff5f\001\002\000\012\003\uff7d\033\uff7d\072\uff7d\075\uff7d" +
    "\001\002\000\022\025\uff61\031\uff61\036\uff61\037\uff61\040" +
    "\uff61\041\uff61\043\uff61\071\uff61\001\002\000\022\025\uff62" +
    "\031\uff62\036\uff62\037\uff62\040\uff62\041\uff62\043\uff62\071" +
    "\uff62\001\002\000\022\025\uff63\031\uff63\036\uff63\037\uff63" +
    "\040\uff63\041\uff63\043\uff63\071\uff63\001\002\000\022\025" +
    "\026\031\053\036\033\037\055\040\061\041\027\043\025" +
    "\071\060\001\002\000\022\025\uff60\031\uff60\036\uff60\037" +
    "\uff60\040\uff60\041\uff60\043\uff60\071\uff60\001\002\000\022" +
    "\025\uff64\031\uff64\036\uff64\037\uff64\040\uff64\041\uff64\043" +
    "\uff64\071\uff64\001\002\000\022\025\uff65\031\uff65\036\uff65" +
    "\037\uff65\040\uff65\041\uff65\043\uff65\071\uff65\001\002\000" +
    "\022\025\uff66\031\uff66\036\uff66\037\uff66\040\uff66\041\uff66" +
    "\043\uff66\071\uff66\001\002\000\016\003\uff7b\033\uff7b\057" +
    "\uff7b\060\uff7b\072\uff7b\075\uff7b\001\002\000\004\071\152" +
    "\001\002\000\020\004\014\025\160\036\167\037\154\040" +
    "\166\041\164\043\157\001\002\000\016\003\uff7a\033\uff7a" +
    "\057\uff7a\060\uff7a\072\uff7a\075\uff7a\001\002\000\034\011" +
    "\uff6b\012\uff6b\013\uff6b\014\uff6b\015\uff6b\017\uff6b\020\uff6b" +
    "\045\uff6b\057\uff6b\060\uff6b\072\uff6b\073\uff6b\075\uff6b\001" +
    "\002\000\004\072\252\001\002\000\012\025\026\036\033" +
    "\041\027\043\025\001\002\000\034\011\uff68\012\uff68\013" +
    "\uff68\014\uff68\015\uff68\017\uff68\020\uff68\045\uff68\057\uff68" +
    "\060\uff68\072\uff68\073\uff68\075\uff68\001\002\000\034\011" +
    "\uff67\012\uff67\013\uff67\014\uff67\015\uff67\017\uff67\020\uff67" +
    "\045\uff67\057\uff67\060\uff67\072\uff67\073\uff67\075\uff67\001" +
    "\002\000\004\072\uff77\001\002\000\006\072\uff6f\073\247" +
    "\001\002\000\004\072\uff76\001\002\000\034\011\uff69\012" +
    "\uff69\013\uff69\014\uff69\015\uff69\017\uff69\020\uff69\045\uff69" +
    "\057\uff69\060\uff69\072\uff69\073\uff69\075\uff69\001\002\000" +
    "\004\010\170\001\002\000\034\011\uff6a\012\uff6a\013\uff6a" +
    "\014\uff6a\015\uff6a\017\uff6a\020\uff6a\045\uff6a\057\uff6a\060" +
    "\uff6a\072\uff6a\073\uff6a\075\uff6a\001\002\000\034\011\uff6c" +
    "\012\uff6c\013\uff6c\014\uff6c\015\uff6c\017\uff6c\020\uff6c\045" +
    "\uff6c\057\uff6c\060\uff6c\072\uff6c\073\uff6c\075\uff6c\001\002" +
    "\000\004\036\uff85\001\002\000\004\036\211\001\002\000" +
    "\022\011\040\012\204\013\175\014\200\015\176\017\202" +
    "\020\173\072\uff75\001\002\000\004\036\211\001\002\000" +
    "\004\036\211\001\002\000\006\016\225\020\224\001\002" +
    "\000\004\016\222\001\002\000\024\011\ufff5\012\204\013" +
    "\175\014\200\015\176\017\202\020\173\072\ufff5\075\ufff5" +
    "\001\002\000\006\016\217\020\216\001\002\000\004\072" +
    "\uff74\001\002\000\004\020\215\001\002\000\006\011\040" +
    "\072\uff73\001\002\000\004\020\205\001\002\000\004\036" +
    "\211\001\002\000\024\011\ufff4\012\ufff4\013\ufff4\014\ufff4" +
    "\015\ufff4\017\ufff4\020\ufff4\072\ufff4\075\ufff4\001\002\000" +
    "\034\003\uff84\006\uff84\011\uff84\012\uff84\013\uff84\014\uff84" +
    "\015\uff84\017\uff84\020\uff84\022\uff84\072\uff84\073\uff84\075" +
    "\uff84\001\002\000\034\003\uff83\006\uff83\011\uff83\012\uff83" +
    "\013\uff83\014\uff83\015\uff83\017\uff83\020\uff83\022\uff83\072" +
    "\uff83\073\uff83\075\uff83\001\002\000\040\003\uff82\006\uff82" +
    "\011\uff82\012\uff82\013\uff82\014\uff82\015\uff82\017\uff82\020" +
    "\uff82\022\uff82\036\213\042\212\072\uff82\073\uff82\075\uff82" +
    "\001\002\000\034\003\uff80\006\uff80\011\uff80\012\uff80\013" +
    "\uff80\014\uff80\015\uff80\017\uff80\020\uff80\022\uff80\072\uff80" +
    "\073\uff80\075\uff80\001\002\000\034\003\uff81\006\uff81\011" +
    "\uff81\012\uff81\013\uff81\014\uff81\015\uff81\017\uff81\020\uff81" +
    "\022\uff81\072\uff81\073\uff81\075\uff81\001\002\000\004\072" +
    "\uff72\001\002\000\004\036\ufff0\001\002\000\004\036\uffee" +
    "\001\002\000\004\020\220\001\002\000\004\036\uffec\001" +
    "\002\000\010\011\ufff6\072\ufff6\075\ufff6\001\002\000\004" +
    "\020\223\001\002\000\004\036\uffeb\001\002\000\004\036" +
    "\uffef\001\002\000\004\020\226\001\002\000\004\036\uffed" +
    "\001\002\000\004\022\231\001\002\000\024\011\ufff1\012" +
    "\ufff1\013\ufff1\014\ufff1\015\ufff1\017\ufff1\020\ufff1\072\ufff1" +
    "\075\ufff1\001\002\000\016\025\160\036\167\037\154\040" +
    "\166\041\164\043\157\001\002\000\024\011\uffea\012\uffea" +
    "\013\uffea\014\uffea\015\uffea\017\uffea\020\uffea\072\uffea\075" +
    "\uffea\001\002\000\030\011\uffe8\012\uffe8\013\uffe8\014\uffe8" +
    "\015\uffe8\017\uffe8\020\uffe8\057\136\060\135\072\uffe8\075" +
    "\uffe8\001\002\000\004\045\235\001\002\000\016\025\160" +
    "\036\167\037\154\040\166\041\164\043\157\001\002\000" +
    "\030\011\uffe7\012\uffe7\013\uffe7\014\uffe7\015\uffe7\017\uffe7" +
    "\020\uffe7\057\uffe7\060\uffe7\072\uffe7\075\uffe7\001\002\000" +
    "\016\025\160\036\167\037\154\040\166\041\164\043\157" +
    "\001\002\000\024\011\uffe9\012\uffe9\013\uffe9\014\uffe9\015" +
    "\uffe9\017\uffe9\020\uffe9\072\uffe9\075\uffe9\001\002\000\026" +
    "\011\ufff3\012\ufff3\013\ufff3\014\ufff3\015\ufff3\017\ufff3\020" +
    "\ufff3\022\231\072\ufff3\075\ufff3\001\002\000\024\011\ufff2" +
    "\012\ufff2\013\ufff2\014\ufff2\015\ufff2\017\ufff2\020\ufff2\072" +
    "\ufff2\075\ufff2\001\002\000\026\011\uff86\012\uff86\013\uff86" +
    "\014\uff86\015\uff86\017\uff86\020\uff86\072\uff86\073\245\075" +
    "\uff86\001\002\000\024\011\uff88\012\uff88\013\uff88\014\uff88" +
    "\015\uff88\017\uff88\020\uff88\072\uff88\075\uff88\001\002\000" +
    "\004\036\211\001\002\000\024\011\uff87\012\uff87\013\uff87" +
    "\014\uff87\015\uff87\017\uff87\020\uff87\072\uff87\075\uff87\001" +
    "\002\000\016\025\160\036\167\037\154\040\166\041\164" +
    "\043\157\001\002\000\004\072\uff70\001\002\000\004\010" +
    "\uff71\001\002\000\016\003\uff78\033\uff78\057\uff78\060\uff78" +
    "\072\uff78\075\uff78\001\002\000\014\002\ufffb\003\ufffb\004" +
    "\ufffb\005\ufffb\007\ufffb\001\002\000\014\002\uffad\003\uffad" +
    "\004\uffad\005\uffad\007\uffad\001\002\000\014\002\uffae\003" +
    "\uffae\004\uffae\005\uffae\007\uffae\001\002\000\022\025\uff8e" +
    "\031\uff8e\036\uff8e\037\uff8e\040\uff8e\041\uff8e\043\uff8e\071" +
    "\uff8e\001\002\000\022\025\uff8f\031\uff8f\036\uff8f\037\uff8f" +
    "\040\uff8f\041\uff8f\043\uff8f\071\uff8f\001\002\000\022\025" +
    "\uff93\031\uff93\036\uff93\037\uff93\040\uff93\041\uff93\043\uff93" +
    "\071\uff93\001\002\000\022\025\uff8b\031\uff8b\036\uff8b\037" +
    "\uff8b\040\uff8b\041\uff8b\043\uff8b\071\uff8b\001\002\000\022" +
    "\025\uff8d\031\uff8d\036\uff8d\037\uff8d\040\uff8d\041\uff8d\043" +
    "\uff8d\071\uff8d\001\002\000\022\025\uff91\031\uff91\036\uff91" +
    "\037\uff91\040\uff91\041\uff91\043\uff91\071\uff91\001\002\000" +
    "\022\025\uff90\031\uff90\036\uff90\037\uff90\040\uff90\041\uff90" +
    "\043\uff90\071\uff90\001\002\000\022\025\026\031\053\036" +
    "\033\037\055\040\061\041\027\043\025\071\103\001\002" +
    "\000\022\025\uff92\031\uff92\036\uff92\037\uff92\040\uff92\041" +
    "\uff92\043\uff92\071\uff92\001\002\000\022\025\uff8c\031\uff8c" +
    "\036\uff8c\037\uff8c\040\uff8c\041\uff8c\043\uff8c\071\uff8c\001" +
    "\002\000\020\003\uffa2\011\uffa2\054\064\055\063\056\065" +
    "\073\uffa2\074\070\001\002\000\010\003\uffa1\011\uffa1\073" +
    "\uffa1\001\002\000\006\003\uffa8\006\uffa8\001\002\000\014" +
    "\002\uffaa\003\uffaa\004\uffaa\005\uffaa\007\uffaa\001\002\000" +
    "\014\002\uff89\003\uff89\004\uff89\005\uff89\007\uff89\001\002" +
    "\000\004\036\211\001\002\000\004\011\040\001\002\000" +
    "\004\075\253\001\002\000\014\002\uff8a\003\uff8a\004\uff8a" +
    "\005\uff8a\007\uff8a\001\002\000\004\002\001\001\002\000" +
    "\014\002\000\003\000\004\000\005\000\007\000\001\002" +
    "\000\022\011\040\012\204\013\175\014\200\015\176\017" +
    "\202\020\173\075\253\001\002\000\014\002\ufffa\003\ufffa" +
    "\004\ufffa\005\ufffa\007\ufffa\001\002\000\004\075\253\001" +
    "\002\000\006\011\040\075\253\001\002\000\004\075\253" +
    "\001\002\000\014\002\ufff8\003\ufff8\004\ufff8\005\ufff8\007" +
    "\ufff8\001\002\000\014\002\ufff7\003\ufff7\004\ufff7\005\ufff7" +
    "\007\ufff7\001\002\000\014\002\ufff9\003\ufff9\004\ufff9\005" +
    "\ufff9\007\ufff9\001\002\000\016\010\uffd4\021\uffd4\036\uffd4" +
    "\042\uffd4\044\uffd4\073\uffd4\001\002\000\004\071\377\001" +
    "\002\000\016\010\uffdd\021\uffdd\036\uffdd\042\uffdd\044\uffdd" +
    "\073\uffdd\001\002\000\006\010\uffe1\073\375\001\002\000" +
    "\016\010\uffd5\021\uffd5\036\uffd5\042\uffd5\044\uffd5\073\uffd5" +
    "\001\002\000\016\010\uffdf\021\371\036\367\042\364\044" +
    "\366\073\uffdf\001\002\000\004\010\uffe4\001\002\000\030" +
    "\025\026\026\326\027\314\030\323\031\053\036\033\037" +
    "\055\040\061\041\027\043\025\071\060\001\002\000\004" +
    "\071\343\001\002\000\004\010\uffe6\001\002\000\026\010" +
    "\uffde\021\uffde\036\uffde\042\uffde\044\uffde\054\064\055\063" +
    "\056\065\073\uffde\074\070\001\002\000\004\071\331\001" +
    "\002\000\016\010\uffd3\021\uffd3\036\uffd3\042\uffd3\044\uffd3" +
    "\073\uffd3\001\002\000\016\010\uffdc\021\uffdc\036\uffdc\042" +
    "\uffdc\044\uffdc\073\uffdc\001\002\000\016\024\332\025\335" +
    "\036\033\041\027\043\025\074\336\001\002\000\012\025" +
    "\342\036\033\041\027\043\025\001\002\000\006\072\uffc2" +
    "\073\uffc2\001\002\000\004\072\340\001\002\000\006\072" +
    "\uffc3\073\uffc3\001\002\000\004\072\337\001\002\000\016" +
    "\010\uffd1\021\uffd1\036\uffd1\042\uffd1\044\uffd1\073\uffd1\001" +
    "\002\000\016\010\uffd2\021\uffd2\036\uffd2\042\uffd2\044\uffd2" +
    "\073\uffd2\001\002\000\006\072\uffc5\073\uffc5\001\002\000" +
    "\006\072\uffc4\073\uffc4\001\002\000\004\037\344\001\002" +
    "\000\020\045\354\046\353\047\352\050\350\051\346\052" +
    "\345\053\351\001\002\000\004\037\uffc9\001\002\000\004" +
    "\037\uffca\001\002\000\004\037\355\001\002\000\004\037" +
    "\uffcb\001\002\000\004\037\uffc8\001\002\000\004\037\uffcc" +
    "\001\002\000\004\037\uffcd\001\002\000\004\037\uffce\001" +
    "\002\000\004\073\356\001\002\000\014\024\332\025\335" +
    "\036\033\041\027\043\025\001\002\000\004\073\360\001" +
    "\002\000\014\024\332\025\335\036\033\041\027\043\025" +
    "\001\002\000\004\072\362\001\002\000\004\021\363\001" +
    "\002\000\010\036\367\042\364\044\366\001\002\000\016" +
    "\010\uffbc\021\uffbc\036\uffbc\042\uffbc\044\uffbc\073\uffbc\001" +
    "\002\000\016\010\uffcf\021\uffcf\036\uffcf\042\uffcf\044\uffcf" +
    "\073\uffcf\001\002\000\016\010\uffba\021\uffba\036\uffba\042" +
    "\uffba\044\uffba\073\uffba\001\002\000\016\010\uffbb\021\uffbb" +
    "\036\uffbb\042\uffbb\044\uffbb\073\uffbb\001\002\000\004\010" +
    "\uffe5\001\002\000\010\036\367\042\364\044\366\001\002" +
    "\000\006\010\uffdb\073\uffdb\001\002\000\006\010\uffe0\073" +
    "\uffe0\001\002\000\006\010\uffda\073\uffda\001\002\000\030" +
    "\025\026\026\326\027\314\030\323\031\053\036\033\037" +
    "\055\040\061\041\027\043\025\071\060\001\002\000\004" +
    "\010\uffe2\001\002\000\004\037\u0100\001\002\000\004\073" +
    "\u0101\001\002\000\014\024\332\025\335\036\033\041\027" +
    "\043\025\001\002\000\004\072\u0106\001\002\000\006\072" +
    "\uffc6\073\u0104\001\002\000\014\024\332\025\335\036\033" +
    "\041\027\043\025\001\002\000\004\072\uffc7\001\002\000" +
    "\004\021\u0107\001\002\000\010\036\367\042\364\044\366" +
    "\001\002\000\016\010\uffd0\021\uffd0\036\uffd0\042\uffd0\044" +
    "\uffd0\073\uffd0\001\002" });
>>>>>>> release-0.3_card_53

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
<<<<<<< HEAD
    "\000\361\000\024\002\003\011\007\012\011\014\014\015" +
    "\004\066\006\067\016\071\017\102\015\001\001\000\032" +
    "\017\313\020\312\021\314\023\317\027\316\030\045\031" +
    "\033\054\315\056\323\057\053\060\042\072\051\001\001" +
    "\000\006\003\170\025\302\001\001\000\002\001\001\000" +
    "\002\001\001\000\022\002\003\012\301\014\014\015\004" +
    "\066\006\067\016\071\017\102\015\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\005\271\007" +
    "\207\010\206\001\001\000\004\070\020\001\001\000\012" +
    "\030\023\031\033\073\030\074\031\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\101\264\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\004\041\026\040\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\030\023\031" +
    "\033\073\035\074\031\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\013\254\001\001\000" +
    "\026\030\045\031\033\033\043\046\056\047\050\053\044" +
    "\056\055\057\053\060\042\072\051\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\051\141\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\050" +
    "\133\001\001\000\002\001\001\000\014\030\072\031\033" +
    "\061\075\062\071\064\073\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\100\065\001\001\000\002\001\001" +
    "\000\016\030\045\031\033\056\061\057\053\060\042\072" +
    "\051\001\001\000\002\001\001\000\004\100\065\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\016\030\045\031\033\056\070\057\053\060\042\072\051" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\100" +
    "\065\001\001\000\010\061\132\062\071\064\073\001\001" +
    "\000\010\061\126\062\071\064\073\001\001\000\004\065" +
    "\124\001\001\000\030\030\045\031\033\033\043\046\117" +
    "\047\050\052\113\053\044\056\055\057\053\060\042\072" +
    "\051\001\001\000\004\063\077\001\001\000\020\030\045" +
    "\031\033\060\042\072\105\075\106\076\103\077\104\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\020\030\045\031\033\060\042\072\105\075\111\076" +
    "\103\077\104\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\100\107\001\001\000\020\030" +
    "\045\031\033\060\042\072\105\075\110\076\103\077\104" +
    "\001\001\000\004\100\107\001\001\000\004\100\107\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\020" +
    "\030\045\031\033\060\042\072\105\075\125\076\103\077" +
    "\104\001\001\000\002\001\001\000\004\100\107\001\001" +
    "\000\004\063\127\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\026\030\045" +
    "\031\033\033\043\046\136\047\050\053\044\056\055\057" +
    "\053\060\042\072\051\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\020\030\045\031\033\053\147\056\055\057\053" +
    "\060\042\072\051\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\034\152\001\001\000\016\002" +
    "\155\016\164\035\154\036\161\037\162\052\160\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\030\250\031\033\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\003\170\025\171\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\005\242\006\243\007\207\010\206\001\001\000\014" +
    "\004\041\026\200\040\202\041\176\045\173\001\001\000" +
    "\010\005\240\007\207\010\206\001\001\000\010\005\226" +
    "\007\207\010\206\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\040\220\041\176\045\173\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\004" +
    "\041\026\213\001\001\000\002\001\001\000\010\005\205" +
    "\007\207\010\206\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\043\227" +
    "\001\001\000\002\001\001\000\010\042\232\044\231\052" +
    "\233\001\001\000\002\001\001\000\004\050\236\001\001" +
    "\000\002\001\001\000\004\052\235\001\001\000\002\001" +
    "\001\000\010\042\232\044\237\052\233\001\001\000\002" +
    "\001\001\000\004\043\241\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\005\242\006\245" +
    "\007\207\010\206\001\001\000\002\001\001\000\006\036" +
    "\247\052\160\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\020\030\045\031\033\060\042" +
    "\072\105\075\267\076\103\077\104\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\100\107\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\005\275\007\207\010\206\001\001\000\006" +
    "\004\041\026\276\001\001\000\004\013\277\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\016" +
    "\004\041\013\303\026\304\040\305\041\176\045\173\001" +
    "\001\000\002\001\001\000\004\013\311\001\001\000\010" +
    "\004\041\013\307\026\306\001\001\000\004\013\310\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\032\354\055\357\001\001\000\002\001\001\000\002" +
    "\001\001\000\032\017\313\020\312\021\314\023\317\027" +
    "\351\030\045\031\033\054\315\056\323\057\053\060\042" +
    "\072\051\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\100\065\001\001\000\002\001\001\000\006\022\330" +
    "\031\327\001\001\000\004\031\335\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\024\342\031\341\001\001\000\004" +
    "\031\347\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\032\360\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\032\017\313\020\312\021\314" +
    "\023\317\027\362\030\045\031\033\054\315\056\323\057" +
    "\053\060\042\072\051\001\001\000\002\001\001" });
=======
    "\000\u0106\000\024\002\003\011\007\012\011\014\014\015" +
    "\004\071\006\072\016\074\017\105\015\001\001\000\036" +
    "\017\315\020\314\021\327\022\316\024\312\026\326\032" +
    "\320\033\045\034\033\057\317\061\324\062\053\063\042" +
    "\075\051\001\001\000\006\003\170\030\302\001\001\000" +
    "\002\001\001\000\002\001\001\000\022\002\003\012\301" +
    "\014\014\015\004\071\006\072\016\074\017\105\015\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\005\271\007\206\010\207\001\001\000\004\073\020" +
    "\001\001\000\012\033\023\034\033\076\030\077\031\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\104\264" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\004\041\031\040\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\033\023\034\033\076\035\077\031\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\013" +
    "\254\001\001\000\026\033\045\034\033\036\043\051\056" +
    "\052\050\056\044\061\055\062\053\063\042\075\051\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\054\142" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\053\133\001\001\000\002\001\001\000\014" +
    "\033\072\034\033\064\075\065\071\067\073\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\103\065\001\001" +
    "\000\002\001\001\000\016\033\045\034\033\061\061\062" +
    "\053\063\042\075\051\001\001\000\002\001\001\000\004" +
    "\103\065\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\016\033\045\034\033\061\070\062\053" +
    "\063\042\075\051\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\103\065\001\001\000\010\064\132\065\071" +
    "\067\073\001\001\000\010\064\126\065\071\067\073\001" +
    "\001\000\004\070\124\001\001\000\030\033\045\034\033" +
    "\036\043\051\117\052\050\055\113\056\044\061\055\062" +
    "\053\063\042\075\051\001\001\000\004\066\077\001\001" +
    "\000\020\033\045\034\033\063\042\075\105\100\106\101" +
    "\103\102\104\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\020\033\045\034\033\063\042\075" +
    "\105\100\111\101\103\102\104\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\103\107\001" +
    "\001\000\020\033\045\034\033\063\042\075\105\100\110" +
    "\101\103\102\104\001\001\000\004\103\107\001\001\000" +
    "\004\103\107\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\020\033\045\034\033\063\042\075\105\100" +
    "\125\101\103\102\104\001\001\000\002\001\001\000\004" +
    "\103\107\001\001\000\004\066\127\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\026\033\045\034\033\036\043\051\136\052\050\056" +
    "\044\061\055\062\053\063\042\075\051\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\020\033\045" +
    "\034\033\056\147\061\055\062\053\063\042\075\051\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\037\152\001" +
    "\001\000\016\002\155\016\164\040\154\041\160\042\162" +
    "\055\161\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\033\250\034\033\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\003\170" +
    "\030\171\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\005\242\006\243\007\206\010\207" +
    "\001\001\000\014\004\041\031\200\043\202\044\176\050" +
    "\173\001\001\000\010\005\240\007\206\010\207\001\001" +
    "\000\010\005\226\007\206\010\207\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\043\220\044\176\050\173" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\004\041\031\213\001\001\000\002\001\001" +
    "\000\010\005\205\007\206\010\207\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\046\227\001\001\000\002\001\001\000\010\045" +
    "\232\047\231\055\233\001\001\000\002\001\001\000\004" +
    "\053\236\001\001\000\002\001\001\000\004\055\235\001" +
    "\001\000\002\001\001\000\010\045\232\047\237\055\233" +
    "\001\001\000\002\001\001\000\004\046\241\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\005\242\006\245\007\206\010\207\001\001\000\002\001" +
    "\001\000\006\041\247\055\161\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\020\033\045" +
    "\034\033\063\042\075\105\100\267\101\103\102\104\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\103\107" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\005\275\007\206\010\207" +
    "\001\001\000\006\004\041\031\276\001\001\000\004\013" +
    "\277\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\016\004\041\013\303\031\304\043\305\044" +
    "\176\050\173\001\001\000\002\001\001\000\004\013\311" +
    "\001\001\000\010\004\041\013\307\031\306\001\001\000" +
    "\004\013\310\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\035\371\060\372\001\001\000\002\001\001\000\036\017" +
    "\315\020\314\021\327\022\316\024\312\026\326\032\367" +
    "\033\045\034\033\057\317\061\324\062\053\063\042\075" +
    "\051\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\103\065\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\023\333\034\332\001\001\000\004" +
    "\034\340\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\027\346\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\023\356\034\332\001\001\000" +
    "\002\001\001\000\006\023\360\034\332\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\035\364\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\035\373\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\036" +
    "\017\315\020\314\021\327\022\316\024\312\026\326\032" +
    "\375\033\045\034\033\057\317\061\324\062\053\063\042" +
    "\075\051\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\023\u0102\025\u0101\034\332\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\023\u0102\025" +
    "\u0104\034\332\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\035\u0107\001\001\000\002\001\001" });
>>>>>>> release-0.3_card_53

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Cup_Rules_SQL$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Cup_Rules_SQL$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Cup_Rules_SQL$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



	// This list will store every error found in the syntax analysis process. SE -> Syntax errors
	public static LinkedList<TError> TableSE = new LinkedList<TError>();

	// This object has a list with all columns found and its table
	//public static ColumnEvalutator Columns = new ColumnEvaluator();

	public HashSet<String> Tables  = new HashSet<String>();
	public HashSet<String> Columns = new HashSet<String>();

	public  Scanner s;
  	public  int errors = 0, line, column;
  	public 	String the_error = "";
	public 	StringBuilder the_error_message = new StringBuilder();

	public int selects_read = 0;
	public int updates_read = 0;
	public int deletes_read = 0;


	public void clean_lists() {
		TableSE = new LinkedList<TError>();
	}

	/* This is the error handler */
	public void report_error(String message, Object info) {

        /* Create a StringBuilder called 'm' with the string 'Error' in it. */
        StringBuilder m = new StringBuilder("\n\n---- Error message: " + message + "\n");
   
        /* Check if the information passed to the method is the same
           type as the type java_cup.runtime.Symbol. */
        if (info instanceof java_cup.runtime.Symbol) {

        	// Uncomment when Analyzer can handle multiple errors
			//errors++;
			errors = 1;

            /* Declare a java_cup.runtime.Symbol object 's' with the
               information in the object info that is being typecasted
               as a java_cup.runtime.Symbol object. */
            java_cup.runtime.Symbol s = ((java_cup.runtime.Symbol) info);
   
            /* Check if the line number in the input is greater or
               equal to zero. */
            if (s.left >= 0 && s.right >= 0) {

            	
				the_error = (s.value == null) ? "Empty" : s.value.toString();
				//the_error = s.value.toString();
                
                m.append("--> Unexpected : " + the_error );
                m.append(" at line: "+(s.left));  
                m.append(", column: "+(s.right)); 

				the_error_message = m;
            }
        }
   
        /* Print the contents of the StringBuilder 'm', which contains
           an error message, out on a line. */
        System.err.println(m);
    }
   
    /* Change the method report_fatal_error so when it reports a fatal
       error it will display the line and column number of where the
       fatal error occurred in the input as well as the reason for the
       fatal error which is passed into the method in the object
       'message' and then exit.*/

    public void report_fatal_error(String message, Object info) {
        //report_error(message, info);
		//the_error_message.append("\n\n---- Unknown syntax error ლ(ಠ_ಠლ)" + "\n");
		the_error_message.append("\n\n---- Unknown syntax error." + "\n");
    }
	


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$Cup_Rules_SQL$actions {


	

  private final Cup_Rules_SQL parser;

  /** Constructor */
  CUP$Cup_Rules_SQL$actions(Cup_Rules_SQL parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$Cup_Rules_SQL$do_action_part00000000(
    int                        CUP$Cup_Rules_SQL$act_num,
    java_cup.runtime.lr_parser CUP$Cup_Rules_SQL$parser,
    java.util.Stack            CUP$Cup_Rules_SQL$stack,
    int                        CUP$Cup_Rules_SQL$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Cup_Rules_SQL$result;

      /* select the action based on the action number */
      switch (CUP$Cup_Rules_SQL$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= statement_group EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)).value;
		RESULT = start_val;
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Cup_Rules_SQL$parser.done_parsing();
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // statement_group ::= statement_group statement 
            {
              Object RESULT =null;
		 System.out.println("statement_group ::= statement_group statement"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("statement_group",7, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // statement_group ::= statement 
            {
              Object RESULT =null;
		 System.out.println("statement_group ::= statement"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("statement_group",7, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // statement ::= select_s 
            {
              Object RESULT =null;
		 System.out.println("statement ::= select_s"); 	
						   selects_read++; 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("statement",8, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // statement ::= delete_s 
            {
              Object RESULT =null;
		 System.out.println("statement ::= delete_s");
						   deletes_read++; 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("statement",8, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // statement ::= update_s 
            {
              Object RESULT =null;
		 System.out.println("statement ::= update_s"); 
						   updates_read++; 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("statement",8, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // _semicolon ::= _SEMCOL2 
            {
              Object RESULT =null;
		 System.out.println("_semicolon ::= _SEMICOL2"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_semicolon",9, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // select_s ::= select_part from_part _semicolon 
            {
              Object RESULT =null;
		 System.out.println("select_s ::= select_part from_part"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("select_s",10, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // select_s ::= select_part from_part where_part _semicolon 
            {
              Object RESULT =null;
		 System.out.println("select_s ::= select_part from_part where_part"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("select_s",10, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // select_s ::= select_part from_part joins_part _semicolon 
            {
              Object RESULT =null;
		 System.out.println("select_s ::= select_part from_part joins_part"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("select_s",10, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // select_s ::= select_part from_part joins_part where_part _semicolon 
            {
              Object RESULT =null;
		 System.out.println("select_s ::= select_part from_part joins_part where_part"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("select_s",10, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-4)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // joins_part ::= join_p joins_part 
            {
              Object RESULT =null;
		 System.out.println("joins_part ::= join_p joins_part"); 
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("joins_part",30, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("joins_part",33, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // joins_part ::= join_p 
            {
              Object RESULT =null;
		 System.out.println("joins_part ::= join_p"); 
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("joins_part",30, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("joins_part",33, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // join_p ::= NATURAL JOIN table_name 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_p",31, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_p",34, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // join_p ::= JOIN table_name 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_p",31, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_p",34, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // join_p ::= JOIN table_name join_cond 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_p",31, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_p",34, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // join_p ::= join table_name join_cond 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_p",31, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_p",34, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // join ::= INNER JOIN 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join",35, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join",38, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // join ::= LEFT JOIN 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join",35, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join",38, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // join ::= RIGHT JOIN 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join",35, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join",38, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // join ::= LEFT OUTER JOIN 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join",35, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join",38, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // join ::= RIGHT OUTER JOIN 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join",35, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join",38, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // join ::= FULL OUTER JOIN 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join",35, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join",38, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // join_cond ::= ON join_c 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_cond",33, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_cond",36, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // join_c ::= join_on log_oper join_c 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_c",34, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_c",37, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // join_c ::= join_on 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_c",34, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_c",37, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // join_on ::= element _EQU element 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_on",32, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("join_on",35, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // select_part ::= _select _STAR 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("select_part",11, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // select_part ::= _select DISTINCT cols 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("select_part",11, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // select_part ::= _select cols 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("select_part",11, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // _select ::= SELECT 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_select",0, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // cols ::= col_el _COMMA cols 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cols",21, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cols",24, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // cols ::= col_el 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cols",21, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cols",24, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // col_el ::= c_el c_ali 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("col_el",13, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // col_el ::= c_el 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("col_el",13, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // c_el ::= mix_exp 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("c_el",42, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("c_el",45, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // c_el ::= aggregates 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("c_el",42, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("c_el",45, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // c_el ::= logicalFunctions 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("c_ali",43, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("c_el",45, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // c_ali ::= col_ali 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("c_ali",43, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("c_ali",46, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // c_ali ::= AS col_ali 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("mix_exp",44, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("c_ali",46, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // mix_exp ::= _OPENPAR mix_exp _CLOSEPAR 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("mix_exp",44, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("mix_exp",47, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // mix_exp ::= m_exp 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("mix_exp",44, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("mix_exp",47, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // mix_exp ::= ari_value 
            {
              Object RESULT =null;

<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("m_exp",45, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("mix_exp",47, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // m_exp ::= mix_exp _ari_opr mix_exp 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("m_exp",48, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // aggregates ::= agg_count 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("aggregates",14, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 44: // aggregates ::= agg_avg 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("aggregates",14, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 45: // logicalFunctions ::= logFunc_choose 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("logicalFunctions",15, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 45: // agg_count ::= COUNT _OPENPAR count_exp _CLOSEPAR 
=======
          case 46: // logicalFunctions ::= logFunc_iif 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("logicalFunctions",15, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // agg_count ::= COUNT _OPENPAR count_exp _CLOSEPAR 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("agg_count",16, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // agg_count ::= COUNT _OPENPAR _STAR _CLOSEPAR 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("agg_count",16, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // logFunc_choose ::= CHOOSE _OPENPAR INTEGER _COMMA choose_exp _CLOSEPAR AS col_ali 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("logFunc_choose",18, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-7)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // logFunc_iif ::= IIF _OPENPAR INTEGER iif_exp INTEGER _COMMA count_exp _COMMA count_exp _CLOSEPAR AS col_ali 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("logFunc_iif",20, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-11)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // iif_exp ::= _EQU 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("iif_exp",21, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // iif_exp ::= _GT 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("iif_exp",21, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // iif_exp ::= _LT 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("iif_exp",21, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // iif_exp ::= _LET 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("iif_exp",21, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // iif_exp ::= _GET 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("iif_exp",21, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // iif_exp ::= _DIFF 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("iif_exp",21, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // iif_exp ::= _DIFF2 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("iif_exp",21, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // choose_exp ::= count_exp _COMMA choose_exp 
>>>>>>> release-0.3_card_53
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("choose_exp",19, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 46: // agg_count ::= COUNT _OPENPAR _STAR _CLOSEPAR 
=======
          case 59: // choose_exp ::= count_exp 
>>>>>>> release-0.3_card_53
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("choose_exp",19, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 47: // agg_avg ::= AVG _OPENPAR avg_exp _CLOSEPAR 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("agg_avg",17, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // agg_avg ::= AVG _OPENPAR _STAR _CLOSEPAR 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("agg_avg",17, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // count_exp ::= DISTINCT cl 
=======
          case 60: // count_exp ::= DISTINCT cl 
>>>>>>> release-0.3_card_53
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("count_exp",17, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 50: // count_exp ::= DISTINCT NULL 
=======
          case 61: // count_exp ::= DISTINCT NULL 
>>>>>>> release-0.3_card_53
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("count_exp",17, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 51: // count_exp ::= NULL 
=======
          case 62: // count_exp ::= NULL 
>>>>>>> release-0.3_card_53
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("count_exp",17, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 52: // count_exp ::= cl 
=======
          case 63: // count_exp ::= cl 
>>>>>>> release-0.3_card_53
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("count_exp",17, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 53: // avg_exp ::= DISTINCT cl 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("avg_exp",18, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // avg_exp ::= DISTINCT NULL 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("avg_exp",18, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // avg_exp ::= NULL 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("avg_exp",18, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // avg_exp ::= cl 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("avg_exp",18, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // col ::= cl 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("col",22, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 64: // col ::= cl 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("col",25, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 58: // col ::= NULL 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("col",22, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 65: // col ::= NULL 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("col",25, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 59: // cl ::= IDENTIFIER 
=======
          case 66: // cl ::= IDENTIFIER 
>>>>>>> release-0.3_card_53
            {
              Object RESULT =null;
		int col1left = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).left;
		int col1right = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).right;
		Object col1 = (Object)((java_cup.runtime.Symbol) CUP$Cup_Rules_SQL$stack.peek()).value;
		 Columns.add(col1 + ""); 
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cl",23, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cl",26, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 60: // cl ::= TABDOTCOL 
=======
          case 67: // cl ::= TABDOTCOL 
>>>>>>> release-0.3_card_53
            {
              Object RESULT =null;
		int col1left = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).left;
		int col1right = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).right;
		Object col1 = (Object)((java_cup.runtime.Symbol) CUP$Cup_Rules_SQL$stack.peek()).value;
		 Columns.add(col1 + ""); 
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cl",23, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cl",26, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 61: // cl ::= LITERAL_STRING 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cl",23, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 68: // cl ::= LITERAL_STRING 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cl",26, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 62: // col_ali ::= QTABLENAME 
=======
          case 69: // col_ali ::= QTABLENAME 
>>>>>>> release-0.3_card_53
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Cup_Rules_SQL$stack.peek()).value;
		 /*Tables.add(t+"");*/ 
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("col_ali",24, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("col_ali",27, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 63: // col_ali ::= IDENTIFIER 
=======
          case 70: // col_ali ::= IDENTIFIER 
>>>>>>> release-0.3_card_53
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Cup_Rules_SQL$stack.peek()).value;
		 /*Tables.add(t+"");*/ 
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("col_ali",24, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("col_ali",27, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 64: // col_ali ::= QCOLALIAS 
=======
          case 71: // col_ali ::= QCOLALIAS 
>>>>>>> release-0.3_card_53
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Cup_Rules_SQL$stack.peek()).value;
		 /*Tables.add(t+"");*/ 
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("col_ali",24, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("col_ali",27, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 65: // case_exp ::= CASE case_rules END 
            {
              Object RESULT =null;
		 System.out.println("case_exp ::= CASE case_rules END"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_exp",46, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 72: // case_exp ::= CASE case_rules END 
            {
              Object RESULT =null;
		 System.out.println("case_exp ::= CASE case_rules END"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_exp",49, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 66: // case_exp ::= CASE case_rules case_else END 
            {
              Object RESULT =null;
		 System.out.println("case_exp ::= CASE case_rules case_else END"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_exp",46, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 73: // case_exp ::= CASE case_rules case_else END 
            {
              Object RESULT =null;
		 System.out.println("case_exp ::= CASE case_rules case_else END"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_exp",49, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 67: // case_exp ::= CASE col case_rules END 
            {
              Object RESULT =null;
		 System.out.println("case_exp ::= CASE col case_rules END"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_exp",46, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 74: // case_exp ::= CASE col case_rules END 
            {
              Object RESULT =null;
		 System.out.println("case_exp ::= CASE col case_rules END"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_exp",49, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 68: // case_exp ::= CASE col case_rules case_else END 
            {
              Object RESULT =null;
		 System.out.println("case_exp ::= CASE col case_rules case_else END"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_exp",46, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-4)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 75: // case_exp ::= CASE col case_rules case_else END 
            {
              Object RESULT =null;
		 System.out.println("case_exp ::= CASE col case_rules case_else END"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_exp",49, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-4)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 69: // case_rules ::= case_rul case_rules 
            {
              Object RESULT =null;
		 System.out.println("case_rules ::= case_rul case_rules"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_rules",47, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 76: // case_rules ::= case_rul case_rules 
            {
              Object RESULT =null;
		 System.out.println("case_rules ::= case_rul case_rules"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_rules",50, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 70: // case_rules ::= case_rul 
            {
              Object RESULT =null;
		 System.out.println("case_rules ::= case_rul"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_rules",47, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 77: // case_rules ::= case_rul 
            {
              Object RESULT =null;
		 System.out.println("case_rules ::= case_rul"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_rules",50, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 71: // case_rul ::= case_cond case_act 
            {
              Object RESULT =null;
		 System.out.println("case_rul ::= WHEN case_cond THEN case_act"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_rul",48, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 78: // case_rul ::= case_cond case_act 
            {
              Object RESULT =null;
		 System.out.println("case_rul ::= WHEN case_cond THEN case_act"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_rul",51, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 72: // case_cond ::= WHEN w_condition 
            {
              Object RESULT =null;
		 System.out.println("case_cond ::= w_condition"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_cond",50, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 79: // case_cond ::= WHEN w_condition 
            {
              Object RESULT =null;
		 System.out.println("case_cond ::= w_condition"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_cond",53, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 73: // case_cond ::= WHEN element 
            {
              Object RESULT =null;
		 System.out.println("case_cond ::= element"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_cond",50, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 80: // case_cond ::= WHEN element 
            {
              Object RESULT =null;
		 System.out.println("case_cond ::= element"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_cond",53, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 74: // case_act ::= THEN ari_exp 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_act",51, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 81: // case_act ::= THEN ari_exp 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_act",54, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 75: // case_else ::= ELSE ari_exp 
            {
              Object RESULT =null;
		 System.out.println("case_else ::= ELSE ari_exp"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_else",49, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 82: // case_else ::= ELSE ari_exp 
            {
              Object RESULT =null;
		 System.out.println("case_else ::= ELSE ari_exp"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("case_else",52, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 76: // update_s ::= update_part _set set_exp_list where_part _semicolon 
            {
              Object RESULT =null;
		 System.out.println("update_s	::= update_part _set set_cols where_part _semicolon"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_s",52, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-4)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 83: // update_s ::= update_part _set set_exp_list where_part _semicolon 
            {
              Object RESULT =null;
		 System.out.println("update_s	::= update_part _set set_cols where_part _semicolon"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_s",55, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-4)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 77: // update_s ::= update_part _set set_exp_list where_part error 
=======
          case 84: // update_s ::= update_part _set set_exp_list where_part error 
>>>>>>> release-0.3_card_53
            {
              Object RESULT =null;
		 TError errors_found = new TError("",0,0,"Syntax Error","Invalid UPDATE section. Missing semicolon (;).");
				  	  	   TableSE.add(errors_found);
						   System.out.println("update_s	::= update_part _set set_cols where_part errorerror.\nMissing semicolon on UPDATE."); 
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_s",52, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-4)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_s",55, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-4)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 78: // update_s ::= update_part _set set_exp_list error 
=======
          case 85: // update_s ::= update_part _set set_exp_list error 
>>>>>>> release-0.3_card_53
            {
              Object RESULT =null;
		 TError errors_found = new TError("",0,0,"Syntax Error","UPDATE error after set of columns.");
				  	  	   TableSE.add(errors_found);
						   System.out.println("update_s	::= update_part _set set_cols error"); 
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_s",52, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_s",55, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 79: // update_s ::= update_part error 
=======
          case 86: // update_s ::= update_part error 
>>>>>>> release-0.3_card_53
            {
              Object RESULT =null;
		 TError errors_found = new TError("",0,0,"Syntax Error","Incomplete UPDATE.");
				  	  	   TableSE.add(errors_found);
						   System.out.println("update_s	::= update_part error"); 
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_s",52, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_s",55, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 80: // update_s ::= _update error 
=======
          case 87: // update_s ::= _update error 
>>>>>>> release-0.3_card_53
            {
              Object RESULT =null;
		 TError errors_found = new TError("",0,0,"Syntax Error","Invalid UPDATE.");
				  	  	   TableSE.add(errors_found);
						   System.out.println("update_s	::= _update error"); 
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_s",52, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_s",55, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 81: // _set ::= SET 
            {
              Object RESULT =null;
		 System.out.println("_set ::= SET"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_set",54, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 88: // _set ::= SET 
            {
              Object RESULT =null;
		 System.out.println("_set ::= SET"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_set",57, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 82: // update_part ::= _update table_name 
            {
              Object RESULT =null;
		 System.out.println("update_part ::= _update table_name"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_part",55, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 89: // update_part ::= _update table_name 
            {
              Object RESULT =null;
		 System.out.println("update_part ::= _update table_name"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_part",58, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 83: // update_part ::= error 
=======
          case 90: // update_part ::= error 
>>>>>>> release-0.3_card_53
            {
              Object RESULT =null;
		 TError errors_found = new TError("",0,0,"Syntax Error","Invalid UPDATE.");
				  	  	   TableSE.add(errors_found); 
						   System.out.println("update_part ::= _update table_name"); 
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_part",55, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("update_part",58, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 84: // _update ::= UPDATE 
            {
              Object RESULT =null;
		 System.out.println("_update ::= UPDATE"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_update",53, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 91: // _update ::= UPDATE 
            {
              Object RESULT =null;
		 System.out.println("_update ::= UPDATE"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_update",56, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 85: // set_exp_list ::= set_exp _COMMA set_exp_list 
            {
              Object RESULT =null;
		 System.out.println("set_exp_list	::= set_exp _COMMA set_exp_list "); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("set_exp_list",57, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 92: // set_exp_list ::= set_exp _COMMA set_exp_list 
            {
              Object RESULT =null;
		 System.out.println("set_exp_list	::= set_exp _COMMA set_exp_list "); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("set_exp_list",60, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 86: // set_exp_list ::= set_exp 
            {
              Object RESULT =null;
		 System.out.println("set_exp_list	::= set_exp "); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("set_exp_list",57, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 93: // set_exp_list ::= set_exp 
            {
              Object RESULT =null;
		 System.out.println("set_exp_list	::= set_exp "); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("set_exp_list",60, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 87: // set_exp_list ::= error 
=======
          case 94: // set_exp_list ::= error 
>>>>>>> release-0.3_card_53
            {
              Object RESULT =null;
		 TError errors_found = new TError("",0,0,"Syntax Error","Invalid set of columns in UPDATE");
				  	  	   TableSE.add(errors_found); 
						   System.out.println("set_cols	::=	error"); 
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("set_exp_list",57, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("set_exp_list",60, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 88: // set_exp ::= col _asig_opr ari_exp 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("set_exp",58, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 95: // set_exp ::= col _asig_opr ari_exp 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("set_exp",61, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 89: // set_exp ::= col _EQU LITERAL_STRING 
            {
              Object RESULT =null;
		 System.out.println("set_exp ::= col _EQU LITERAL_STRING"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("set_exp",58, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 96: // set_exp ::= col _EQU LITERAL_STRING 
            {
              Object RESULT =null;
		 System.out.println("set_exp ::= col _EQU LITERAL_STRING"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("set_exp",61, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 90: // ari_exp ::= par_exp 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_exp",59, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 97: // ari_exp ::= par_exp 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_exp",62, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 91: // ari_exp ::= exp 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_exp",59, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 98: // ari_exp ::= exp 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_exp",62, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 92: // ari_exp ::= ari_value 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_exp",59, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 99: // ari_exp ::= ari_value 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_exp",62, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 93: // ari_value ::= col 
            {
              Object RESULT =null;
		 System.out.println("ari_value ::= col"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_value",56, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 100: // ari_value ::= col 
            {
              Object RESULT =null;
		 System.out.println("ari_value ::= col"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_value",59, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 94: // ari_value ::= INTEGER 
            {
              Object RESULT =null;
		 System.out.println("ari_value ::= INTEGER"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_value",56, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 101: // ari_value ::= INTEGER 
            {
              Object RESULT =null;
		 System.out.println("ari_value ::= INTEGER"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_value",59, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 95: // ari_value ::= REAL 
            {
              Object RESULT =null;
		 System.out.println("ari_value ::= REAL"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_value",56, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 102: // ari_value ::= REAL 
            {
              Object RESULT =null;
		 System.out.println("ari_value ::= REAL"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_value",59, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 96: // ari_value ::= case_exp 
            {
              Object RESULT =null;
		 System.out.println("ari_value ::= case_exp"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_value",56, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 103: // ari_value ::= case_exp 
            {
              Object RESULT =null;
		 System.out.println("ari_value ::= case_exp"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("ari_value",59, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 97: // par_exp ::= _OPENPAR ari_exp _CLOSEPAR 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("par_exp",60, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 104: // par_exp ::= _OPENPAR ari_exp _CLOSEPAR 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("par_exp",63, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 98: // exp ::= ari_exp _ari_opr ari_exp 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("exp",61, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 105: // exp ::= ari_exp _ari_opr ari_exp 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("exp",64, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 99: // _ari_opr ::= _PLUS 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_ari_opr",62, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 106: // _ari_opr ::= _PLUS 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_ari_opr",65, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 100: // _ari_opr ::= _MINUS 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_ari_opr",62, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 107: // _ari_opr ::= _MINUS 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_ari_opr",65, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 101: // _ari_opr ::= _STAR 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_ari_opr",62, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 108: // _ari_opr ::= _STAR 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_ari_opr",65, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 102: // _ari_opr ::= _DIVIDE 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_ari_opr",62, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 109: // _ari_opr ::= _DIVIDE 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_ari_opr",65, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 103: // _asig_opr ::= _EQU 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",63, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 110: // _asig_opr ::= _EQU 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",66, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 104: // _asig_opr ::= _PLUSEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",63, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 111: // _asig_opr ::= _PLUSEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",66, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 105: // _asig_opr ::= _MINUSEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",63, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 112: // _asig_opr ::= _MINUSEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",66, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 106: // _asig_opr ::= _TIMESEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",63, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 113: // _asig_opr ::= _TIMESEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",66, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 107: // _asig_opr ::= _DIVIDEEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",63, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 114: // _asig_opr ::= _DIVIDEEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",66, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 108: // _asig_opr ::= _MODEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",63, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 115: // _asig_opr ::= _MODEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",66, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 109: // _asig_opr ::= _ANDEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",63, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 116: // _asig_opr ::= _ANDEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",66, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 110: // _asig_opr ::= _POWEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",63, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 117: // _asig_opr ::= _POWEQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",66, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 111: // _asig_opr ::= _OREQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",63, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 118: // _asig_opr ::= _OREQ 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_asig_opr",66, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 112: // delete_s ::= DELETE FROM table_name where_part _semicolon 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("delete_s",64, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-4)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 119: // delete_s ::= DELETE FROM table_name where_part _semicolon 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("delete_s",67, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-4)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 113: // delete_s ::= DELETE error 
=======
          case 120: // delete_s ::= DELETE error 
>>>>>>> release-0.3_card_53
            {
              Object RESULT =null;
		 TError errors_found = new TError("",0,0,"Syntax Error","Invalid DELETE statement.");
				  	  			 		TableSE.add(errors_found);
										System.out.println("value ::= LITERAL_STRING"); 
<<<<<<< HEAD
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("delete_s",64, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("delete_s",67, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 114: // from_part ::= _from table_name_mult 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("from_part",19, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 121: // from_part ::= _from table_name_mult 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("from_part",22, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 115: // table_name_mult ::= table_name _COMMA table_name_mult 
=======
          case 122: // table_name_mult ::= table_name _COMMA table_name_mult 
>>>>>>> release-0.3_card_53
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("table_name_mult",4, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 116: // table_name_mult ::= table_name 
=======
          case 123: // table_name_mult ::= table_name 
>>>>>>> release-0.3_card_53
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("table_name_mult",4, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 117: // _from ::= FROM 
=======
          case 124: // _from ::= FROM 
>>>>>>> release-0.3_card_53
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_from",1, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 118: // table_name ::= tab 
=======
          case 125: // table_name ::= tab 
>>>>>>> release-0.3_card_53
            {
              Object RESULT =null;
		 System.out.println("table_name ::= tab"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("table_name",3, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 119: // table_name ::= tab_ali 
=======
          case 126: // table_name ::= tab_ali 
>>>>>>> release-0.3_card_53
            {
              Object RESULT =null;
		 System.out.println("table_name ::= tab_ali"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("table_name",3, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 120: // tab ::= IDENTIFIER 
=======
          case 127: // tab ::= IDENTIFIER 
>>>>>>> release-0.3_card_53
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Cup_Rules_SQL$stack.peek()).value;
		 Tables.add(id+"");
						   System.out.println("tab ::= IDENTIFIER"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("tab",5, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 121: // tab_ali ::= IDENTIFIER IDENTIFIER 
=======
          case 128: // tab_ali ::= IDENTIFIER IDENTIFIER 
>>>>>>> release-0.3_card_53
            {
              Object RESULT =null;
		int id1left = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)).left;
		int id1right = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)).right;
		Object id1 = (Object)((java_cup.runtime.Symbol) CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)).value;
		int id2left = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).left;
		int id2right = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).right;
		Object id2 = (Object)((java_cup.runtime.Symbol) CUP$Cup_Rules_SQL$stack.peek()).value;
		 System.out.println("tab_ali ::= IDENTIFIER IDENTIFIER");	
						   Tables.add(id1+""); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("tab_ali",6, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 122: // tab_ali ::= IDENTIFIER QTABLENAME 
=======
          case 129: // tab_ali ::= IDENTIFIER QTABLENAME 
>>>>>>> release-0.3_card_53
            {
              Object RESULT =null;
		int id1left = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)).left;
		int id1right = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)).right;
		Object id1 = (Object)((java_cup.runtime.Symbol) CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)).value;
		int id2left = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).left;
		int id2right = ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()).right;
		Object id2 = (Object)((java_cup.runtime.Symbol) CUP$Cup_Rules_SQL$stack.peek()).value;
		 System.out.println("tab_ali ::= IDENTIFIER QTABLENAME"); 
						   Tables.add(id1+""); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("tab_ali",6, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 123: // where_part ::= _where w_condition 
            {
              Object RESULT =null;
		 System.out.println("where_part ::= _where w_condition"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("where_part",20, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 130: // where_part ::= _where w_condition 
            {
              Object RESULT =null;
		 System.out.println("where_part ::= _where w_condition"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("where_part",23, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 124: // _where ::= WHERE 
=======
          case 131: // _where ::= WHERE 
>>>>>>> release-0.3_card_53
            {
              Object RESULT =null;
		 System.out.println("_where ::= WHERE"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("_where",2, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 125: // w_condition ::= cond log_oper w_condition 
            {
              Object RESULT =null;
		 System.out.println("w_condition ::= cond log_oper w_condition"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("w_condition",36, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 132: // w_condition ::= cond log_oper w_condition 
            {
              Object RESULT =null;
		 System.out.println("w_condition ::= cond log_oper w_condition"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("w_condition",39, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 126: // w_condition ::= cond 
            {
              Object RESULT =null;
		 System.out.println("w_condition ::= cond"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("w_condition",36, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 133: // w_condition ::= cond 
            {
              Object RESULT =null;
		 System.out.println("w_condition ::= cond"); 
              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("w_condition",39, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 127: // cond ::= cond_el cmp_oper cond_el 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cond",37, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 134: // cond ::= cond_el cmp_oper cond_el 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cond",40, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 128: // cond ::= element_in IN in_list 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cond",37, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 135: // cond ::= element_in IN in_list 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cond",40, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 129: // cond_el ::= mix_exp 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cond_el",41, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 136: // cond_el ::= mix_exp 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cond_el",44, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 130: // in_list ::= _OPENPAR in_exp _CLOSEPAR 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_list",26, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 137: // in_list ::= _OPENPAR in_exp _CLOSEPAR 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_list",29, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 131: // in_exp ::= in_array 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_exp",27, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 138: // in_exp ::= in_array 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_exp",30, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 132: // in_exp ::= in_subquery 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_exp",27, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 139: // in_exp ::= in_subquery 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_exp",30, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 133: // in_subquery ::= select_part_sub from_part 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_subquery",29, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 140: // in_subquery ::= select_part_sub from_part 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_subquery",32, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 134: // in_subquery ::= select_part_sub from_part where_part 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_subquery",29, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 141: // in_subquery ::= select_part_sub from_part where_part 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_subquery",32, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 135: // in_subquery ::= select_part_sub from_part joins_part 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_subquery",29, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 142: // in_subquery ::= select_part_sub from_part joins_part 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_subquery",32, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 136: // in_subquery ::= select_part_sub from_part joins_part where_part 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_subquery",29, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 143: // in_subquery ::= select_part_sub from_part joins_part where_part 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_subquery",32, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-3)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 137: // select_part_sub ::= _select col 
=======
          case 144: // select_part_sub ::= _select col 
>>>>>>> release-0.3_card_53
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("select_part_sub",12, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-1)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 138: // in_array ::= element _COMMA in_array 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_array",28, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 145: // in_array ::= element _COMMA in_array 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_array",31, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.elementAt(CUP$Cup_Rules_SQL$top-2)), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 139: // in_array ::= element 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_array",28, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 146: // in_array ::= element 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("in_array",31, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 140: // element_in ::= IDENTIFIER 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element_in",25, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 147: // element_in ::= IDENTIFIER 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element_in",28, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 141: // element_in ::= TABDOTCOL 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element_in",25, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 148: // element_in ::= TABDOTCOL 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element_in",28, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 142: // element ::= IDENTIFIER 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element",40, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 149: // element ::= IDENTIFIER 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element",43, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 143: // element ::= INTEGER 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element",40, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 150: // element ::= INTEGER 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element",43, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 144: // element ::= REAL 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element",40, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 151: // element ::= REAL 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element",43, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 145: // element ::= LITERAL_STRING 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element",40, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 152: // element ::= LITERAL_STRING 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element",43, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 146: // element ::= TABDOTCOL 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element",40, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 153: // element ::= TABDOTCOL 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element",43, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 147: // element ::= NULL 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element",40, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 154: // element ::= NULL 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("element",43, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 148: // cmp_oper ::= _EQU 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",39, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 155: // cmp_oper ::= _EQU 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",42, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 149: // cmp_oper ::= _GT 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",39, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 156: // cmp_oper ::= _GT 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",42, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 150: // cmp_oper ::= _LT 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",39, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 157: // cmp_oper ::= _LT 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",42, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 151: // cmp_oper ::= _LET 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",39, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 158: // cmp_oper ::= _LET 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",42, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 152: // cmp_oper ::= _GET 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",39, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 159: // cmp_oper ::= _GET 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",42, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 153: // cmp_oper ::= _DIFF 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",39, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 160: // cmp_oper ::= _DIFF 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",42, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 154: // cmp_oper ::= _DIFF2 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",39, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 161: // cmp_oper ::= _DIFF2 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("cmp_oper",42, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 155: // log_oper ::= _AND 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("log_oper",38, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 162: // log_oper ::= _AND 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("log_oper",41, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
<<<<<<< HEAD
          case 156: // log_oper ::= _OR 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("log_oper",38, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
=======
          case 163: // log_oper ::= _OR 
            {
              Object RESULT =null;

              CUP$Cup_Rules_SQL$result = parser.getSymbolFactory().newSymbol("log_oper",41, ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$Cup_Rules_SQL$stack.peek()), RESULT);
>>>>>>> release-0.3_card_53
            }
          return CUP$Cup_Rules_SQL$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Cup_Rules_SQL$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$Cup_Rules_SQL$do_action(
    int                        CUP$Cup_Rules_SQL$act_num,
    java_cup.runtime.lr_parser CUP$Cup_Rules_SQL$parser,
    java.util.Stack            CUP$Cup_Rules_SQL$stack,
    int                        CUP$Cup_Rules_SQL$top)
    throws java.lang.Exception
    {
              return CUP$Cup_Rules_SQL$do_action_part00000000(
                               CUP$Cup_Rules_SQL$act_num,
                               CUP$Cup_Rules_SQL$parser,
                               CUP$Cup_Rules_SQL$stack,
                               CUP$Cup_Rules_SQL$top);
    }
}

}
